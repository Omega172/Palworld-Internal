#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Common_Inventory

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "Pal_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Common_Inventory.WBP_Common_Inventory_C
// 0x0080 (0x02F8 - 0x0278)
class UWBP_Common_Inventory_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCanvasPanel*                           Canvas_Inventory;                                  // 0x0280(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalInvisibleButton_C*              WBP_PalInvisibleButton_Sort_Inventory;             // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalPlayerInventoryScrollList_C*    WBP_PalPlayerInventoryScrollList;                  // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PlayerInventoryWeightInfo_C*       WBP_PlayerInventoryWeightInfo;                     // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalInventoryModel_C*                Model;                                             // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnClickedInventorySortButton;                      // 0x02A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnHoveredInventorySlot;                            // 0x02B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnUnhoveredInventorySlot;                          // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnLeftClickSlot;                                   // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnRightClickSlot;                                  // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void BndEvt__WBP_Common_Inventory_WBP_PalPlayerInventoryScrollList_K2Node_ComponentBoundEvent_1_OnRightClickedSlot__DelegateSignature(class UWBP_PalItemSlotButtonBase_C* ButtonBase, EPalItemSlotPressType PressType);
	void BndEvt__WBP_Common_Inventory_WBP_PalPlayerInventoryScrollList_K2Node_ComponentBoundEvent_8_OnLeftClickedSlot__DelegateSignature(class UWBP_PalItemSlotButtonBase_C* ButtonBase, EPalItemSlotPressType PressType);
	void BndEvt__WBP_IngameMenu_Chest_WBP_PalInvisibleButton_Sort_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_IngameMenu_Chest_WBP_PalPlayerInventoryScrollList_K2Node_ComponentBoundEvent_4_OnHoveredSlot__DelegateSignature(class UWBP_PalItemSlotButtonBase_C* ButtonBase);
	void BndEvt__WBP_IngameMenu_Chest_WBP_PalPlayerInventoryScrollList_K2Node_ComponentBoundEvent_5_OnEndHoveredSlot__DelegateSignature(class UWBP_PalItemSlotButtonBase_C* ButtonBase);
	void Construct();
	void ExecuteUbergraph_WBP_Common_Inventory(int32 EntryPoint);
	void FilteringInventoryByInventoryType(TArray<EPalPlayerInventoryType>& InventoryType);
	void FilteringInventoryByInventoryTypeA(TArray<EPalItemTypeA>& DisplayTypesA);
	void FilteringInventoryByInventoryTypeB(TArray<EPalItemTypeB>& DisplayTypesB);
	void GetInventoryLastHoveredFocusTarget(class UWidget** Widget);
	void GetInventoryTopFocustTarget(class UWidget** FocusTarget);
	void OnClickedInventorySortButton__DelegateSignature();
	void OnHoveredInventorySlot__DelegateSignature(class UWBP_PalItemSlotButtonBase_C* SlotButton);
	void OnLeftClickedTargetContainerSlot(class UWBP_PalItemSlotButtonBase_C* ButtonBase, EPalItemSlotPressType PressType);
	void OnLeftClickSlot__DelegateSignature(class UWBP_PalItemSlotButtonBase_C* Param_Slot, EPalItemSlotPressType PressType);
	void OnRightClickSlot__DelegateSignature(class UWBP_PalItemSlotButtonBase_C* Param_Slot, EPalItemSlotPressType PressType);
	void OnUnhoveredInventorySlot__DelegateSignature();
	void Setup(class UBP_PalInventoryModel_C* Param_Model);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Common_Inventory_C">();
	}
	static class UWBP_Common_Inventory_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Common_Inventory_C>();
	}
};
static_assert(alignof(UWBP_Common_Inventory_C) == 0x000008, "Wrong alignment on UWBP_Common_Inventory_C");
static_assert(sizeof(UWBP_Common_Inventory_C) == 0x0002F8, "Wrong size on UWBP_Common_Inventory_C");
static_assert(offsetof(UWBP_Common_Inventory_C, UberGraphFrame) == 0x000278, "Member 'UWBP_Common_Inventory_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Common_Inventory_C, Canvas_Inventory) == 0x000280, "Member 'UWBP_Common_Inventory_C::Canvas_Inventory' has a wrong offset!");
static_assert(offsetof(UWBP_Common_Inventory_C, WBP_PalInvisibleButton_Sort_Inventory) == 0x000288, "Member 'UWBP_Common_Inventory_C::WBP_PalInvisibleButton_Sort_Inventory' has a wrong offset!");
static_assert(offsetof(UWBP_Common_Inventory_C, WBP_PalPlayerInventoryScrollList) == 0x000290, "Member 'UWBP_Common_Inventory_C::WBP_PalPlayerInventoryScrollList' has a wrong offset!");
static_assert(offsetof(UWBP_Common_Inventory_C, WBP_PlayerInventoryWeightInfo) == 0x000298, "Member 'UWBP_Common_Inventory_C::WBP_PlayerInventoryWeightInfo' has a wrong offset!");
static_assert(offsetof(UWBP_Common_Inventory_C, Model) == 0x0002A0, "Member 'UWBP_Common_Inventory_C::Model' has a wrong offset!");
static_assert(offsetof(UWBP_Common_Inventory_C, OnClickedInventorySortButton) == 0x0002A8, "Member 'UWBP_Common_Inventory_C::OnClickedInventorySortButton' has a wrong offset!");
static_assert(offsetof(UWBP_Common_Inventory_C, OnHoveredInventorySlot) == 0x0002B8, "Member 'UWBP_Common_Inventory_C::OnHoveredInventorySlot' has a wrong offset!");
static_assert(offsetof(UWBP_Common_Inventory_C, OnUnhoveredInventorySlot) == 0x0002C8, "Member 'UWBP_Common_Inventory_C::OnUnhoveredInventorySlot' has a wrong offset!");
static_assert(offsetof(UWBP_Common_Inventory_C, OnLeftClickSlot) == 0x0002D8, "Member 'UWBP_Common_Inventory_C::OnLeftClickSlot' has a wrong offset!");
static_assert(offsetof(UWBP_Common_Inventory_C, OnRightClickSlot) == 0x0002E8, "Member 'UWBP_Common_Inventory_C::OnRightClickSlot' has a wrong offset!");

}

