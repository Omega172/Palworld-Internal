#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AttackWarningLoupe

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "WBP_LoupeBase_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_AttackWarningLoupe.WBP_AttackWarningLoupe_C
// 0x0020 (0x04A8 - 0x0488)
class UWBP_AttackWarningLoupe_C final : public UWBP_LoupeBase_C
{
public:
	class UImage*                                 Loupe_Angle;                                       // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0490(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CalcScreenPosition();
	void GetLoupeWidgetSize(struct FVector2D* Param_WidgetSize);
	void GetTargetWidgetSize(struct FVector2D* OutVector);
	void GetTargetWorldLocation(struct FVector* OutVector);
	bool IsEnableLoupe();
	void SetFinalWidgetOpacity(double CalcedOpacity);
	void Setup(const struct FVector& Param_TargetLocation);
	void UpdateArrowImageAngle(double NewAngle);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_AttackWarningLoupe_C">();
	}
	static class UWBP_AttackWarningLoupe_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_AttackWarningLoupe_C>();
	}
};
static_assert(alignof(UWBP_AttackWarningLoupe_C) == 0x000008, "Wrong alignment on UWBP_AttackWarningLoupe_C");
static_assert(sizeof(UWBP_AttackWarningLoupe_C) == 0x0004A8, "Wrong size on UWBP_AttackWarningLoupe_C");
static_assert(offsetof(UWBP_AttackWarningLoupe_C, Loupe_Angle) == 0x000488, "Member 'UWBP_AttackWarningLoupe_C::Loupe_Angle' has a wrong offset!");
static_assert(offsetof(UWBP_AttackWarningLoupe_C, TargetLocation) == 0x000490, "Member 'UWBP_AttackWarningLoupe_C::TargetLocation' has a wrong offset!");

}

