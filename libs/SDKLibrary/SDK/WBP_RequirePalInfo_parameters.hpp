#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_RequirePalInfo

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "Pal_structs.hpp"


namespace SDK::Params
{

// Function WBP_RequirePalInfo.WBP_RequirePalInfo_C.ExecuteUbergraph_WBP_RequirePalInfo
// 0x0038 (0x0038 - 0x0000)
struct WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldDisplayPathDetail_ReturnValue;      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B00[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B01[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_PalCraftInfo_Pal_C*>        K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWBP_PalCraftInfo_Pal_C*                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldDisplayPathDetail_ReturnValue_1;    // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo) == 0x000008, "Wrong alignment on WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo");
static_assert(sizeof(WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo) == 0x000038, "Wrong size on WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo");
static_assert(offsetof(WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo, EntryPoint) == 0x000000, "Member 'WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo, CallFunc_ShouldDisplayPathDetail_ReturnValue) == 0x000004, "Member 'WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo::CallFunc_ShouldDisplayPathDetail_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo, K2Node_MakeArray_Array) == 0x000018, "Member 'WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo, CallFunc_ShouldDisplayPathDetail_ReturnValue_1) == 0x000035, "Member 'WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo::CallFunc_ShouldDisplayPathDetail_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000036, "Member 'WBP_RequirePalInfo_C_ExecuteUbergraph_WBP_RequirePalInfo::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function WBP_RequirePalInfo.WBP_RequirePalInfo_C.OnChangeRegisteredMapObjectCannotApproach
// 0x0010 (0x0010 - 0x0000)
struct WBP_RequirePalInfo_C_OnChangeRegisteredMapObjectCannotApproach final
{
public:
	class UPalMapObjectWorkeeModule*              Module;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CannotApproachByWork_ReturnValue;         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RequirePalInfo_C_OnChangeRegisteredMapObjectCannotApproach) == 0x000008, "Wrong alignment on WBP_RequirePalInfo_C_OnChangeRegisteredMapObjectCannotApproach");
static_assert(sizeof(WBP_RequirePalInfo_C_OnChangeRegisteredMapObjectCannotApproach) == 0x000010, "Wrong size on WBP_RequirePalInfo_C_OnChangeRegisteredMapObjectCannotApproach");
static_assert(offsetof(WBP_RequirePalInfo_C_OnChangeRegisteredMapObjectCannotApproach, Module) == 0x000000, "Member 'WBP_RequirePalInfo_C_OnChangeRegisteredMapObjectCannotApproach::Module' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_OnChangeRegisteredMapObjectCannotApproach, Temp_bool_Variable) == 0x000008, "Member 'WBP_RequirePalInfo_C_OnChangeRegisteredMapObjectCannotApproach::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_OnChangeRegisteredMapObjectCannotApproach, CallFunc_CannotApproachByWork_ReturnValue) == 0x000009, "Member 'WBP_RequirePalInfo_C_OnChangeRegisteredMapObjectCannotApproach::CallFunc_CannotApproachByWork_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_OnChangeRegisteredMapObjectCannotApproach, Temp_byte_Variable) == 0x00000A, "Member 'WBP_RequirePalInfo_C_OnChangeRegisteredMapObjectCannotApproach::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_OnChangeRegisteredMapObjectCannotApproach, Temp_byte_Variable_1) == 0x00000B, "Member 'WBP_RequirePalInfo_C_OnChangeRegisteredMapObjectCannotApproach::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_OnChangeRegisteredMapObjectCannotApproach, K2Node_Select_Default) == 0x00000C, "Member 'WBP_RequirePalInfo_C_OnChangeRegisteredMapObjectCannotApproach::K2Node_Select_Default' has a wrong offset!");

// Function WBP_RequirePalInfo.WBP_RequirePalInfo_C.OnReadyRegisteredMapObjectConcreteModel
// 0x0018 (0x0018 - 0x0000)
struct WBP_RequirePalInfo_C_OnReadyRegisteredMapObjectConcreteModel final
{
public:
	class UPalMapObjectConcreteModelBase*         Model;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPalMapObjectConcreteModelBase* Model, class UPalMapObjectConcreteModelModuleBase* Module)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RequirePalInfo_C_OnReadyRegisteredMapObjectConcreteModel) == 0x000008, "Wrong alignment on WBP_RequirePalInfo_C_OnReadyRegisteredMapObjectConcreteModel");
static_assert(sizeof(WBP_RequirePalInfo_C_OnReadyRegisteredMapObjectConcreteModel) == 0x000018, "Wrong size on WBP_RequirePalInfo_C_OnReadyRegisteredMapObjectConcreteModel");
static_assert(offsetof(WBP_RequirePalInfo_C_OnReadyRegisteredMapObjectConcreteModel, Model) == 0x000000, "Member 'WBP_RequirePalInfo_C_OnReadyRegisteredMapObjectConcreteModel::Model' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_OnReadyRegisteredMapObjectConcreteModel, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_RequirePalInfo_C_OnReadyRegisteredMapObjectConcreteModel::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WBP_RequirePalInfo.WBP_RequirePalInfo_C.OnReadyRegisteredMapObjectWorkeeModule
// 0x0030 (0x0030 - 0x0000)
struct WBP_RequirePalInfo_C_OnReadyRegisteredMapObjectWorkeeModule final
{
public:
	class UPalMapObjectConcreteModelBase*         Model;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalMapObjectConcreteModelModuleBase*   Module;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPalMapObjectWorkeeModule* Module)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalMapObjectWorkeeModule*              K2Node_DynamicCast_AsPal_Map_Object_Workee_Module; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RequirePalInfo_C_OnReadyRegisteredMapObjectWorkeeModule) == 0x000008, "Wrong alignment on WBP_RequirePalInfo_C_OnReadyRegisteredMapObjectWorkeeModule");
static_assert(sizeof(WBP_RequirePalInfo_C_OnReadyRegisteredMapObjectWorkeeModule) == 0x000030, "Wrong size on WBP_RequirePalInfo_C_OnReadyRegisteredMapObjectWorkeeModule");
static_assert(offsetof(WBP_RequirePalInfo_C_OnReadyRegisteredMapObjectWorkeeModule, Model) == 0x000000, "Member 'WBP_RequirePalInfo_C_OnReadyRegisteredMapObjectWorkeeModule::Model' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_OnReadyRegisteredMapObjectWorkeeModule, Module) == 0x000008, "Member 'WBP_RequirePalInfo_C_OnReadyRegisteredMapObjectWorkeeModule::Module' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_OnReadyRegisteredMapObjectWorkeeModule, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WBP_RequirePalInfo_C_OnReadyRegisteredMapObjectWorkeeModule::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_OnReadyRegisteredMapObjectWorkeeModule, K2Node_DynamicCast_AsPal_Map_Object_Workee_Module) == 0x000020, "Member 'WBP_RequirePalInfo_C_OnReadyRegisteredMapObjectWorkeeModule::K2Node_DynamicCast_AsPal_Map_Object_Workee_Module' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_OnReadyRegisteredMapObjectWorkeeModule, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_RequirePalInfo_C_OnReadyRegisteredMapObjectWorkeeModule::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_RequirePalInfo.WBP_RequirePalInfo_C.Play Path Animation
// 0x0030 (0x0030 - 0x0000)
struct WBP_RequirePalInfo_C_Play_Path_Animation final
{
public:
	bool                                          bToDetails;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFinishImmediately;                                // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B02[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B03[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimation_StartAtTime_ImplicitCast;   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RequirePalInfo_C_Play_Path_Animation) == 0x000008, "Wrong alignment on WBP_RequirePalInfo_C_Play_Path_Animation");
static_assert(sizeof(WBP_RequirePalInfo_C_Play_Path_Animation) == 0x000030, "Wrong size on WBP_RequirePalInfo_C_Play_Path_Animation");
static_assert(offsetof(WBP_RequirePalInfo_C_Play_Path_Animation, bToDetails) == 0x000000, "Member 'WBP_RequirePalInfo_C_Play_Path_Animation::bToDetails' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Play_Path_Animation, bFinishImmediately) == 0x000001, "Member 'WBP_RequirePalInfo_C_Play_Path_Animation::bFinishImmediately' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Play_Path_Animation, Temp_bool_Variable) == 0x000002, "Member 'WBP_RequirePalInfo_C_Play_Path_Animation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Play_Path_Animation, Temp_byte_Variable) == 0x000003, "Member 'WBP_RequirePalInfo_C_Play_Path_Animation::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Play_Path_Animation, Temp_byte_Variable_1) == 0x000004, "Member 'WBP_RequirePalInfo_C_Play_Path_Animation::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Play_Path_Animation, K2Node_Select_Default) == 0x000005, "Member 'WBP_RequirePalInfo_C_Play_Path_Animation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Play_Path_Animation, CallFunc_GetEndTime_ReturnValue) == 0x000008, "Member 'WBP_RequirePalInfo_C_Play_Path_Animation::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Play_Path_Animation, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'WBP_RequirePalInfo_C_Play_Path_Animation::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Play_Path_Animation, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'WBP_RequirePalInfo_C_Play_Path_Animation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Play_Path_Animation, CallFunc_SelectFloat_A_ImplicitCast) == 0x000020, "Member 'WBP_RequirePalInfo_C_Play_Path_Animation::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Play_Path_Animation, CallFunc_PlayAnimation_StartAtTime_ImplicitCast) == 0x000028, "Member 'WBP_RequirePalInfo_C_Play_Path_Animation::CallFunc_PlayAnimation_StartAtTime_ImplicitCast' has a wrong offset!");

// Function WBP_RequirePalInfo.WBP_RequirePalInfo_C.RegisterOwnerMapObject
// 0x0030 (0x0030 - 0x0000)
struct WBP_RequirePalInfo_C_RegisterOwnerMapObject final
{
public:
	class APalMapObject*                          Param_OwnerMapObject;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPalMapObjectConcreteModelBase* Model)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RequirePalInfo_C_RegisterOwnerMapObject) == 0x000008, "Wrong alignment on WBP_RequirePalInfo_C_RegisterOwnerMapObject");
static_assert(sizeof(WBP_RequirePalInfo_C_RegisterOwnerMapObject) == 0x000030, "Wrong size on WBP_RequirePalInfo_C_RegisterOwnerMapObject");
static_assert(offsetof(WBP_RequirePalInfo_C_RegisterOwnerMapObject, Param_OwnerMapObject) == 0x000000, "Member 'WBP_RequirePalInfo_C_RegisterOwnerMapObject::Param_OwnerMapObject' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_RegisterOwnerMapObject, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_RequirePalInfo_C_RegisterOwnerMapObject::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_RegisterOwnerMapObject, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'WBP_RequirePalInfo_C_RegisterOwnerMapObject::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_RegisterOwnerMapObject, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'WBP_RequirePalInfo_C_RegisterOwnerMapObject::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function WBP_RequirePalInfo.WBP_RequirePalInfo_C.Set Work Suitability
// 0x0108 (0x0108 - 0x0000)
struct WBP_RequirePalInfo_C_Set_Work_Suitability final
{
public:
	EPalWorkSuitability                           WorkSuitability;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B04[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RequireRank;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   WorkSuitabilityName;                               // 0x0008(0x0018)(Edit, BlueprintVisible)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B05[0x5];                                     // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0050)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B06[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B07[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLocalizedTextFromHandle_Text;          // 0x0098(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B0(0x0018)()
	class FText                                   CallFunc_GetWorkSuitabilityName_outName;           // 0x00C8(0x0018)()
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B08[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00E8(0x0018)()
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RequirePalInfo_C_Set_Work_Suitability) == 0x000008, "Wrong alignment on WBP_RequirePalInfo_C_Set_Work_Suitability");
static_assert(sizeof(WBP_RequirePalInfo_C_Set_Work_Suitability) == 0x000108, "Wrong size on WBP_RequirePalInfo_C_Set_Work_Suitability");
static_assert(offsetof(WBP_RequirePalInfo_C_Set_Work_Suitability, WorkSuitability) == 0x000000, "Member 'WBP_RequirePalInfo_C_Set_Work_Suitability::WorkSuitability' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Set_Work_Suitability, RequireRank) == 0x000004, "Member 'WBP_RequirePalInfo_C_Set_Work_Suitability::RequireRank' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Set_Work_Suitability, WorkSuitabilityName) == 0x000008, "Member 'WBP_RequirePalInfo_C_Set_Work_Suitability::WorkSuitabilityName' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Set_Work_Suitability, Temp_byte_Variable) == 0x000020, "Member 'WBP_RequirePalInfo_C_Set_Work_Suitability::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Set_Work_Suitability, Temp_byte_Variable_1) == 0x000021, "Member 'WBP_RequirePalInfo_C_Set_Work_Suitability::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Set_Work_Suitability, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000022, "Member 'WBP_RequirePalInfo_C_Set_Work_Suitability::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Set_Work_Suitability, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'WBP_RequirePalInfo_C_Set_Work_Suitability::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Set_Work_Suitability, Temp_bool_Variable) == 0x000078, "Member 'WBP_RequirePalInfo_C_Set_Work_Suitability::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Set_Work_Suitability, K2Node_MakeArray_Array) == 0x000080, "Member 'WBP_RequirePalInfo_C_Set_Work_Suitability::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Set_Work_Suitability, K2Node_Select_Default) == 0x000090, "Member 'WBP_RequirePalInfo_C_Set_Work_Suitability::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Set_Work_Suitability, CallFunc_GetLocalizedTextFromHandle_Text) == 0x000098, "Member 'WBP_RequirePalInfo_C_Set_Work_Suitability::CallFunc_GetLocalizedTextFromHandle_Text' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Set_Work_Suitability, CallFunc_Format_ReturnValue) == 0x0000B0, "Member 'WBP_RequirePalInfo_C_Set_Work_Suitability::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Set_Work_Suitability, CallFunc_GetWorkSuitabilityName_outName) == 0x0000C8, "Member 'WBP_RequirePalInfo_C_Set_Work_Suitability::CallFunc_GetWorkSuitabilityName_outName' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Set_Work_Suitability, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000E0, "Member 'WBP_RequirePalInfo_C_Set_Work_Suitability::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Set_Work_Suitability, CallFunc_Conv_IntToText_ReturnValue) == 0x0000E8, "Member 'WBP_RequirePalInfo_C_Set_Work_Suitability::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Set_Work_Suitability, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000100, "Member 'WBP_RequirePalInfo_C_Set_Work_Suitability::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function WBP_RequirePalInfo.WBP_RequirePalInfo_C.SetupBulletRequire
// 0x0020 (0x0020 - 0x0000)
struct WBP_RequirePalInfo_C_SetupBulletRequire final
{
public:
	class UPalMapObjectDefenseBulletLauncherModel* LauncherModel;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRemainingBulletsNum_ReturnValue;       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 Num)>                    K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RequirePalInfo_C_SetupBulletRequire) == 0x000008, "Wrong alignment on WBP_RequirePalInfo_C_SetupBulletRequire");
static_assert(sizeof(WBP_RequirePalInfo_C_SetupBulletRequire) == 0x000020, "Wrong size on WBP_RequirePalInfo_C_SetupBulletRequire");
static_assert(offsetof(WBP_RequirePalInfo_C_SetupBulletRequire, LauncherModel) == 0x000000, "Member 'WBP_RequirePalInfo_C_SetupBulletRequire::LauncherModel' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetupBulletRequire, CallFunc_GetRemainingBulletsNum_ReturnValue) == 0x000008, "Member 'WBP_RequirePalInfo_C_SetupBulletRequire::CallFunc_GetRemainingBulletsNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetupBulletRequire, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'WBP_RequirePalInfo_C_SetupBulletRequire::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WBP_RequirePalInfo.WBP_RequirePalInfo_C.SetupPowerSuffcient
// 0x0020 (0x0020 - 0x0000)
struct WBP_RequirePalInfo_C_SetupPowerSuffcient final
{
public:
	class UPalMapObjectEnergyModule*              Module;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRequiredEnergy_ReturnValue;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B09[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UPalMapObjectEnergyModule* Module)> K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RequirePalInfo_C_SetupPowerSuffcient) == 0x000008, "Wrong alignment on WBP_RequirePalInfo_C_SetupPowerSuffcient");
static_assert(sizeof(WBP_RequirePalInfo_C_SetupPowerSuffcient) == 0x000020, "Wrong size on WBP_RequirePalInfo_C_SetupPowerSuffcient");
static_assert(offsetof(WBP_RequirePalInfo_C_SetupPowerSuffcient, Module) == 0x000000, "Member 'WBP_RequirePalInfo_C_SetupPowerSuffcient::Module' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetupPowerSuffcient, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_RequirePalInfo_C_SetupPowerSuffcient::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetupPowerSuffcient, CallFunc_IsRequiredEnergy_ReturnValue) == 0x000009, "Member 'WBP_RequirePalInfo_C_SetupPowerSuffcient::CallFunc_IsRequiredEnergy_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetupPowerSuffcient, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'WBP_RequirePalInfo_C_SetupPowerSuffcient::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WBP_RequirePalInfo.WBP_RequirePalInfo_C.SetWarning_Genus_Type
// 0x0160 (0x0160 - 0x0000)
struct WBP_RequirePalInfo_C_SetWarning_Genus_Type final
{
public:
	class FText                                   GenusNames;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   TypeNames;                                         // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B0A[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLocalizedTextFromHandle_Text;          // 0x0098(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B0(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue_1;                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B0B[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00D0(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_GetLocalizedTextFromHandle_Text_1;        // 0x0120(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0138(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0148(0x0018)()
};
static_assert(alignof(WBP_RequirePalInfo_C_SetWarning_Genus_Type) == 0x000008, "Wrong alignment on WBP_RequirePalInfo_C_SetWarning_Genus_Type");
static_assert(sizeof(WBP_RequirePalInfo_C_SetWarning_Genus_Type) == 0x000160, "Wrong size on WBP_RequirePalInfo_C_SetWarning_Genus_Type");
static_assert(offsetof(WBP_RequirePalInfo_C_SetWarning_Genus_Type, GenusNames) == 0x000000, "Member 'WBP_RequirePalInfo_C_SetWarning_Genus_Type::GenusNames' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetWarning_Genus_Type, TypeNames) == 0x000018, "Member 'WBP_RequirePalInfo_C_SetWarning_Genus_Type::TypeNames' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetWarning_Genus_Type, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'WBP_RequirePalInfo_C_SetWarning_Genus_Type::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetWarning_Genus_Type, K2Node_MakeArray_Array) == 0x000080, "Member 'WBP_RequirePalInfo_C_SetWarning_Genus_Type::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetWarning_Genus_Type, CallFunc_TextIsEmpty_ReturnValue) == 0x000090, "Member 'WBP_RequirePalInfo_C_SetWarning_Genus_Type::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetWarning_Genus_Type, CallFunc_GetLocalizedTextFromHandle_Text) == 0x000098, "Member 'WBP_RequirePalInfo_C_SetWarning_Genus_Type::CallFunc_GetLocalizedTextFromHandle_Text' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetWarning_Genus_Type, CallFunc_Format_ReturnValue) == 0x0000B0, "Member 'WBP_RequirePalInfo_C_SetWarning_Genus_Type::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetWarning_Genus_Type, CallFunc_TextIsEmpty_ReturnValue_1) == 0x0000C8, "Member 'WBP_RequirePalInfo_C_SetWarning_Genus_Type::CallFunc_TextIsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetWarning_Genus_Type, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000D0, "Member 'WBP_RequirePalInfo_C_SetWarning_Genus_Type::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetWarning_Genus_Type, CallFunc_GetLocalizedTextFromHandle_Text_1) == 0x000120, "Member 'WBP_RequirePalInfo_C_SetWarning_Genus_Type::CallFunc_GetLocalizedTextFromHandle_Text_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetWarning_Genus_Type, K2Node_MakeArray_Array_1) == 0x000138, "Member 'WBP_RequirePalInfo_C_SetWarning_Genus_Type::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_SetWarning_Genus_Type, CallFunc_Format_ReturnValue_1) == 0x000148, "Member 'WBP_RequirePalInfo_C_SetWarning_Genus_Type::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function WBP_RequirePalInfo.WBP_RequirePalInfo_C.ShouldDisplayPathDetail
// 0x0070 (0x0070 - 0x0000)
struct WBP_RequirePalInfo_C_ShouldDisplayPathDetail final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B0C[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalGameSetting*                        CallFunc_GetGameSetting_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B0D[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APalPlayerCharacter*                    CallFunc_GetPalmi_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B0E[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B0F[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_B_ImplicitCast;         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RequirePalInfo_C_ShouldDisplayPathDetail) == 0x000008, "Wrong alignment on WBP_RequirePalInfo_C_ShouldDisplayPathDetail");
static_assert(sizeof(WBP_RequirePalInfo_C_ShouldDisplayPathDetail) == 0x000070, "Wrong size on WBP_RequirePalInfo_C_ShouldDisplayPathDetail");
static_assert(offsetof(WBP_RequirePalInfo_C_ShouldDisplayPathDetail, ReturnValue) == 0x000000, "Member 'WBP_RequirePalInfo_C_ShouldDisplayPathDetail::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_ShouldDisplayPathDetail, CallFunc_GetGameSetting_ReturnValue) == 0x000008, "Member 'WBP_RequirePalInfo_C_ShouldDisplayPathDetail::CallFunc_GetGameSetting_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_ShouldDisplayPathDetail, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_RequirePalInfo_C_ShouldDisplayPathDetail::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_ShouldDisplayPathDetail, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'WBP_RequirePalInfo_C_ShouldDisplayPathDetail::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_ShouldDisplayPathDetail, CallFunc_GetPalmi_ReturnValue) == 0x000030, "Member 'WBP_RequirePalInfo_C_ShouldDisplayPathDetail::CallFunc_GetPalmi_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_ShouldDisplayPathDetail, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000038, "Member 'WBP_RequirePalInfo_C_ShouldDisplayPathDetail::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_ShouldDisplayPathDetail, CallFunc_IsValid_ReturnValue_1) == 0x000050, "Member 'WBP_RequirePalInfo_C_ShouldDisplayPathDetail::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_ShouldDisplayPathDetail, CallFunc_Vector_Distance_ReturnValue) == 0x000058, "Member 'WBP_RequirePalInfo_C_ShouldDisplayPathDetail::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_ShouldDisplayPathDetail, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000060, "Member 'WBP_RequirePalInfo_C_ShouldDisplayPathDetail::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_ShouldDisplayPathDetail, CallFunc_Less_DoubleDouble_B_ImplicitCast) == 0x000068, "Member 'WBP_RequirePalInfo_C_ShouldDisplayPathDetail::CallFunc_Less_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function WBP_RequirePalInfo.WBP_RequirePalInfo_C.Update Display
// 0x0170 (0x0170 - 0x0000)
struct WBP_RequirePalInfo_C_Update_Display final
{
public:
	class UPalWorkBase*                           Work;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPalWorkSuitability                           WorkSuitability;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B10[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RequireRank;                                       // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAssigned;                                        // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B11[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 TypeNames;                                         // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 GenusNames;                                        // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B12[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B13[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B14[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPalWorkAssignInfo>             CallFunc_GetWorkAssignInfo_OutWorkAssignInfo;      // 0x0060(0x0010)(ReferenceParm)
	struct FPalWorkAssignInfo                     CallFunc_Array_Get_Item;                           // 0x0070(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAssigned_ReturnValue;                   // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue_1;                    // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B15[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B16[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B17[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           CallFunc_GetWorkableElementTypeNames_outElementNames; // 0x00A0(0x0010)(ReferenceParm)
	TArray<class FText>                           CallFunc_GetGenusCategorieNames_outGenusCategorieNames; // 0x00B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Array_Get_Item_1;                         // 0x00C0(0x0018)()
	class FText                                   CallFunc_Array_Get_Item_2;                         // 0x00D8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B18[0x6];                                     // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0120(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0138(0x0018)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RequirePalInfo_C_Update_Display) == 0x000008, "Wrong alignment on WBP_RequirePalInfo_C_Update_Display");
static_assert(sizeof(WBP_RequirePalInfo_C_Update_Display) == 0x000170, "Wrong size on WBP_RequirePalInfo_C_Update_Display");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, Work) == 0x000000, "Member 'WBP_RequirePalInfo_C_Update_Display::Work' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, WorkSuitability) == 0x000008, "Member 'WBP_RequirePalInfo_C_Update_Display::WorkSuitability' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, RequireRank) == 0x00000C, "Member 'WBP_RequirePalInfo_C_Update_Display::RequireRank' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, IsAssigned) == 0x000010, "Member 'WBP_RequirePalInfo_C_Update_Display::IsAssigned' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, TypeNames) == 0x000018, "Member 'WBP_RequirePalInfo_C_Update_Display::TypeNames' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, GenusNames) == 0x000028, "Member 'WBP_RequirePalInfo_C_Update_Display::GenusNames' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'WBP_RequirePalInfo_C_Update_Display::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'WBP_RequirePalInfo_C_Update_Display::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, Temp_bool_True_if_break_was_hit_Variable) == 0x000044, "Member 'WBP_RequirePalInfo_C_Update_Display::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Not_PreBool_ReturnValue) == 0x000045, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, Temp_int_Loop_Counter_Variable_1) == 0x00004C, "Member 'WBP_RequirePalInfo_C_Update_Display::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, Temp_int_Array_Index_Variable_1) == 0x000054, "Member 'WBP_RequirePalInfo_C_Update_Display::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, Temp_int_Array_Index_Variable_2) == 0x000058, "Member 'WBP_RequirePalInfo_C_Update_Display::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_GetWorkAssignInfo_OutWorkAssignInfo) == 0x000060, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_GetWorkAssignInfo_OutWorkAssignInfo' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Array_Get_Item) == 0x000070, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_IsAssigned_ReturnValue) == 0x000084, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_IsAssigned_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Not_PreBool_ReturnValue_1) == 0x000085, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000086, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_IsEmpty_ReturnValue) == 0x000087, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Not_PreBool_ReturnValue_2) == 0x000088, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_IsEmpty_ReturnValue_1) == 0x000089, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_IsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Not_PreBool_ReturnValue_3) == 0x00008A, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_BooleanOR_ReturnValue) == 0x00008B, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_BooleanOR_ReturnValue_1) == 0x00008C, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, Temp_int_Loop_Counter_Variable_2) == 0x000090, "Member 'WBP_RequirePalInfo_C_Update_Display::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Add_IntInt_ReturnValue_2) == 0x000098, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_BooleanAND_ReturnValue) == 0x00009C, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_GetWorkableElementTypeNames_outElementNames) == 0x0000A0, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_GetWorkableElementTypeNames_outElementNames' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_GetGenusCategorieNames_outGenusCategorieNames) == 0x0000B0, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_GetGenusCategorieNames_outGenusCategorieNames' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Array_Get_Item_1) == 0x0000C0, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Array_Get_Item_2) == 0x0000D8, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Conv_TextToString_ReturnValue) == 0x0000F0, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000100, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Array_Length_ReturnValue_1) == 0x000110, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Array_Length_ReturnValue_2) == 0x000114, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Less_IntInt_ReturnValue_1) == 0x000118, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Less_IntInt_ReturnValue_2) == 0x000119, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Conv_StringToText_ReturnValue) == 0x000120, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000138, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Concat_StrStr_ReturnValue) == 0x000150, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Display, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000160, "Member 'WBP_RequirePalInfo_C_Update_Display::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function WBP_RequirePalInfo.WBP_RequirePalInfo_C.Update Power Suffcient
// 0x0010 (0x0010 - 0x0000)
struct WBP_RequirePalInfo_C_Update_Power_Suffcient final
{
public:
	class UPalMapObjectEnergyModule*              Module;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanConsumeEnergy_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RequirePalInfo_C_Update_Power_Suffcient) == 0x000008, "Wrong alignment on WBP_RequirePalInfo_C_Update_Power_Suffcient");
static_assert(sizeof(WBP_RequirePalInfo_C_Update_Power_Suffcient) == 0x000010, "Wrong size on WBP_RequirePalInfo_C_Update_Power_Suffcient");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Power_Suffcient, Module) == 0x000000, "Member 'WBP_RequirePalInfo_C_Update_Power_Suffcient::Module' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_Update_Power_Suffcient, CallFunc_CanConsumeEnergy_ReturnValue) == 0x000008, "Member 'WBP_RequirePalInfo_C_Update_Power_Suffcient::CallFunc_CanConsumeEnergy_ReturnValue' has a wrong offset!");

// Function WBP_RequirePalInfo.WBP_RequirePalInfo_C.UpdateBulletRequire
// 0x000C (0x000C - 0x0000)
struct WBP_RequirePalInfo_C_UpdateBulletRequire final
{
public:
	int32                                         BulletNum;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_RequirePalInfo_C_UpdateBulletRequire) == 0x000004, "Wrong alignment on WBP_RequirePalInfo_C_UpdateBulletRequire");
static_assert(sizeof(WBP_RequirePalInfo_C_UpdateBulletRequire) == 0x00000C, "Wrong size on WBP_RequirePalInfo_C_UpdateBulletRequire");
static_assert(offsetof(WBP_RequirePalInfo_C_UpdateBulletRequire, BulletNum) == 0x000000, "Member 'WBP_RequirePalInfo_C_UpdateBulletRequire::BulletNum' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_UpdateBulletRequire, Temp_byte_Variable) == 0x000004, "Member 'WBP_RequirePalInfo_C_UpdateBulletRequire::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_UpdateBulletRequire, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000005, "Member 'WBP_RequirePalInfo_C_UpdateBulletRequire::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_UpdateBulletRequire, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_RequirePalInfo_C_UpdateBulletRequire::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_UpdateBulletRequire, Temp_bool_Variable) == 0x000007, "Member 'WBP_RequirePalInfo_C_UpdateBulletRequire::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_UpdateBulletRequire, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_RequirePalInfo_C_UpdateBulletRequire::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_UpdateBulletRequire, K2Node_Select_Default) == 0x000009, "Member 'WBP_RequirePalInfo_C_UpdateBulletRequire::K2Node_Select_Default' has a wrong offset!");

// Function WBP_RequirePalInfo.WBP_RequirePalInfo_C.UpdatePowerOrBulletRequireDisplay
// 0x0140 (0x0140 - 0x0000)
struct WBP_RequirePalInfo_C_UpdatePowerOrBulletRequireDisplay final
{
public:
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_2;                // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0030(0x0014)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B19[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetBulletName_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetItemName_outName;                      // 0x0050(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0068(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_GetLocalizedTextFromHandle_Text;          // 0x00C8(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B1A[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E8(0x0018)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0100(0x0014)()
	uint8                                         Pad_4B1B[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    K2Node_Select_Default;                             // 0x0118(0x0010)(NoDestructor)
	class FText                                   CallFunc_GetLocalizedTextFromHandle_Text_1;        // 0x0128(0x0018)()
};
static_assert(alignof(WBP_RequirePalInfo_C_UpdatePowerOrBulletRequireDisplay) == 0x000008, "Wrong alignment on WBP_RequirePalInfo_C_UpdatePowerOrBulletRequireDisplay");
static_assert(sizeof(WBP_RequirePalInfo_C_UpdatePowerOrBulletRequireDisplay) == 0x000140, "Wrong size on WBP_RequirePalInfo_C_UpdatePowerOrBulletRequireDisplay");
static_assert(offsetof(WBP_RequirePalInfo_C_UpdatePowerOrBulletRequireDisplay, CallFunc_SelectColor_ReturnValue) == 0x000000, "Member 'WBP_RequirePalInfo_C_UpdatePowerOrBulletRequireDisplay::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_UpdatePowerOrBulletRequireDisplay, CallFunc_SelectColor_ReturnValue_1) == 0x000010, "Member 'WBP_RequirePalInfo_C_UpdatePowerOrBulletRequireDisplay::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_UpdatePowerOrBulletRequireDisplay, CallFunc_SelectColor_ReturnValue_2) == 0x000020, "Member 'WBP_RequirePalInfo_C_UpdatePowerOrBulletRequireDisplay::CallFunc_SelectColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_UpdatePowerOrBulletRequireDisplay, K2Node_MakeStruct_SlateColor) == 0x000030, "Member 'WBP_RequirePalInfo_C_UpdatePowerOrBulletRequireDisplay::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_UpdatePowerOrBulletRequireDisplay, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'WBP_RequirePalInfo_C_UpdatePowerOrBulletRequireDisplay::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_UpdatePowerOrBulletRequireDisplay, CallFunc_GetBulletName_ReturnValue) == 0x000048, "Member 'WBP_RequirePalInfo_C_UpdatePowerOrBulletRequireDisplay::CallFunc_GetBulletName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_UpdatePowerOrBulletRequireDisplay, CallFunc_GetItemName_outName) == 0x000050, "Member 'WBP_RequirePalInfo_C_UpdatePowerOrBulletRequireDisplay::CallFunc_GetItemName_outName' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_UpdatePowerOrBulletRequireDisplay, K2Node_MakeStruct_FormatArgumentData) == 0x000068, "Member 'WBP_RequirePalInfo_C_UpdatePowerOrBulletRequireDisplay::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_UpdatePowerOrBulletRequireDisplay, K2Node_MakeArray_Array) == 0x0000B8, "Member 'WBP_RequirePalInfo_C_UpdatePowerOrBulletRequireDisplay::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_UpdatePowerOrBulletRequireDisplay, CallFunc_GetLocalizedTextFromHandle_Text) == 0x0000C8, "Member 'WBP_RequirePalInfo_C_UpdatePowerOrBulletRequireDisplay::CallFunc_GetLocalizedTextFromHandle_Text' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_UpdatePowerOrBulletRequireDisplay, Temp_bool_Variable) == 0x0000E0, "Member 'WBP_RequirePalInfo_C_UpdatePowerOrBulletRequireDisplay::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_UpdatePowerOrBulletRequireDisplay, CallFunc_Format_ReturnValue) == 0x0000E8, "Member 'WBP_RequirePalInfo_C_UpdatePowerOrBulletRequireDisplay::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_UpdatePowerOrBulletRequireDisplay, K2Node_MakeStruct_SlateColor_1) == 0x000100, "Member 'WBP_RequirePalInfo_C_UpdatePowerOrBulletRequireDisplay::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_UpdatePowerOrBulletRequireDisplay, K2Node_Select_Default) == 0x000118, "Member 'WBP_RequirePalInfo_C_UpdatePowerOrBulletRequireDisplay::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_RequirePalInfo_C_UpdatePowerOrBulletRequireDisplay, CallFunc_GetLocalizedTextFromHandle_Text_1) == 0x000128, "Member 'WBP_RequirePalInfo_C_UpdatePowerOrBulletRequireDisplay::CallFunc_GetLocalizedTextFromHandle_Text_1' has a wrong offset!");

}

