#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AttackWarningLoupe

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_AttackWarningLoupe.WBP_AttackWarningLoupe_C.CalcScreenPosition
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_AttackWarningLoupe_C_CalcScreenPosition final
{
public:
	struct FVector                                CallFunc_GetTargetWorldLocation_outVector;         // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetLocalPlayerController_ReturnValue;     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AttackWarningLoupe_C_CalcScreenPosition) == 0x000008, "Wrong alignment on WBP_AttackWarningLoupe_C_CalcScreenPosition");
static_assert(sizeof(WBP_AttackWarningLoupe_C_CalcScreenPosition) == 0x0000A0, "Wrong size on WBP_AttackWarningLoupe_C_CalcScreenPosition");
static_assert(offsetof(WBP_AttackWarningLoupe_C_CalcScreenPosition, CallFunc_GetTargetWorldLocation_outVector) == 0x000000, "Member 'WBP_AttackWarningLoupe_C_CalcScreenPosition::CallFunc_GetTargetWorldLocation_outVector' has a wrong offset!");
static_assert(offsetof(WBP_AttackWarningLoupe_C_CalcScreenPosition, CallFunc_GetLocalPlayerController_ReturnValue) == 0x000018, "Member 'WBP_AttackWarningLoupe_C_CalcScreenPosition::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AttackWarningLoupe_C_CalcScreenPosition, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'WBP_AttackWarningLoupe_C_CalcScreenPosition::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AttackWarningLoupe_C_CalcScreenPosition, CallFunc_GetCameraRotation_ReturnValue) == 0x000038, "Member 'WBP_AttackWarningLoupe_C_CalcScreenPosition::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AttackWarningLoupe_C_CalcScreenPosition, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000050, "Member 'WBP_AttackWarningLoupe_C_CalcScreenPosition::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AttackWarningLoupe_C_CalcScreenPosition, CallFunc_GetForwardVector_ReturnValue) == 0x000068, "Member 'WBP_AttackWarningLoupe_C_CalcScreenPosition::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AttackWarningLoupe_C_CalcScreenPosition, CallFunc_Normal_ReturnValue) == 0x000080, "Member 'WBP_AttackWarningLoupe_C_CalcScreenPosition::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AttackWarningLoupe_C_CalcScreenPosition, CallFunc_Dot_VectorVector_ReturnValue) == 0x000098, "Member 'WBP_AttackWarningLoupe_C_CalcScreenPosition::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");

// Function WBP_AttackWarningLoupe.WBP_AttackWarningLoupe_C.GetLoupeWidgetSize
// 0x0028 (0x0028 - 0x0000)
struct WBP_AttackWarningLoupe_C_GetLoupeWidgetSize final
{
public:
	struct FVector2D                              Param_WidgetSize;                                  // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSize_ReturnValue;                      // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AttackWarningLoupe_C_GetLoupeWidgetSize) == 0x000008, "Wrong alignment on WBP_AttackWarningLoupe_C_GetLoupeWidgetSize");
static_assert(sizeof(WBP_AttackWarningLoupe_C_GetLoupeWidgetSize) == 0x000028, "Wrong size on WBP_AttackWarningLoupe_C_GetLoupeWidgetSize");
static_assert(offsetof(WBP_AttackWarningLoupe_C_GetLoupeWidgetSize, Param_WidgetSize) == 0x000000, "Member 'WBP_AttackWarningLoupe_C_GetLoupeWidgetSize::Param_WidgetSize' has a wrong offset!");
static_assert(offsetof(WBP_AttackWarningLoupe_C_GetLoupeWidgetSize, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000010, "Member 'WBP_AttackWarningLoupe_C_GetLoupeWidgetSize::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AttackWarningLoupe_C_GetLoupeWidgetSize, CallFunc_GetSize_ReturnValue) == 0x000018, "Member 'WBP_AttackWarningLoupe_C_GetLoupeWidgetSize::CallFunc_GetSize_ReturnValue' has a wrong offset!");

// Function WBP_AttackWarningLoupe.WBP_AttackWarningLoupe_C.GetTargetWidgetSize
// 0x0028 (0x0028 - 0x0000)
struct WBP_AttackWarningLoupe_C_GetTargetWidgetSize final
{
public:
	struct FVector2D                              OutVector;                                         // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSize_ReturnValue;                      // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AttackWarningLoupe_C_GetTargetWidgetSize) == 0x000008, "Wrong alignment on WBP_AttackWarningLoupe_C_GetTargetWidgetSize");
static_assert(sizeof(WBP_AttackWarningLoupe_C_GetTargetWidgetSize) == 0x000028, "Wrong size on WBP_AttackWarningLoupe_C_GetTargetWidgetSize");
static_assert(offsetof(WBP_AttackWarningLoupe_C_GetTargetWidgetSize, OutVector) == 0x000000, "Member 'WBP_AttackWarningLoupe_C_GetTargetWidgetSize::OutVector' has a wrong offset!");
static_assert(offsetof(WBP_AttackWarningLoupe_C_GetTargetWidgetSize, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000010, "Member 'WBP_AttackWarningLoupe_C_GetTargetWidgetSize::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AttackWarningLoupe_C_GetTargetWidgetSize, CallFunc_GetSize_ReturnValue) == 0x000018, "Member 'WBP_AttackWarningLoupe_C_GetTargetWidgetSize::CallFunc_GetSize_ReturnValue' has a wrong offset!");

// Function WBP_AttackWarningLoupe.WBP_AttackWarningLoupe_C.GetTargetWorldLocation
// 0x0018 (0x0018 - 0x0000)
struct WBP_AttackWarningLoupe_C_GetTargetWorldLocation final
{
public:
	struct FVector                                OutVector;                                         // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AttackWarningLoupe_C_GetTargetWorldLocation) == 0x000008, "Wrong alignment on WBP_AttackWarningLoupe_C_GetTargetWorldLocation");
static_assert(sizeof(WBP_AttackWarningLoupe_C_GetTargetWorldLocation) == 0x000018, "Wrong size on WBP_AttackWarningLoupe_C_GetTargetWorldLocation");
static_assert(offsetof(WBP_AttackWarningLoupe_C_GetTargetWorldLocation, OutVector) == 0x000000, "Member 'WBP_AttackWarningLoupe_C_GetTargetWorldLocation::OutVector' has a wrong offset!");

// Function WBP_AttackWarningLoupe.WBP_AttackWarningLoupe_C.IsEnableLoupe
// 0x0001 (0x0001 - 0x0000)
struct WBP_AttackWarningLoupe_C_IsEnableLoupe final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AttackWarningLoupe_C_IsEnableLoupe) == 0x000001, "Wrong alignment on WBP_AttackWarningLoupe_C_IsEnableLoupe");
static_assert(sizeof(WBP_AttackWarningLoupe_C_IsEnableLoupe) == 0x000001, "Wrong size on WBP_AttackWarningLoupe_C_IsEnableLoupe");
static_assert(offsetof(WBP_AttackWarningLoupe_C_IsEnableLoupe, ReturnValue) == 0x000000, "Member 'WBP_AttackWarningLoupe_C_IsEnableLoupe::ReturnValue' has a wrong offset!");

// Function WBP_AttackWarningLoupe.WBP_AttackWarningLoupe_C.SetFinalWidgetOpacity
// 0x0010 (0x0010 - 0x0000)
struct WBP_AttackWarningLoupe_C_SetFinalWidgetOpacity final
{
public:
	double                                        CalcedOpacity;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AttackWarningLoupe_C_SetFinalWidgetOpacity) == 0x000008, "Wrong alignment on WBP_AttackWarningLoupe_C_SetFinalWidgetOpacity");
static_assert(sizeof(WBP_AttackWarningLoupe_C_SetFinalWidgetOpacity) == 0x000010, "Wrong size on WBP_AttackWarningLoupe_C_SetFinalWidgetOpacity");
static_assert(offsetof(WBP_AttackWarningLoupe_C_SetFinalWidgetOpacity, CalcedOpacity) == 0x000000, "Member 'WBP_AttackWarningLoupe_C_SetFinalWidgetOpacity::CalcedOpacity' has a wrong offset!");
static_assert(offsetof(WBP_AttackWarningLoupe_C_SetFinalWidgetOpacity, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x000008, "Member 'WBP_AttackWarningLoupe_C_SetFinalWidgetOpacity::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");

// Function WBP_AttackWarningLoupe.WBP_AttackWarningLoupe_C.Setup
// 0x0018 (0x0018 - 0x0000)
struct WBP_AttackWarningLoupe_C_Setup final
{
public:
	struct FVector                                Param_TargetLocation;                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AttackWarningLoupe_C_Setup) == 0x000008, "Wrong alignment on WBP_AttackWarningLoupe_C_Setup");
static_assert(sizeof(WBP_AttackWarningLoupe_C_Setup) == 0x000018, "Wrong size on WBP_AttackWarningLoupe_C_Setup");
static_assert(offsetof(WBP_AttackWarningLoupe_C_Setup, Param_TargetLocation) == 0x000000, "Member 'WBP_AttackWarningLoupe_C_Setup::Param_TargetLocation' has a wrong offset!");

// Function WBP_AttackWarningLoupe.WBP_AttackWarningLoupe_C.UpdateArrowImageAngle
// 0x0010 (0x0010 - 0x0000)
struct WBP_AttackWarningLoupe_C_UpdateArrowImageAngle final
{
public:
	double                                        NewAngle;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderTransformAngle_Angle_ImplicitCast; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AttackWarningLoupe_C_UpdateArrowImageAngle) == 0x000008, "Wrong alignment on WBP_AttackWarningLoupe_C_UpdateArrowImageAngle");
static_assert(sizeof(WBP_AttackWarningLoupe_C_UpdateArrowImageAngle) == 0x000010, "Wrong size on WBP_AttackWarningLoupe_C_UpdateArrowImageAngle");
static_assert(offsetof(WBP_AttackWarningLoupe_C_UpdateArrowImageAngle, NewAngle) == 0x000000, "Member 'WBP_AttackWarningLoupe_C_UpdateArrowImageAngle::NewAngle' has a wrong offset!");
static_assert(offsetof(WBP_AttackWarningLoupe_C_UpdateArrowImageAngle, CallFunc_SetRenderTransformAngle_Angle_ImplicitCast) == 0x000008, "Member 'WBP_AttackWarningLoupe_C_UpdateArrowImageAngle::CallFunc_SetRenderTransformAngle_Angle_ImplicitCast' has a wrong offset!");

}

