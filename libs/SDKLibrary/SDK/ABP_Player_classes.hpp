#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Player

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ABP_Player_structs.hpp"
#include "AkAudio_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "Pal_structs.hpp"
#include "Pal_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ControlRig_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Player.ABP_Player_C
// 0x95F0 (0x9C10 - 0x0620)
class UABP_Player_C final : public UPalAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0620(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_Player::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0628(0x00C0)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x06E8(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x06F0(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root_7;                              // 0x06F8(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_6;                   // 0x0718(0x00C8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_6;                              // 0x07E0(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_5;                   // 0x0800(0x00C8)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_6;             // 0x08C8(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_6;             // 0x08E8(0x0020)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_16;                   // 0x0908(0x0108)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_28;                  // 0x0A10(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_41;                    // 0x0A58(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_40;                    // 0x0A80(0x0028)()
	uint8                                         Pad_536D[0x8];                                     // 0x0AA8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_Fabrik                       AnimGraphNode_Fabrik;                              // 0x0AB0(0x01F0)()
	struct FAnimNode_Root                         AnimGraphNode_Root_5;                              // 0x0CA0(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_4;                   // 0x0CC0(0x00C8)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_18;                       // 0x0D88(0x0128)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_5;             // 0x0EB0(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_17;                       // 0x0ED0(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_16;                       // 0x0FF8(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_15;                       // 0x1120(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_14;                       // 0x1248(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_13;                       // 0x1370(0x0128)()
	uint8                                         Pad_536E[0x8];                                     // 0x1498(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_5;                         // 0x14A0(0x0270)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_4;                         // 0x1710(0x0270)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_3;                         // 0x1980(0x0270)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_2;                         // 0x1BF0(0x0270)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_15;                   // 0x1E60(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_39;                    // 0x1F68(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_27;                  // 0x1F90(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_38;                    // 0x1FD8(0x0028)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_5;             // 0x2000(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_4;                              // 0x2020(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_3;                   // 0x2040(0x00C8)()
	uint8                                         Pad_536F[0x8];                                     // 0x2108(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_LookAt                       AnimGraphNode_LookAt;                              // 0x2110(0x0250)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_26;                  // 0x2360(0x0048)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_4;             // 0x23A8(0x0020)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_14;                   // 0x23C8(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_37;                    // 0x24D0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_36;                    // 0x24F8(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_4;             // 0x2520(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_3;                              // 0x2540(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_2;                   // 0x2560(0x00C8)()
	uint8                                         Pad_5370[0x8];                                     // 0x2628(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_1;                         // 0x2630(0x0270)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_3;             // 0x28A0(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_3;             // 0x28C0(0x0020)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK;                           // 0x28E0(0x0270)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_12;                       // 0x2B50(0x0128)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_25;                  // 0x2C78(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_13;                   // 0x2CC0(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_35;                    // 0x2DC8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_34;                    // 0x2DF0(0x0028)()
	struct FAnimNode_Root                         AnimGraphNode_Root_2;                              // 0x2E18(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x2E38(0x00C8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_24;                  // 0x2F00(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_22;                   // 0x2F48(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_23;                  // 0x2F90(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_21;                   // 0x2FD8(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_14;                             // 0x3020(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_12;                   // 0x3068(0x0108)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_10;                 // 0x3170(0x00E0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_33;                    // 0x3250(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_32;                    // 0x3278(0x0028)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_2;          // 0x32A0(0x0118)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_31;                    // 0x33B8(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_22;                  // 0x33E0(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_30;                    // 0x3428(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_13;                             // 0x3450(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_12;                             // 0x3498(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_20;                   // 0x34E0(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_11;                             // 0x3528(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_29;                    // 0x3570(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2;             // 0x3598(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_11;                       // 0x35B8(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_10;                       // 0x36E0(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_9;                        // 0x3808(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2;             // 0x3930(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_10;                             // 0x3950(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_21;                  // 0x3998(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_28;                    // 0x39E0(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_9;                  // 0x3A08(0x00E0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_9;                              // 0x3AE8(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_11;                   // 0x3B30(0x0108)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_19;                   // 0x3C38(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_20;                  // 0x3C80(0x0048)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_8;                        // 0x3CC8(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_7;                        // 0x3DF0(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_6;                        // 0x3F18(0x0128)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_10;                   // 0x4040(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_27;                    // 0x4148(0x0028)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_7;                       // 0x4170(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_26;                    // 0x4238(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_19;                  // 0x4260(0x0048)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x42A8(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x42C8(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_9;                    // 0x4390(0x0108)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_8;                  // 0x4498(0x00E0)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_1;          // 0x4578(0x0118)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace;            // 0x4690(0x0118)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_8;                              // 0x47A8(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_8;                    // 0x47F0(0x0108)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_7;                    // 0x48F8(0x0108)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x4A00(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_5;                        // 0x4A20(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_4;                        // 0x4B48(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_3;                        // 0x4C70(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x4D98(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x4DB8(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x4DD8(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x4F00(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x5028(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x5150(0x0020)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_6;                    // 0x5170(0x0108)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_18;                  // 0x5278(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_17;                  // 0x52C0(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_16;                  // 0x5308(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_15;                  // 0x5350(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_25;                    // 0x5398(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_14;                  // 0x53C0(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_5;                    // 0x5408(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_24;                    // 0x5510(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_13;                  // 0x5538(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_23;                    // 0x5580(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_22;                    // 0x55A8(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_7;                              // 0x55D0(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_6;                              // 0x5618(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_12;                  // 0x5660(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_7;                  // 0x56A8(0x00E0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_21;                    // 0x5788(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_20;                    // 0x57B0(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_4;                    // 0x57D8(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_19;                    // 0x58E0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_18;                    // 0x5908(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_17;                    // 0x5930(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_16;                    // 0x5958(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_15;                    // 0x5980(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_11;                  // 0x59A8(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_14;                    // 0x59F0(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_6;                  // 0x5A18(0x00E0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_13;                    // 0x5AF8(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_5;                              // 0x5B20(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_12;                    // 0x5B68(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_11;                    // 0x5B90(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_10;                  // 0x5BB8(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_10;                    // 0x5C00(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0x5C28(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_9;                     // 0x5D30(0x0028)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_6;                       // 0x5D58(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_8;                     // 0x5E20(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_18;                   // 0x5E48(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x5E90(0x0108)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_9;                   // 0x5F98(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_17;                   // 0x5FE0(0x0048)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_5;                       // 0x6028(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x60F0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x6138(0x0048)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_4;                       // 0x6180(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x6248(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x6270(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x6298(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_4;                              // 0x62C0(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x6308(0x00C8)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose;                        // 0x63D0(0x0010)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x63E0(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_5;                  // 0x6408(0x00E0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_8;                   // 0x64E8(0x0048)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x6530(0x0020)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x6550(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x6658(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_3;                              // 0x6680(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_4;                  // 0x66C8(0x00E0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x67A8(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x67D0(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_35;                 // 0x6818(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_34;                 // 0x6840(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_33;                 // 0x6868(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_32;                 // 0x6890(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_31;                 // 0x68B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_30;                 // 0x68E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_29;                 // 0x6908(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_28;                 // 0x6930(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x6958(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x6980(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x69A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x69D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x69F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x6A20(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x6A48(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x6A70(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x6A98(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x6AC0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x6AE8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x6B10(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x6B38(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x6B60(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x6B88(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x6BB0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x6BD8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x6C00(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x6C28(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x6C50(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x6C78(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x6CA0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x6CC8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x6CF0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x6D18(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x6D40(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x6D68(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x6D90(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x6DB0(0x0028)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_10;                 // 0x6DD8(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x6E48(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_9;                  // 0x6E68(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x6ED8(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_8;                  // 0x6EF8(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x6F68(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x6F88(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x6FD0(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x6FF0(0x0048)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x7038(0x0010)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x7048(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x7068(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x70B0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x70D0(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_3;                  // 0x7118(0x00E0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x71F8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x7240(0x0020)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_7;                   // 0x7260(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x72A8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x72F0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x7338(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x7358(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_2;                  // 0x73A0(0x00E0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_7;                  // 0x7480(0x0070)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_6;                   // 0x74F0(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_6;                  // 0x7538(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x75A8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x75C8(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_5;                   // 0x7610(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x7658(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x76A0(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x76E8(0x00E0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x77C8(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_4;                   // 0x7810(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x7858(0x0020)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_3;                       // 0x7878(0x00C8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_5;                  // 0x7940(0x0070)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_2;                       // 0x79B0(0x00C8)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_1;                       // 0x7A78(0x00C8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_4;                  // 0x7B40(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0x7BB0(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x7C20(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x7C90(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x7D00(0x0070)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x7D70(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x7DB8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x7E00(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x7E20(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x7E68(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x7EB0(0x0048)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x7EF8(0x00C8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x7FC0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x8008(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x8050(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x8098(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x80B8(0x00C8)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_6;                   // 0x8180(0x00C8)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_5;                   // 0x8248(0x00C8)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_4;                   // 0x8310(0x00C8)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_3;                   // 0x83D8(0x00C8)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_2;                   // 0x84A0(0x00C8)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_1;                   // 0x8568(0x00C8)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer;                     // 0x8630(0x00C8)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig;                          // 0x86F8(0x0470)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x8B68(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x8BB0(0x00E0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x8C90(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x8D98(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x8DC0(0x0028)()
	float                                         K2Node_PropertyAccess_32;                          // 0x8DE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_30;                          // 0x8DEC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5371[0x3];                                     // 0x8DED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_PropertyAccess_27;                          // 0x8DF0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_PropertyAccess_26;                          // 0x8E08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_PropertyAccess_25;                          // 0x8E0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_PropertyAccess_24;                          // 0x8E10(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_23;                          // 0x8E28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5372[0x7];                                     // 0x8E29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_PropertyAccess_21;                          // 0x8E30(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_PropertyAccess_20;                          // 0x8E48(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_PropertyAccess_19;                          // 0x8E60(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_PropertyAccess_18;                          // 0x8E78(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_17;                          // 0x8E90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_16;                          // 0x8E91(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_15;                          // 0x8E92(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_14;                          // 0x8E93(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_13;                          // 0x8E94(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_12;                          // 0x8E95(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPalCharacterMovementCustomMode               K2Node_PropertyAccess_11;                          // 0x8E96(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5373[0x1];                                     // 0x8E97(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeaponAnimationInfo                   K2Node_PropertyAccess_10;                          // 0x8E98(0x0260)()
	struct FWeaponAnimationInfo                   K2Node_PropertyAccess_9;                           // 0x90F8(0x0260)()
	uint8                                         Pad_5374[0x8];                                     // 0x9358(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_PropertyAccess_8;                           // 0x9360(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_7;                           // 0x93C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5375[0x7];                                     // 0x93C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_PropertyAccess_6;                           // 0x93C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_5;                           // 0x93E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_4;                           // 0x93E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_3;                           // 0x93E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_2;                           // 0x93E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5376[0x4];                                     // 0x93E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRidingAnimationInfo                   K2Node_PropertyAccess_1;                           // 0x93E8(0x0020)(NoDestructor)
	float                                         K2Node_PropertyAccess;                             // 0x9408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         __CustomProperty_ClavicleAdjustFloat_3EAAD7D248100B118DCFE280A191AF83; // 0x940C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x9410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAim;                                             // 0x9418(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5377[0x7];                                     // 0x9419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              VelocityXY;                                        // 0x9420(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGliding;                                         // 0x9430(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5378[0x7];                                     // 0x9431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               AimRotatorForSpine;                                // 0x9438(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsShooting;                                        // 0x9450(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5379[0x7];                                     // 0x9451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               AimRotatorArm;                                     // 0x9458(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsRiding;                                          // 0x9470(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_537A[0x7];                                     // 0x9471(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeaponAnimationInfo                   WeaponInfo;                                        // 0x9478(0x0260)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FWeaponAnimationInfo                   PrevWeaponInfo;                                    // 0x96D8(0x0260)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        ChangeWeaponWeight;                                // 0x9938(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Right;                                             // 0x9940(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Forward;                                           // 0x9948(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Pitch;                                             // 0x9950(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Yaw;                                               // 0x9958(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCrouch;                                          // 0x9960(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAttachLeftHand;                                  // 0x9961(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSliding;                                         // 0x9962(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRequestSliding;                                  // 0x9963(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEnableSkySliding;                                // 0x9964(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSprint;                                          // 0x9965(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_537B[0x2];                                     // 0x9966(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRidingAnimationInfo                   RidingAnimationInfo;                               // 0x9968(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	bool                                          HasWeapon;                                         // 0x9988(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_537C[0x7];                                     // 0x9989(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        KawaiiWeight;                                      // 0x9990(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Cloth01_FrontBagRotator;                           // 0x9998(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsReloading;                                       // 0x99B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsJumpPreliminary;                                 // 0x99B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEndJump;                                         // 0x99B2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_537D[0xD];                                     // 0x99B3(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LeftHandTransform;                                 // 0x99C0(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValidSprintAnimation;                            // 0x9A20(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_537E[0x7];                                     // 0x9A21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 RidingActor;                                       // 0x9A28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          RiderModelIsBackward;                              // 0x9A30(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseRidingAO;                                       // 0x9A31(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_537F[0x6];                                     // 0x9A32(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               AimRotatorForSpine_Ride_WS;                        // 0x9A38(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsDead;                                            // 0x9A50(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FootIKEnable;                                      // 0x9A51(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLookatEnable;                                    // 0x9A52(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5380[0x5];                                     // 0x9A53(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LookAtTarget;                                      // 0x9A58(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LookatInTime;                                      // 0x9A70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LookatOutTime;                                     // 0x9A78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsClimbing;                                        // 0x9A80(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5381[0x7];                                     // 0x9A81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          UniqueRideAnim;                                    // 0x9A88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUniqueRiding;                                    // 0x9A90(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5382[0x7];                                     // 0x9A91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Ride_IKPosHandR;                                   // 0x9A98(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Ride_IKPosHandL;                                   // 0x9AB0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Ride_IKPosFootR;                                   // 0x9AC8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Ride_IKPosFootL;                                   // 0x9AE0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Ride_SpineAddRotate;                               // 0x9AF8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	double                                        Ride_HipForwardAdd;                                // 0x9B10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Ride_SpineWeight;                                  // 0x9B18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        UniqueRide_RightHandWeight;                        // 0x9B20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RideIK_Pole_HandR;                                 // 0x9B28(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RideIK_Pole_HandL;                                 // 0x9B40(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RideIK_Pole_FootR;                                 // 0x9B58(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RideIK_Pole_FootL;                                 // 0x9B70(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUniqueRideIK;                                    // 0x9B88(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5383[0x7];                                     // 0x9B89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        UniqueRide_LeftHandWeight;                         // 0x9B90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      FootStepEffect;                                    // 0x9B98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWalking;                                         // 0x9BA0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5384[0x3];                                     // 0x9BA1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ClavicleAdjustDegree;                              // 0x9BA4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          GlidingAS;                                         // 0x9BA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        BlendTime_ForEagleGlider;                          // 0x9BB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDedicatedServer;                                 // 0x9BB8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5385[0x7];                                     // 0x9BB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          TSCached_OwnerCharacter;                           // 0x9BC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UPalShooterComponent*                   TSCached_ShooterComponent;                         // 0x9BC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPalCharacterMovementComponent*         TSCached_MovementComponent;                        // 0x9BD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPalLookAtComponent*                    TSCached_LookAtComponent;                          // 0x9BD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPalFootIKComponent*                    TSCached_FootIkComponent;                          // 0x9BE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPalSkeletalMeshComponent*              TSCached_SkeletalMeshComponent;                    // 0x9BE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               TSCache_CameraRotator;                             // 0x9BF0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          JumpTriggered;                                     // 0x9C08(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5386[0x3];                                     // 0x9C09(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         JumpCount;                                         // 0x9C0C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void AnimNotify_Entered_Crouch();
	void AnimNotify_Entered_Sprint();
	void AnimNotify_Entered_StandIdle();
	void AnimNotify_Entered_Walk();
	void AnimNotify_Exit_Crouch();
	void AnimNotify_OnCrouch();
	void AnimNotify_OnCrouchMove();
	void AnimNotify_OnExitStand();
	void AnimNotify_OnJumpReset();
	void AnimNotify_OnStandIdle();
	void AnimNotify_OnWalk();
	void AnimNotify_Start_Climb();
	void BlueprintBeginPlay();
	void BlueprintThreadSafeUpdateAnimation(float DeltaTime);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void CanSpawnFootStepEffect(bool* CanSpawn);
	void Cloth01FrontBagRotation(struct FRotator* BagRotator);
	void ClothLayer(const struct FPoseLink& InPose, struct FPoseLink* Param_ClothLayer);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_BlendListByBool_137DA5324EFB47824ACFEFBEB5A9345E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_BlendListByBool_261928F6456722BEC96B86A1ADEB4BF2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_BlendListByBool_4416090C4FED6604161B15843476CF58();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_BlendListByBool_481DAFEA4AE40C2EFF25618E9C553B35();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_BlendListByBool_48DAA1E9450D4A5A46AAFDAD0D2AD2B0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_BlendListByBool_500901BD49D7425200ABDC8BE85C7F25();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_BlendListByBool_51630B8C43E034BBFCD4F29091E8C6E3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_BlendListByBool_5E053D1A48F0BBA7E66B278333CAD210();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_BlendListByBool_6D1442674165687285F288812FDB1766();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_BlendListByBool_71C911754A5B3DC3A317788B75B519B1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_BlendListByBool_7838EE814B598C3A344B9F8500E91FA4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_BlendListByBool_795924014DFB08AE86A92196C6243888();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_BlendListByBool_996FDE544B684CDDFCA6A784C6AE9917();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_BlendListByBool_BC9B02BC4F1BA6E447E80797ACACDD6A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_BlendListByBool_E26724CB458B422C7C5E32A0EDC0CCF8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_BlendListByBool_E76C13FE4F7043059C87EA91999E16ED();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_BlendListByBool_E94DA2EA481166A5E285B289F1C37CBD();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_BlendListByBool_F4551B3F4954505485115494503A337D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_ControlRig_3EAAD7D248100B118DCFE280A191AF83();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_LayeredBoneBlend_2A54E77148A6C7AEC0F9ED9AE38259A1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_ModifyBone_21D9D3ED464D031FBD32AAA417100B21();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_ModifyBone_33CE303E429A72504664588F8208C607();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_ModifyBone_3A5774CC4E383BBEFC920297F7931545();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_ModifyBone_402B5DDF4A554B98804CAFBC147C07B1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_ModifyBone_6E057CAF466FA7A297375EB70B4C9887();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_ModifyBone_71AACF6D4D2B261CA61871BDCE75FA8C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_ModifyBone_B70A311E47AEFAEE0A1D709D2E5F6D53();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_ModifyBone_DD28266243FD9E59AD3748AABC4EC94E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_RotationOffsetBlendSpace_3BFF5F7E4AE63A522D3E25878E1FB093();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_RotationOffsetBlendSpace_A05F6A464942E6EC33FA9B8763952574();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_SequencePlayer_0C4BD33A4A739BB806132999D7790073();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_SequencePlayer_19D767AF48D0B83A540D31833312B7C2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_SequencePlayer_1BDF9D1447DF958038E620AEAF8B3D3D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_SequencePlayer_2BA246414BFB0071817AB1B6C2FBC83F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_SequencePlayer_655311544FEA15E7245AB58E68400569();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_SequencePlayer_9CD38A96429EBB43F9FCA4AE888E9D30();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_SequencePlayer_A0D7C56C4DB9926E12DA97B72BAE7F9C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_SequencePlayer_C70243AF44D929CECBC285B95A209F65();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_SequencePlayer_DE4CD99543A8127206BEFDA34A61B600();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_SequencePlayer_ED5C3EC2486FB5B5EA51D8A3B5A970C9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_SequencePlayer_F8FF710E41ED5F7DA3BA9BAFE633876D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TransitionResult_1CFB42474BCF26A449A2E3960AF20DC4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TransitionResult_22357FDA45F4F504502F4D9C2B8DAC0B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TransitionResult_2E53DC32460F41462571D69FA58B4ACA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TransitionResult_475F633F4260210710BCF7B53BE2512A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TransitionResult_690EA54243E92C4F5F8441A6ACAD0053();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TransitionResult_7791845548B5FB3059EB7DABA1AC82E1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TransitionResult_7BFFAF7F4E48FAADBB3FC4A30EEFAC05();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TransitionResult_7E971E664EA213C4A22D748CAF7084D3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TransitionResult_819BBAD54A8DC3F5CD5532AB19D034AA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TransitionResult_8E3C577B4AB26BF954C089A7AE5DB9F4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TransitionResult_A134763D4D6875423DA3FB8416C19B47();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TransitionResult_ACBBE620474D08C7FF2166BE65257A91();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TransitionResult_ADB9F44F417FA3429012D4AC0960FE81();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TransitionResult_B11373AF493FD1828F548C9C6DFCE1CF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TransitionResult_B81AB908417297CD4DEAABAD0C247287();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TransitionResult_BAAF9A3E45024386AB704DA5C92DDA6F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TransitionResult_BE56BE41476FF7AE05D9CF90C9BEB1A2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TransitionResult_DE4B6EE04F5CA7CAF338B8AC885C2C42();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TwoBoneIK_526ABD1A42AD6ADBA987689868DF9ACB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TwoBoneIK_64CC3FAB4A2F8101A3ABCDAB23163E95();
	void ExecuteUbergraph_ABP_Player(int32 EntryPoint);
	void FootIK(const struct FPoseLink& InPose_1, struct FPoseLink* Param_FootIK);
	void GameThreadUpdate(double DeltaTime);
	void GetFootStepCharacterSpeed(double* CharacterSpeed);
	void GetFootStepEffectScale(double* Scale);
	void GetRideIKPos(class FName SocketName, const struct FTransform& ConvTF, class USkeletalMeshComponent* Mesh, struct FVector* IKPos);
	void Jumped(class UPalCharacterMovementComponent* Component);
	void LeftHandAttach(const struct FPoseLink& InPose, struct FPoseLink* Param_LeftHandAttach);
	void Lookat(const struct FPoseLink& InPose_2, struct FPoseLink* Param_Lookat);
	void LookatParameterUpdate();
	void MovmentModeChanged(class UPalCharacterMovementComponent* Component, EMovementMode PrevMode, EMovementMode NewMode, EPalCharacterMovementCustomMode PrevCustomMode, EPalCharacterMovementCustomMode NewCustomMode);
	void PalCharacterMovementComponentUpdate();
	void PlaySound(class FName SoundId);
	void ReachedJumpApex();
	void RiderComponent_UniqueRideUpdate(class UPalRiderComponent* RiderComponent, class APalCharacter* ThisCharacter, double DeltaTime);
	void RiderComponentUpdate(class UPalRiderComponent* PalRiderComponent);
	void RidingOverride(const struct FPoseLink& InPose_0, struct FPoseLink* Param_RidingOverride);
	void SerWeaponNum(class UPalShooterComponent* ShooterComponent, int32* WeaponNum);
	void ShooterComponentUpdate();
	void StartFootStepEffect();
	void StopFootStepEffect();
	void TempFixLeftHandAttach();
	void UniqueRideFullBodyIK(const struct FPoseLink& InPose_3, struct FPoseLink* Param_UniqueRideFullBodyIK);
	void Update_Foot_Step_Effect(double DeltaTime);
	void UpdateAnimationParameter(class APalCharacter* ThisCharacter, double DeltaTime);
	void WeaponUpperOverride(const struct FPoseLink& InPose, struct FPoseLink* Param_WeaponUpperOverride);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Player_C">();
	}
	static class UABP_Player_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Player_C>();
	}
};
static_assert(alignof(UABP_Player_C) == 0x000010, "Wrong alignment on UABP_Player_C");
static_assert(sizeof(UABP_Player_C) == 0x009C10, "Wrong size on UABP_Player_C");
static_assert(offsetof(UABP_Player_C, UberGraphFrame) == 0x000620, "Member 'UABP_Player_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, __AnimBlueprintMutables) == 0x000628, "Member 'UABP_Player_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimBlueprintExtension_PropertyAccess) == 0x0006E8, "Member 'UABP_Player_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimBlueprintExtension_Base) == 0x0006F0, "Member 'UABP_Player_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Root_7) == 0x0006F8, "Member 'UABP_Player_C::AnimGraphNode_Root_7' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LinkedInputPose_6) == 0x000718, "Member 'UABP_Player_C::AnimGraphNode_LinkedInputPose_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Root_6) == 0x0007E0, "Member 'UABP_Player_C::AnimGraphNode_Root_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LinkedInputPose_5) == 0x000800, "Member 'UABP_Player_C::AnimGraphNode_LinkedInputPose_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ComponentToLocalSpace_6) == 0x0008C8, "Member 'UABP_Player_C::AnimGraphNode_ComponentToLocalSpace_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LocalToComponentSpace_6) == 0x0008E8, "Member 'UABP_Player_C::AnimGraphNode_LocalToComponentSpace_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SaveCachedPose_16) == 0x000908, "Member 'UABP_Player_C::AnimGraphNode_SaveCachedPose_16' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_28) == 0x000A10, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_28' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_41) == 0x000A58, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_41' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_40) == 0x000A80, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_40' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Fabrik) == 0x000AB0, "Member 'UABP_Player_C::AnimGraphNode_Fabrik' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Root_5) == 0x000CA0, "Member 'UABP_Player_C::AnimGraphNode_Root_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LinkedInputPose_4) == 0x000CC0, "Member 'UABP_Player_C::AnimGraphNode_LinkedInputPose_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone_18) == 0x000D88, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone_18' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LocalToComponentSpace_5) == 0x000EB0, "Member 'UABP_Player_C::AnimGraphNode_LocalToComponentSpace_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone_17) == 0x000ED0, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone_17' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone_16) == 0x000FF8, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone_16' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone_15) == 0x001120, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone_15' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone_14) == 0x001248, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone_14' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone_13) == 0x001370, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone_13' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TwoBoneIK_5) == 0x0014A0, "Member 'UABP_Player_C::AnimGraphNode_TwoBoneIK_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TwoBoneIK_4) == 0x001710, "Member 'UABP_Player_C::AnimGraphNode_TwoBoneIK_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TwoBoneIK_3) == 0x001980, "Member 'UABP_Player_C::AnimGraphNode_TwoBoneIK_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TwoBoneIK_2) == 0x001BF0, "Member 'UABP_Player_C::AnimGraphNode_TwoBoneIK_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SaveCachedPose_15) == 0x001E60, "Member 'UABP_Player_C::AnimGraphNode_SaveCachedPose_15' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_39) == 0x001F68, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_39' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_27) == 0x001F90, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_27' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_38) == 0x001FD8, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_38' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ComponentToLocalSpace_5) == 0x002000, "Member 'UABP_Player_C::AnimGraphNode_ComponentToLocalSpace_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Root_4) == 0x002020, "Member 'UABP_Player_C::AnimGraphNode_Root_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LinkedInputPose_3) == 0x002040, "Member 'UABP_Player_C::AnimGraphNode_LinkedInputPose_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LookAt) == 0x002110, "Member 'UABP_Player_C::AnimGraphNode_LookAt' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_26) == 0x002360, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_26' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ComponentToLocalSpace_4) == 0x0023A8, "Member 'UABP_Player_C::AnimGraphNode_ComponentToLocalSpace_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SaveCachedPose_14) == 0x0023C8, "Member 'UABP_Player_C::AnimGraphNode_SaveCachedPose_14' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_37) == 0x0024D0, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_37' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_36) == 0x0024F8, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_36' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LocalToComponentSpace_4) == 0x002520, "Member 'UABP_Player_C::AnimGraphNode_LocalToComponentSpace_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Root_3) == 0x002540, "Member 'UABP_Player_C::AnimGraphNode_Root_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LinkedInputPose_2) == 0x002560, "Member 'UABP_Player_C::AnimGraphNode_LinkedInputPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TwoBoneIK_1) == 0x002630, "Member 'UABP_Player_C::AnimGraphNode_TwoBoneIK_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LocalToComponentSpace_3) == 0x0028A0, "Member 'UABP_Player_C::AnimGraphNode_LocalToComponentSpace_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ComponentToLocalSpace_3) == 0x0028C0, "Member 'UABP_Player_C::AnimGraphNode_ComponentToLocalSpace_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TwoBoneIK) == 0x0028E0, "Member 'UABP_Player_C::AnimGraphNode_TwoBoneIK' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone_12) == 0x002B50, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone_12' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_25) == 0x002C78, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_25' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SaveCachedPose_13) == 0x002CC0, "Member 'UABP_Player_C::AnimGraphNode_SaveCachedPose_13' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_35) == 0x002DC8, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_35' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_34) == 0x002DF0, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_34' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Root_2) == 0x002E18, "Member 'UABP_Player_C::AnimGraphNode_Root_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LinkedInputPose_1) == 0x002E38, "Member 'UABP_Player_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_24) == 0x002F00, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_24' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_22) == 0x002F48, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_22' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_23) == 0x002F90, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_23' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_21) == 0x002FD8, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_21' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Slot_14) == 0x003020, "Member 'UABP_Player_C::AnimGraphNode_Slot_14' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SaveCachedPose_12) == 0x003068, "Member 'UABP_Player_C::AnimGraphNode_SaveCachedPose_12' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LayeredBoneBlend_10) == 0x003170, "Member 'UABP_Player_C::AnimGraphNode_LayeredBoneBlend_10' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_33) == 0x003250, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_33' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_32) == 0x003278, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_32' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_RotationOffsetBlendSpace_2) == 0x0032A0, "Member 'UABP_Player_C::AnimGraphNode_RotationOffsetBlendSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_31) == 0x0033B8, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_31' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_22) == 0x0033E0, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_22' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_30) == 0x003428, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_30' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Slot_13) == 0x003450, "Member 'UABP_Player_C::AnimGraphNode_Slot_13' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Slot_12) == 0x003498, "Member 'UABP_Player_C::AnimGraphNode_Slot_12' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_20) == 0x0034E0, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_20' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Slot_11) == 0x003528, "Member 'UABP_Player_C::AnimGraphNode_Slot_11' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_29) == 0x003570, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_29' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LocalToComponentSpace_2) == 0x003598, "Member 'UABP_Player_C::AnimGraphNode_LocalToComponentSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone_11) == 0x0035B8, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone_11' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone_10) == 0x0036E0, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone_10' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone_9) == 0x003808, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone_9' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ComponentToLocalSpace_2) == 0x003930, "Member 'UABP_Player_C::AnimGraphNode_ComponentToLocalSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Slot_10) == 0x003950, "Member 'UABP_Player_C::AnimGraphNode_Slot_10' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_21) == 0x003998, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_21' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_28) == 0x0039E0, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_28' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LayeredBoneBlend_9) == 0x003A08, "Member 'UABP_Player_C::AnimGraphNode_LayeredBoneBlend_9' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Slot_9) == 0x003AE8, "Member 'UABP_Player_C::AnimGraphNode_Slot_9' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SaveCachedPose_11) == 0x003B30, "Member 'UABP_Player_C::AnimGraphNode_SaveCachedPose_11' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_19) == 0x003C38, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_19' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_20) == 0x003C80, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_20' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone_8) == 0x003CC8, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone_8' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone_7) == 0x003DF0, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone_7' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone_6) == 0x003F18, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SaveCachedPose_10) == 0x004040, "Member 'UABP_Player_C::AnimGraphNode_SaveCachedPose_10' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_27) == 0x004148, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_27' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TwoWayBlend_7) == 0x004170, "Member 'UABP_Player_C::AnimGraphNode_TwoWayBlend_7' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_26) == 0x004238, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_26' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_19) == 0x004260, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_19' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Root_1) == 0x0042A8, "Member 'UABP_Player_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LinkedInputPose) == 0x0042C8, "Member 'UABP_Player_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SaveCachedPose_9) == 0x004390, "Member 'UABP_Player_C::AnimGraphNode_SaveCachedPose_9' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LayeredBoneBlend_8) == 0x004498, "Member 'UABP_Player_C::AnimGraphNode_LayeredBoneBlend_8' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_RotationOffsetBlendSpace_1) == 0x004578, "Member 'UABP_Player_C::AnimGraphNode_RotationOffsetBlendSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_RotationOffsetBlendSpace) == 0x004690, "Member 'UABP_Player_C::AnimGraphNode_RotationOffsetBlendSpace' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Slot_8) == 0x0047A8, "Member 'UABP_Player_C::AnimGraphNode_Slot_8' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SaveCachedPose_8) == 0x0047F0, "Member 'UABP_Player_C::AnimGraphNode_SaveCachedPose_8' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SaveCachedPose_7) == 0x0048F8, "Member 'UABP_Player_C::AnimGraphNode_SaveCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LocalToComponentSpace_1) == 0x004A00, "Member 'UABP_Player_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone_5) == 0x004A20, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone_4) == 0x004B48, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone_3) == 0x004C70, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x004D98, "Member 'UABP_Player_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LocalToComponentSpace) == 0x004DB8, "Member 'UABP_Player_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone_2) == 0x004DD8, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone_1) == 0x004F00, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone) == 0x005028, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ComponentToLocalSpace) == 0x005150, "Member 'UABP_Player_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SaveCachedPose_6) == 0x005170, "Member 'UABP_Player_C::AnimGraphNode_SaveCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_18) == 0x005278, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_18' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_17) == 0x0052C0, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_17' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_16) == 0x005308, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_16' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_15) == 0x005350, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_15' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_25) == 0x005398, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_25' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_14) == 0x0053C0, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_14' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SaveCachedPose_5) == 0x005408, "Member 'UABP_Player_C::AnimGraphNode_SaveCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_24) == 0x005510, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_24' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_13) == 0x005538, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_13' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_23) == 0x005580, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_23' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_22) == 0x0055A8, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_22' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Slot_7) == 0x0055D0, "Member 'UABP_Player_C::AnimGraphNode_Slot_7' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Slot_6) == 0x005618, "Member 'UABP_Player_C::AnimGraphNode_Slot_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_12) == 0x005660, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_12' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LayeredBoneBlend_7) == 0x0056A8, "Member 'UABP_Player_C::AnimGraphNode_LayeredBoneBlend_7' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_21) == 0x005788, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_21' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_20) == 0x0057B0, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_20' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SaveCachedPose_4) == 0x0057D8, "Member 'UABP_Player_C::AnimGraphNode_SaveCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_19) == 0x0058E0, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_19' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_18) == 0x005908, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_18' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_17) == 0x005930, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_17' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_16) == 0x005958, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_16' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_15) == 0x005980, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_15' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_11) == 0x0059A8, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_11' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_14) == 0x0059F0, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_14' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LayeredBoneBlend_6) == 0x005A18, "Member 'UABP_Player_C::AnimGraphNode_LayeredBoneBlend_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_13) == 0x005AF8, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_13' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Slot_5) == 0x005B20, "Member 'UABP_Player_C::AnimGraphNode_Slot_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_12) == 0x005B68, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_12' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_11) == 0x005B90, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_11' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_10) == 0x005BB8, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_10' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_10) == 0x005C00, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_10' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SaveCachedPose_3) == 0x005C28, "Member 'UABP_Player_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_9) == 0x005D30, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_9' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TwoWayBlend_6) == 0x005D58, "Member 'UABP_Player_C::AnimGraphNode_TwoWayBlend_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_8) == 0x005E20, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_8' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_18) == 0x005E48, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_18' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SaveCachedPose_2) == 0x005E90, "Member 'UABP_Player_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_9) == 0x005F98, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_9' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_17) == 0x005FE0, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_17' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TwoWayBlend_5) == 0x006028, "Member 'UABP_Player_C::AnimGraphNode_TwoWayBlend_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_16) == 0x0060F0, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_15) == 0x006138, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TwoWayBlend_4) == 0x006180, "Member 'UABP_Player_C::AnimGraphNode_TwoWayBlend_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_7) == 0x006248, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_6) == 0x006270, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_5) == 0x006298, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Slot_4) == 0x0062C0, "Member 'UABP_Player_C::AnimGraphNode_Slot_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ApplyAdditive) == 0x006308, "Member 'UABP_Player_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_IdentityPose) == 0x0063D0, "Member 'UABP_Player_C::AnimGraphNode_IdentityPose' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_4) == 0x0063E0, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LayeredBoneBlend_5) == 0x006408, "Member 'UABP_Player_C::AnimGraphNode_LayeredBoneBlend_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_8) == 0x0064E8, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_8' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Root) == 0x006530, "Member 'UABP_Player_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SaveCachedPose_1) == 0x006550, "Member 'UABP_Player_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_3) == 0x006658, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Slot_3) == 0x006680, "Member 'UABP_Player_C::AnimGraphNode_Slot_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LayeredBoneBlend_4) == 0x0066C8, "Member 'UABP_Player_C::AnimGraphNode_LayeredBoneBlend_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_2) == 0x0067A8, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Slot_2) == 0x0067D0, "Member 'UABP_Player_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_35) == 0x006818, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_35' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_34) == 0x006840, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_34' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_33) == 0x006868, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_33' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_32) == 0x006890, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_32' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_31) == 0x0068B8, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_31' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_30) == 0x0068E0, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_30' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_29) == 0x006908, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_29' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_28) == 0x006930, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_28' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_27) == 0x006958, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_26) == 0x006980, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_25) == 0x0069A8, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_24) == 0x0069D0, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_23) == 0x0069F8, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_22) == 0x006A20, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_21) == 0x006A48, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_20) == 0x006A70, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_19) == 0x006A98, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_18) == 0x006AC0, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_17) == 0x006AE8, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_16) == 0x006B10, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_15) == 0x006B38, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_14) == 0x006B60, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_13) == 0x006B88, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_12) == 0x006BB0, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_11) == 0x006BD8, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_10) == 0x006C00, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_9) == 0x006C28, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_8) == 0x006C50, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_7) == 0x006C78, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_6) == 0x006CA0, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_5) == 0x006CC8, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_4) == 0x006CF0, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_3) == 0x006D18, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_2) == 0x006D40, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_1) == 0x006D68, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_StateResult_12) == 0x006D90, "Member 'UABP_Player_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult) == 0x006DB0, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendSpacePlayer_10) == 0x006DD8, "Member 'UABP_Player_C::AnimGraphNode_BlendSpacePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_StateResult_11) == 0x006E48, "Member 'UABP_Player_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendSpacePlayer_9) == 0x006E68, "Member 'UABP_Player_C::AnimGraphNode_BlendSpacePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_StateResult_10) == 0x006ED8, "Member 'UABP_Player_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendSpacePlayer_8) == 0x006EF8, "Member 'UABP_Player_C::AnimGraphNode_BlendSpacePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_StateResult_9) == 0x006F68, "Member 'UABP_Player_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_14) == 0x006F88, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_StateResult_8) == 0x006FD0, "Member 'UABP_Player_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Slot_1) == 0x006FF0, "Member 'UABP_Player_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LocalRefPose) == 0x007038, "Member 'UABP_Player_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_StateResult_7) == 0x007048, "Member 'UABP_Player_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_13) == 0x007068, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_StateResult_6) == 0x0070B0, "Member 'UABP_Player_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_12) == 0x0070D0, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LayeredBoneBlend_3) == 0x007118, "Member 'UABP_Player_C::AnimGraphNode_LayeredBoneBlend_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_11) == 0x0071F8, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_StateResult_5) == 0x007240, "Member 'UABP_Player_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_7) == 0x007260, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_7' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_10) == 0x0072A8, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_9) == 0x0072F0, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_StateResult_4) == 0x007338, "Member 'UABP_Player_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_8) == 0x007358, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LayeredBoneBlend_2) == 0x0073A0, "Member 'UABP_Player_C::AnimGraphNode_LayeredBoneBlend_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendSpacePlayer_7) == 0x007480, "Member 'UABP_Player_C::AnimGraphNode_BlendSpacePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_6) == 0x0074F0, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendSpacePlayer_6) == 0x007538, "Member 'UABP_Player_C::AnimGraphNode_BlendSpacePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_StateResult_3) == 0x0075A8, "Member 'UABP_Player_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_7) == 0x0075C8, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_5) == 0x007610, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_6) == 0x007658, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_5) == 0x0076A0, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LayeredBoneBlend_1) == 0x0076E8, "Member 'UABP_Player_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_4) == 0x0077C8, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_4) == 0x007810, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_StateResult_2) == 0x007858, "Member 'UABP_Player_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TwoWayBlend_3) == 0x007878, "Member 'UABP_Player_C::AnimGraphNode_TwoWayBlend_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendSpacePlayer_5) == 0x007940, "Member 'UABP_Player_C::AnimGraphNode_BlendSpacePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TwoWayBlend_2) == 0x0079B0, "Member 'UABP_Player_C::AnimGraphNode_TwoWayBlend_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TwoWayBlend_1) == 0x007A78, "Member 'UABP_Player_C::AnimGraphNode_TwoWayBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendSpacePlayer_4) == 0x007B40, "Member 'UABP_Player_C::AnimGraphNode_BlendSpacePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendSpacePlayer_3) == 0x007BB0, "Member 'UABP_Player_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendSpacePlayer_2) == 0x007C20, "Member 'UABP_Player_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendSpacePlayer_1) == 0x007C90, "Member 'UABP_Player_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendSpacePlayer) == 0x007D00, "Member 'UABP_Player_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_3) == 0x007D70, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_2) == 0x007DB8, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_StateResult_1) == 0x007E00, "Member 'UABP_Player_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_3) == 0x007E20, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_1) == 0x007E68, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_2) == 0x007EB0, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TwoWayBlend) == 0x007EF8, "Member 'UABP_Player_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool) == 0x007FC0, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_1) == 0x008008, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer) == 0x008050, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_StateResult) == 0x008098, "Member 'UABP_Player_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_StateMachine) == 0x0080B8, "Member 'UABP_Player_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LinkedAnimLayer_6) == 0x008180, "Member 'UABP_Player_C::AnimGraphNode_LinkedAnimLayer_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LinkedAnimLayer_5) == 0x008248, "Member 'UABP_Player_C::AnimGraphNode_LinkedAnimLayer_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LinkedAnimLayer_4) == 0x008310, "Member 'UABP_Player_C::AnimGraphNode_LinkedAnimLayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LinkedAnimLayer_3) == 0x0083D8, "Member 'UABP_Player_C::AnimGraphNode_LinkedAnimLayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LinkedAnimLayer_2) == 0x0084A0, "Member 'UABP_Player_C::AnimGraphNode_LinkedAnimLayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LinkedAnimLayer_1) == 0x008568, "Member 'UABP_Player_C::AnimGraphNode_LinkedAnimLayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LinkedAnimLayer) == 0x008630, "Member 'UABP_Player_C::AnimGraphNode_LinkedAnimLayer' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ControlRig) == 0x0086F8, "Member 'UABP_Player_C::AnimGraphNode_ControlRig' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Slot) == 0x008B68, "Member 'UABP_Player_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LayeredBoneBlend) == 0x008BB0, "Member 'UABP_Player_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SaveCachedPose) == 0x008C90, "Member 'UABP_Player_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_1) == 0x008D98, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose) == 0x008DC0, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_32) == 0x008DE8, "Member 'UABP_Player_C::K2Node_PropertyAccess_32' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_30) == 0x008DEC, "Member 'UABP_Player_C::K2Node_PropertyAccess_30' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_27) == 0x008DF0, "Member 'UABP_Player_C::K2Node_PropertyAccess_27' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_26) == 0x008E08, "Member 'UABP_Player_C::K2Node_PropertyAccess_26' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_25) == 0x008E0C, "Member 'UABP_Player_C::K2Node_PropertyAccess_25' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_24) == 0x008E10, "Member 'UABP_Player_C::K2Node_PropertyAccess_24' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_23) == 0x008E28, "Member 'UABP_Player_C::K2Node_PropertyAccess_23' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_21) == 0x008E30, "Member 'UABP_Player_C::K2Node_PropertyAccess_21' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_20) == 0x008E48, "Member 'UABP_Player_C::K2Node_PropertyAccess_20' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_19) == 0x008E60, "Member 'UABP_Player_C::K2Node_PropertyAccess_19' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_18) == 0x008E78, "Member 'UABP_Player_C::K2Node_PropertyAccess_18' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_17) == 0x008E90, "Member 'UABP_Player_C::K2Node_PropertyAccess_17' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_16) == 0x008E91, "Member 'UABP_Player_C::K2Node_PropertyAccess_16' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_15) == 0x008E92, "Member 'UABP_Player_C::K2Node_PropertyAccess_15' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_14) == 0x008E93, "Member 'UABP_Player_C::K2Node_PropertyAccess_14' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_13) == 0x008E94, "Member 'UABP_Player_C::K2Node_PropertyAccess_13' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_12) == 0x008E95, "Member 'UABP_Player_C::K2Node_PropertyAccess_12' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_11) == 0x008E96, "Member 'UABP_Player_C::K2Node_PropertyAccess_11' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_10) == 0x008E98, "Member 'UABP_Player_C::K2Node_PropertyAccess_10' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_9) == 0x0090F8, "Member 'UABP_Player_C::K2Node_PropertyAccess_9' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_8) == 0x009360, "Member 'UABP_Player_C::K2Node_PropertyAccess_8' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_7) == 0x0093C0, "Member 'UABP_Player_C::K2Node_PropertyAccess_7' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_6) == 0x0093C8, "Member 'UABP_Player_C::K2Node_PropertyAccess_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_5) == 0x0093E0, "Member 'UABP_Player_C::K2Node_PropertyAccess_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_4) == 0x0093E1, "Member 'UABP_Player_C::K2Node_PropertyAccess_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_3) == 0x0093E2, "Member 'UABP_Player_C::K2Node_PropertyAccess_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_2) == 0x0093E3, "Member 'UABP_Player_C::K2Node_PropertyAccess_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_1) == 0x0093E8, "Member 'UABP_Player_C::K2Node_PropertyAccess_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess) == 0x009408, "Member 'UABP_Player_C::K2Node_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, __CustomProperty_ClavicleAdjustFloat_3EAAD7D248100B118DCFE280A191AF83) == 0x00940C, "Member 'UABP_Player_C::__CustomProperty_ClavicleAdjustFloat_3EAAD7D248100B118DCFE280A191AF83' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, Speed) == 0x009410, "Member 'UABP_Player_C::Speed' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsAim) == 0x009418, "Member 'UABP_Player_C::IsAim' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, VelocityXY) == 0x009420, "Member 'UABP_Player_C::VelocityXY' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsGliding) == 0x009430, "Member 'UABP_Player_C::IsGliding' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AimRotatorForSpine) == 0x009438, "Member 'UABP_Player_C::AimRotatorForSpine' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsShooting) == 0x009450, "Member 'UABP_Player_C::IsShooting' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AimRotatorArm) == 0x009458, "Member 'UABP_Player_C::AimRotatorArm' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsRiding) == 0x009470, "Member 'UABP_Player_C::IsRiding' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, WeaponInfo) == 0x009478, "Member 'UABP_Player_C::WeaponInfo' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, PrevWeaponInfo) == 0x0096D8, "Member 'UABP_Player_C::PrevWeaponInfo' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, ChangeWeaponWeight) == 0x009938, "Member 'UABP_Player_C::ChangeWeaponWeight' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, Right) == 0x009940, "Member 'UABP_Player_C::Right' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, Forward) == 0x009948, "Member 'UABP_Player_C::Forward' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, Pitch) == 0x009950, "Member 'UABP_Player_C::Pitch' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, Yaw) == 0x009958, "Member 'UABP_Player_C::Yaw' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsCrouch) == 0x009960, "Member 'UABP_Player_C::IsCrouch' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsAttachLeftHand) == 0x009961, "Member 'UABP_Player_C::IsAttachLeftHand' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsSliding) == 0x009962, "Member 'UABP_Player_C::IsSliding' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsRequestSliding) == 0x009963, "Member 'UABP_Player_C::IsRequestSliding' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsEnableSkySliding) == 0x009964, "Member 'UABP_Player_C::IsEnableSkySliding' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsSprint) == 0x009965, "Member 'UABP_Player_C::IsSprint' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, RidingAnimationInfo) == 0x009968, "Member 'UABP_Player_C::RidingAnimationInfo' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, HasWeapon) == 0x009988, "Member 'UABP_Player_C::HasWeapon' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, KawaiiWeight) == 0x009990, "Member 'UABP_Player_C::KawaiiWeight' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, Cloth01_FrontBagRotator) == 0x009998, "Member 'UABP_Player_C::Cloth01_FrontBagRotator' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsReloading) == 0x0099B0, "Member 'UABP_Player_C::IsReloading' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsJumpPreliminary) == 0x0099B1, "Member 'UABP_Player_C::IsJumpPreliminary' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsEndJump) == 0x0099B2, "Member 'UABP_Player_C::IsEndJump' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, LeftHandTransform) == 0x0099C0, "Member 'UABP_Player_C::LeftHandTransform' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsValidSprintAnimation) == 0x009A20, "Member 'UABP_Player_C::IsValidSprintAnimation' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, RidingActor) == 0x009A28, "Member 'UABP_Player_C::RidingActor' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, RiderModelIsBackward) == 0x009A30, "Member 'UABP_Player_C::RiderModelIsBackward' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, UseRidingAO) == 0x009A31, "Member 'UABP_Player_C::UseRidingAO' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AimRotatorForSpine_Ride_WS) == 0x009A38, "Member 'UABP_Player_C::AimRotatorForSpine_Ride_WS' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsDead) == 0x009A50, "Member 'UABP_Player_C::IsDead' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, FootIKEnable) == 0x009A51, "Member 'UABP_Player_C::FootIKEnable' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsLookatEnable) == 0x009A52, "Member 'UABP_Player_C::IsLookatEnable' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, LookAtTarget) == 0x009A58, "Member 'UABP_Player_C::LookAtTarget' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, LookatInTime) == 0x009A70, "Member 'UABP_Player_C::LookatInTime' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, LookatOutTime) == 0x009A78, "Member 'UABP_Player_C::LookatOutTime' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsClimbing) == 0x009A80, "Member 'UABP_Player_C::IsClimbing' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, UniqueRideAnim) == 0x009A88, "Member 'UABP_Player_C::UniqueRideAnim' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsUniqueRiding) == 0x009A90, "Member 'UABP_Player_C::IsUniqueRiding' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, Ride_IKPosHandR) == 0x009A98, "Member 'UABP_Player_C::Ride_IKPosHandR' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, Ride_IKPosHandL) == 0x009AB0, "Member 'UABP_Player_C::Ride_IKPosHandL' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, Ride_IKPosFootR) == 0x009AC8, "Member 'UABP_Player_C::Ride_IKPosFootR' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, Ride_IKPosFootL) == 0x009AE0, "Member 'UABP_Player_C::Ride_IKPosFootL' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, Ride_SpineAddRotate) == 0x009AF8, "Member 'UABP_Player_C::Ride_SpineAddRotate' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, Ride_HipForwardAdd) == 0x009B10, "Member 'UABP_Player_C::Ride_HipForwardAdd' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, Ride_SpineWeight) == 0x009B18, "Member 'UABP_Player_C::Ride_SpineWeight' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, UniqueRide_RightHandWeight) == 0x009B20, "Member 'UABP_Player_C::UniqueRide_RightHandWeight' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, RideIK_Pole_HandR) == 0x009B28, "Member 'UABP_Player_C::RideIK_Pole_HandR' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, RideIK_Pole_HandL) == 0x009B40, "Member 'UABP_Player_C::RideIK_Pole_HandL' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, RideIK_Pole_FootR) == 0x009B58, "Member 'UABP_Player_C::RideIK_Pole_FootR' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, RideIK_Pole_FootL) == 0x009B70, "Member 'UABP_Player_C::RideIK_Pole_FootL' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsUniqueRideIK) == 0x009B88, "Member 'UABP_Player_C::IsUniqueRideIK' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, UniqueRide_LeftHandWeight) == 0x009B90, "Member 'UABP_Player_C::UniqueRide_LeftHandWeight' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, FootStepEffect) == 0x009B98, "Member 'UABP_Player_C::FootStepEffect' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsWalking) == 0x009BA0, "Member 'UABP_Player_C::IsWalking' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, ClavicleAdjustDegree) == 0x009BA4, "Member 'UABP_Player_C::ClavicleAdjustDegree' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, GlidingAS) == 0x009BA8, "Member 'UABP_Player_C::GlidingAS' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, BlendTime_ForEagleGlider) == 0x009BB0, "Member 'UABP_Player_C::BlendTime_ForEagleGlider' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsDedicatedServer) == 0x009BB8, "Member 'UABP_Player_C::IsDedicatedServer' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, TSCached_OwnerCharacter) == 0x009BC0, "Member 'UABP_Player_C::TSCached_OwnerCharacter' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, TSCached_ShooterComponent) == 0x009BC8, "Member 'UABP_Player_C::TSCached_ShooterComponent' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, TSCached_MovementComponent) == 0x009BD0, "Member 'UABP_Player_C::TSCached_MovementComponent' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, TSCached_LookAtComponent) == 0x009BD8, "Member 'UABP_Player_C::TSCached_LookAtComponent' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, TSCached_FootIkComponent) == 0x009BE0, "Member 'UABP_Player_C::TSCached_FootIkComponent' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, TSCached_SkeletalMeshComponent) == 0x009BE8, "Member 'UABP_Player_C::TSCached_SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, TSCache_CameraRotator) == 0x009BF0, "Member 'UABP_Player_C::TSCache_CameraRotator' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, JumpTriggered) == 0x009C08, "Member 'UABP_Player_C::JumpTriggered' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, JumpCount) == 0x009C0C, "Member 'UABP_Player_C::JumpCount' has a wrong offset!");

}

