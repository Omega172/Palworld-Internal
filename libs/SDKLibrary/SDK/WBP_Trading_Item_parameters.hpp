#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Trading_Item

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Pal_structs.hpp"


namespace SDK::Params
{

// Function WBP_Trading_Item.WBP_Trading_Item_C.AllGet
// 0x0020 (0x0020 - 0x0000)
struct WBP_Trading_Item_C_AllGet final
{
public:
	class UPalMapObjectConcreteModelBase*         MapObjectConcreteModel;                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPalMapObjectItemContainerAccessInterface> ItemContainerAccess;                               // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalItemContainer*                      CallFunc_GetStoreItemContainer_TargetContainer;    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_C_AllGet) == 0x000008, "Wrong alignment on WBP_Trading_Item_C_AllGet");
static_assert(sizeof(WBP_Trading_Item_C_AllGet) == 0x000020, "Wrong size on WBP_Trading_Item_C_AllGet");
static_assert(offsetof(WBP_Trading_Item_C_AllGet, MapObjectConcreteModel) == 0x000000, "Member 'WBP_Trading_Item_C_AllGet::MapObjectConcreteModel' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_AllGet, ItemContainerAccess) == 0x000008, "Member 'WBP_Trading_Item_C_AllGet::ItemContainerAccess' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_AllGet, CallFunc_GetStoreItemContainer_TargetContainer) == 0x000018, "Member 'WBP_Trading_Item_C_AllGet::CallFunc_GetStoreItemContainer_TargetContainer' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.BndEvt__WBP_Trading_Item_PalEditableTextBox_CostNum_K2Node_ComponentBoundEvent_12_OnEditableTextBoxChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_PalEditableTextBox_CostNum_K2Node_ComponentBoundEvent_12_OnEditableTextBoxChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_PalEditableTextBox_CostNum_K2Node_ComponentBoundEvent_12_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_PalEditableTextBox_CostNum_K2Node_ComponentBoundEvent_12_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_PalEditableTextBox_CostNum_K2Node_ComponentBoundEvent_12_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000018, "Wrong size on WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_PalEditableTextBox_CostNum_K2Node_ComponentBoundEvent_12_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_PalEditableTextBox_CostNum_K2Node_ComponentBoundEvent_12_OnEditableTextBoxChangedEvent__DelegateSignature, Text) == 0x000000, "Member 'WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_PalEditableTextBox_CostNum_K2Node_ComponentBoundEvent_12_OnEditableTextBoxChangedEvent__DelegateSignature::Text' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.BndEvt__WBP_Trading_Item_PalEditableTextBox_CostNum_K2Node_ComponentBoundEvent_13_OnEditableTextBoxCommittedEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_PalEditableTextBox_CostNum_K2Node_ComponentBoundEvent_13_OnEditableTextBoxCommittedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_PalEditableTextBox_CostNum_K2Node_ComponentBoundEvent_13_OnEditableTextBoxCommittedEvent__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_PalEditableTextBox_CostNum_K2Node_ComponentBoundEvent_13_OnEditableTextBoxCommittedEvent__DelegateSignature");
static_assert(sizeof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_PalEditableTextBox_CostNum_K2Node_ComponentBoundEvent_13_OnEditableTextBoxCommittedEvent__DelegateSignature) == 0x000020, "Wrong size on WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_PalEditableTextBox_CostNum_K2Node_ComponentBoundEvent_13_OnEditableTextBoxCommittedEvent__DelegateSignature");
static_assert(offsetof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_PalEditableTextBox_CostNum_K2Node_ComponentBoundEvent_13_OnEditableTextBoxCommittedEvent__DelegateSignature, Text) == 0x000000, "Member 'WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_PalEditableTextBox_CostNum_K2Node_ComponentBoundEvent_13_OnEditableTextBoxCommittedEvent__DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_PalEditableTextBox_CostNum_K2Node_ComponentBoundEvent_13_OnEditableTextBoxCommittedEvent__DelegateSignature, CommitMethod) == 0x000018, "Member 'WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_PalEditableTextBox_CostNum_K2Node_ComponentBoundEvent_13_OnEditableTextBoxCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.BndEvt__WBP_Trading_Item_PalEditableTextBox_ProductNum_K2Node_ComponentBoundEvent_8_OnEditableTextBoxCommittedEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_PalEditableTextBox_ProductNum_K2Node_ComponentBoundEvent_8_OnEditableTextBoxCommittedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_PalEditableTextBox_ProductNum_K2Node_ComponentBoundEvent_8_OnEditableTextBoxCommittedEvent__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_PalEditableTextBox_ProductNum_K2Node_ComponentBoundEvent_8_OnEditableTextBoxCommittedEvent__DelegateSignature");
static_assert(sizeof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_PalEditableTextBox_ProductNum_K2Node_ComponentBoundEvent_8_OnEditableTextBoxCommittedEvent__DelegateSignature) == 0x000020, "Wrong size on WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_PalEditableTextBox_ProductNum_K2Node_ComponentBoundEvent_8_OnEditableTextBoxCommittedEvent__DelegateSignature");
static_assert(offsetof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_PalEditableTextBox_ProductNum_K2Node_ComponentBoundEvent_8_OnEditableTextBoxCommittedEvent__DelegateSignature, Text) == 0x000000, "Member 'WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_PalEditableTextBox_ProductNum_K2Node_ComponentBoundEvent_8_OnEditableTextBoxCommittedEvent__DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_PalEditableTextBox_ProductNum_K2Node_ComponentBoundEvent_8_OnEditableTextBoxCommittedEvent__DelegateSignature, CommitMethod) == 0x000018, "Member 'WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_PalEditableTextBox_ProductNum_K2Node_ComponentBoundEvent_8_OnEditableTextBoxCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.BndEvt__WBP_Trading_Item_PalEditableTextBox_ProductNum_K2Node_ComponentBoundEvent_9_OnEditableTextBoxChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_PalEditableTextBox_ProductNum_K2Node_ComponentBoundEvent_9_OnEditableTextBoxChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_PalEditableTextBox_ProductNum_K2Node_ComponentBoundEvent_9_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_PalEditableTextBox_ProductNum_K2Node_ComponentBoundEvent_9_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_PalEditableTextBox_ProductNum_K2Node_ComponentBoundEvent_9_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000018, "Wrong size on WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_PalEditableTextBox_ProductNum_K2Node_ComponentBoundEvent_9_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_PalEditableTextBox_ProductNum_K2Node_ComponentBoundEvent_9_OnEditableTextBoxChangedEvent__DelegateSignature, Text) == 0x000000, "Member 'WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_PalEditableTextBox_ProductNum_K2Node_ComponentBoundEvent_9_OnEditableTextBoxChangedEvent__DelegateSignature::Text' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.BndEvt__WBP_Trading_Item_WBP_IngameMenu_Chest_K2Node_ComponentBoundEvent_20_OnHoveredInventorySlot__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_IngameMenu_Chest_K2Node_ComponentBoundEvent_20_OnHoveredInventorySlot__DelegateSignature final
{
public:
	class UWBP_PalItemSlotButtonBase_C*           SlotButton;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_IngameMenu_Chest_K2Node_ComponentBoundEvent_20_OnHoveredInventorySlot__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_IngameMenu_Chest_K2Node_ComponentBoundEvent_20_OnHoveredInventorySlot__DelegateSignature");
static_assert(sizeof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_IngameMenu_Chest_K2Node_ComponentBoundEvent_20_OnHoveredInventorySlot__DelegateSignature) == 0x000008, "Wrong size on WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_IngameMenu_Chest_K2Node_ComponentBoundEvent_20_OnHoveredInventorySlot__DelegateSignature");
static_assert(offsetof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_IngameMenu_Chest_K2Node_ComponentBoundEvent_20_OnHoveredInventorySlot__DelegateSignature, SlotButton) == 0x000000, "Member 'WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_IngameMenu_Chest_K2Node_ComponentBoundEvent_20_OnHoveredInventorySlot__DelegateSignature::SlotButton' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.BndEvt__WBP_Trading_Item_WBP_IngameMenu_Chest_K2Node_ComponentBoundEvent_21_OnHoveredTargetContainerSlot__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_IngameMenu_Chest_K2Node_ComponentBoundEvent_21_OnHoveredTargetContainerSlot__DelegateSignature final
{
public:
	class UWBP_PalItemSlotButtonBase_C*           SlotButton;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_IngameMenu_Chest_K2Node_ComponentBoundEvent_21_OnHoveredTargetContainerSlot__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_IngameMenu_Chest_K2Node_ComponentBoundEvent_21_OnHoveredTargetContainerSlot__DelegateSignature");
static_assert(sizeof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_IngameMenu_Chest_K2Node_ComponentBoundEvent_21_OnHoveredTargetContainerSlot__DelegateSignature) == 0x000008, "Wrong size on WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_IngameMenu_Chest_K2Node_ComponentBoundEvent_21_OnHoveredTargetContainerSlot__DelegateSignature");
static_assert(offsetof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_IngameMenu_Chest_K2Node_ComponentBoundEvent_21_OnHoveredTargetContainerSlot__DelegateSignature, SlotButton) == 0x000000, "Member 'WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_IngameMenu_Chest_K2Node_ComponentBoundEvent_21_OnHoveredTargetContainerSlot__DelegateSignature::SlotButton' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.BndEvt__WBP_Trading_Item_WBP_ItemSlot_Cost_K2Node_ComponentBoundEvent_5_OnClickedButton__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_ItemSlot_Cost_K2Node_ComponentBoundEvent_5_OnClickedButton__DelegateSignature final
{
public:
	class UWBP_PalItemSlotButtonBase_C*           Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EPalItemSlotPressType                         PressType;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_ItemSlot_Cost_K2Node_ComponentBoundEvent_5_OnClickedButton__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_ItemSlot_Cost_K2Node_ComponentBoundEvent_5_OnClickedButton__DelegateSignature");
static_assert(sizeof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_ItemSlot_Cost_K2Node_ComponentBoundEvent_5_OnClickedButton__DelegateSignature) == 0x000010, "Wrong size on WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_ItemSlot_Cost_K2Node_ComponentBoundEvent_5_OnClickedButton__DelegateSignature");
static_assert(offsetof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_ItemSlot_Cost_K2Node_ComponentBoundEvent_5_OnClickedButton__DelegateSignature, Widget) == 0x000000, "Member 'WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_ItemSlot_Cost_K2Node_ComponentBoundEvent_5_OnClickedButton__DelegateSignature::Widget' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_ItemSlot_Cost_K2Node_ComponentBoundEvent_5_OnClickedButton__DelegateSignature, PressType) == 0x000008, "Member 'WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_ItemSlot_Cost_K2Node_ComponentBoundEvent_5_OnClickedButton__DelegateSignature::PressType' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.BndEvt__WBP_Trading_Item_WBP_ItemSlot_Product_K2Node_ComponentBoundEvent_2_OnClickedButton__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_ItemSlot_Product_K2Node_ComponentBoundEvent_2_OnClickedButton__DelegateSignature final
{
public:
	class UWBP_PalItemSlotButtonBase_C*           Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EPalItemSlotPressType                         PressType;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_ItemSlot_Product_K2Node_ComponentBoundEvent_2_OnClickedButton__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_ItemSlot_Product_K2Node_ComponentBoundEvent_2_OnClickedButton__DelegateSignature");
static_assert(sizeof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_ItemSlot_Product_K2Node_ComponentBoundEvent_2_OnClickedButton__DelegateSignature) == 0x000010, "Wrong size on WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_ItemSlot_Product_K2Node_ComponentBoundEvent_2_OnClickedButton__DelegateSignature");
static_assert(offsetof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_ItemSlot_Product_K2Node_ComponentBoundEvent_2_OnClickedButton__DelegateSignature, Widget) == 0x000000, "Member 'WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_ItemSlot_Product_K2Node_ComponentBoundEvent_2_OnClickedButton__DelegateSignature::Widget' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_ItemSlot_Product_K2Node_ComponentBoundEvent_2_OnClickedButton__DelegateSignature, PressType) == 0x000008, "Member 'WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_ItemSlot_Product_K2Node_ComponentBoundEvent_2_OnClickedButton__DelegateSignature::PressType' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Lock_CheckBox_K2Node_ComponentBoundEvent_19_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Lock_CheckBox_K2Node_ComponentBoundEvent_19_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Lock_CheckBox_K2Node_ComponentBoundEvent_19_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Lock_CheckBox_K2Node_ComponentBoundEvent_19_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Lock_CheckBox_K2Node_ComponentBoundEvent_19_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Lock_CheckBox_K2Node_ComponentBoundEvent_19_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Lock_CheckBox_K2Node_ComponentBoundEvent_19_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Lock_CheckBox_K2Node_ComponentBoundEvent_19_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Minus_1_K2Node_ComponentBoundEvent_10_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Minus_1_K2Node_ComponentBoundEvent_10_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Minus_1_K2Node_ComponentBoundEvent_10_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Minus_1_K2Node_ComponentBoundEvent_10_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Minus_1_K2Node_ComponentBoundEvent_10_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Minus_1_K2Node_ComponentBoundEvent_10_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Minus_1_K2Node_ComponentBoundEvent_10_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Minus_1_K2Node_ComponentBoundEvent_10_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Minus_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Minus_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Minus_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Minus_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Minus_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Minus_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Minus_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Minus_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Plus_1_K2Node_ComponentBoundEvent_11_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Plus_1_K2Node_ComponentBoundEvent_11_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Plus_1_K2Node_ComponentBoundEvent_11_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Plus_1_K2Node_ComponentBoundEvent_11_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Plus_1_K2Node_ComponentBoundEvent_11_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Plus_1_K2Node_ComponentBoundEvent_11_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Plus_1_K2Node_ComponentBoundEvent_11_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Plus_1_K2Node_ComponentBoundEvent_11_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Plus_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Plus_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Plus_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Plus_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Plus_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Plus_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Plus_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Plus_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Sort_TargetContainer_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Sort_TargetContainer_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Sort_TargetContainer_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Sort_TargetContainer_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Sort_TargetContainer_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Sort_TargetContainer_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Sort_TargetContainer_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_Trading_Item_C_BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Sort_TargetContainer_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.Enable Cost Select
// 0x0028 (0x0028 - 0x0000)
struct WBP_Trading_Item_C_Enable_Cost_Select final
{
public:
	TDelegate<void(class FName StaticItemId)>     K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_HUDDispatchParameter_ItemSearch_C*  CallFunc_CreateDispatchParameterForK2Node_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_Push_ReturnValue;                         // 0x0018(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_C_Enable_Cost_Select) == 0x000008, "Wrong alignment on WBP_Trading_Item_C_Enable_Cost_Select");
static_assert(sizeof(WBP_Trading_Item_C_Enable_Cost_Select) == 0x000028, "Wrong size on WBP_Trading_Item_C_Enable_Cost_Select");
static_assert(offsetof(WBP_Trading_Item_C_Enable_Cost_Select, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_Trading_Item_C_Enable_Cost_Select::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Enable_Cost_Select, CallFunc_CreateDispatchParameterForK2Node_ReturnValue) == 0x000010, "Member 'WBP_Trading_Item_C_Enable_Cost_Select::CallFunc_CreateDispatchParameterForK2Node_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Enable_Cost_Select, CallFunc_Push_ReturnValue) == 0x000018, "Member 'WBP_Trading_Item_C_Enable_Cost_Select::CallFunc_Push_ReturnValue' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.Enable Product Select
// 0x0028 (0x0028 - 0x0000)
struct WBP_Trading_Item_C_Enable_Product_Select final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F58[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetFocusTarget_target;                    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_C_Enable_Product_Select) == 0x000008, "Wrong alignment on WBP_Trading_Item_C_Enable_Product_Select");
static_assert(sizeof(WBP_Trading_Item_C_Enable_Product_Select) == 0x000028, "Wrong size on WBP_Trading_Item_C_Enable_Product_Select");
static_assert(offsetof(WBP_Trading_Item_C_Enable_Product_Select, Enable) == 0x000000, "Member 'WBP_Trading_Item_C_Enable_Product_Select::Enable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Enable_Product_Select, Temp_bool_Variable) == 0x000001, "Member 'WBP_Trading_Item_C_Enable_Product_Select::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Enable_Product_Select, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'WBP_Trading_Item_C_Enable_Product_Select::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Enable_Product_Select, CallFunc_GetFocusTarget_target) == 0x000010, "Member 'WBP_Trading_Item_C_Enable_Product_Select::CallFunc_GetFocusTarget_target' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Enable_Product_Select, K2Node_Select_Default) == 0x000018, "Member 'WBP_Trading_Item_C_Enable_Product_Select::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Enable_Product_Select, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x000020, "Member 'WBP_Trading_Item_C_Enable_Product_Select::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.ExecuteUbergraph_WBP_Trading_Item
// 0x0270 (0x0270 - 0x0000)
struct WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalHUDDispatchParameterBase*           CallFunc_GetParam_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalHUDDispatchParameter_MapObject*     K2Node_DynamicCast_AsPal_HUDDispatch_Parameter_Map_Object; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F59[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalMapObjectItemBoothModel*            K2Node_DynamicCast_AsPal_Map_Object_Item_Booth_Model; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F5A[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_5;               // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_Trading_Item_List_C*>       K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWBP_PalItemSlotButtonBase_C*           K2Node_ComponentBoundEvent_Widget_1;               // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EPalItemSlotPressType                         K2Node_ComponentBoundEvent_PressType_1;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F5B[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_PalItemSlotButtonBase_C*           K2Node_ComponentBoundEvent_Widget;                 // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EPalItemSlotPressType                         K2Node_ComponentBoundEvent_PressType;              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F5C[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_4;               // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_3;               // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_ComponentBoundEvent_Text_3;                 // 0x0090(0x0018)(ConstParm)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod_1;         // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F5D[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_ComponentBoundEvent_Text_2;                 // 0x00C8(0x0018)(ConstParm)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F5E[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNumeric_ReturnValue;                    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F5F[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_2;               // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_1;               // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_ComponentBoundEvent_Text_1;                 // 0x0120(0x0018)(ConstParm)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue_1;                // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F60[0x3];                                     // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0150(0x0018)(ConstParm)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod;           // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F61[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue_1;                    // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_3;          // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNumeric_ReturnValue_1;                  // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F62[0x3];                                     // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_1;           // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetLocalPlayerUID_ReturnValue;            // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x01B0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 TradeIndex)>             K2Node_CreateDelegate_OutputDelegate_2;            // 0x01C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalItemContainer*                      CallFunc_GetStoreItemContainer_TargetContainer;    // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x01E0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FPalUIActionBindData                   CallFunc_RegisterActionBinding_ReturnValue;        // 0x01F8(0x0004)(NoDestructor)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x01FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0204(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPalUIActionBindData                   CallFunc_RegisterActionBinding_ReturnValue_1;      // 0x0214(0x0004)(NoDestructor)
	TDelegate<void(int32 Index)>                  K2Node_CreateDelegate_OutputDelegate_5;            // 0x0218(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 Index)>                  K2Node_CreateDelegate_OutputDelegate_6;            // 0x0228(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_PalItemSlotButtonBase_C*           K2Node_ComponentBoundEvent_SlotButton_1;           // 0x0238(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_PalItemSlotButtonBase_C*           K2Node_ComponentBoundEvent_SlotButton;             // 0x0240(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 Index)>                  K2Node_CreateDelegate_OutputDelegate_7;            // 0x0248(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F63[0x7];                                     // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Trading_Item_List_C*               CallFunc_Array_Get_Item;                           // 0x0260(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item) == 0x000008, "Wrong alignment on WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item");
static_assert(sizeof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item) == 0x000270, "Wrong size on WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, EntryPoint) == 0x000000, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, CallFunc_GetParam_ReturnValue) == 0x000020, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::CallFunc_GetParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, K2Node_DynamicCast_AsPal_HUDDispatch_Parameter_Map_Object) == 0x000028, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::K2Node_DynamicCast_AsPal_HUDDispatch_Parameter_Map_Object' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, K2Node_DynamicCast_AsPal_Map_Object_Item_Booth_Model) == 0x000038, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::K2Node_DynamicCast_AsPal_Map_Object_Item_Booth_Model' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, K2Node_ComponentBoundEvent_Button_5) == 0x000048, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::K2Node_ComponentBoundEvent_Button_5' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, K2Node_MakeArray_Array) == 0x000050, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, K2Node_ComponentBoundEvent_Widget_1) == 0x000060, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::K2Node_ComponentBoundEvent_Widget_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, K2Node_ComponentBoundEvent_PressType_1) == 0x000068, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::K2Node_ComponentBoundEvent_PressType_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, K2Node_ComponentBoundEvent_Widget) == 0x000070, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::K2Node_ComponentBoundEvent_Widget' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, K2Node_ComponentBoundEvent_PressType) == 0x000078, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::K2Node_ComponentBoundEvent_PressType' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, K2Node_ComponentBoundEvent_Button_4) == 0x000080, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::K2Node_ComponentBoundEvent_Button_4' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, K2Node_ComponentBoundEvent_Button_3) == 0x000088, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::K2Node_ComponentBoundEvent_Button_3' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, K2Node_ComponentBoundEvent_Text_3) == 0x000090, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::K2Node_ComponentBoundEvent_Text_3' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, K2Node_ComponentBoundEvent_CommitMethod_1) == 0x0000A8, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::K2Node_ComponentBoundEvent_CommitMethod_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, CallFunc_Conv_TextToString_ReturnValue) == 0x0000B0, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, CallFunc_Conv_StringToInt_ReturnValue) == 0x0000C0, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C4, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, K2Node_ComponentBoundEvent_Text_2) == 0x0000C8, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::K2Node_ComponentBoundEvent_Text_2' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, CallFunc_TextIsEmpty_ReturnValue) == 0x0000E0, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0000E8, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, CallFunc_Replace_ReturnValue) == 0x0000F8, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, CallFunc_IsNumeric_ReturnValue) == 0x000108, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::CallFunc_IsNumeric_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, K2Node_ComponentBoundEvent_Button_2) == 0x000110, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, K2Node_ComponentBoundEvent_Button_1) == 0x000118, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, K2Node_ComponentBoundEvent_Text_1) == 0x000120, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::K2Node_ComponentBoundEvent_Text_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, CallFunc_Subtract_IntInt_ReturnValue) == 0x000138, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, CallFunc_TextIsEmpty_ReturnValue_1) == 0x00013C, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::CallFunc_TextIsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, CallFunc_Conv_TextToString_ReturnValue_2) == 0x000140, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, K2Node_ComponentBoundEvent_Text) == 0x000150, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, K2Node_ComponentBoundEvent_CommitMethod) == 0x000168, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::K2Node_ComponentBoundEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, CallFunc_Replace_ReturnValue_1) == 0x000170, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::CallFunc_Replace_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, CallFunc_Conv_TextToString_ReturnValue_3) == 0x000180, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::CallFunc_Conv_TextToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, CallFunc_IsNumeric_ReturnValue_1) == 0x000190, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::CallFunc_IsNumeric_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, CallFunc_Conv_StringToInt_ReturnValue_1) == 0x000194, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::CallFunc_Conv_StringToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000198, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, CallFunc_Add_IntInt_ReturnValue_2) == 0x00019C, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, CallFunc_GetLocalPlayerUID_ReturnValue) == 0x0001A0, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::CallFunc_GetLocalPlayerUID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, K2Node_CreateDelegate_OutputDelegate_1) == 0x0001B0, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, K2Node_CreateDelegate_OutputDelegate_2) == 0x0001C0, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, CallFunc_GetStoreItemContainer_TargetContainer) == 0x0001D0, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::CallFunc_GetStoreItemContainer_TargetContainer' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, CallFunc_MakeLiteralName_ReturnValue) == 0x0001D8, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, K2Node_CreateDelegate_OutputDelegate_3) == 0x0001E0, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, K2Node_ComponentBoundEvent_Button) == 0x0001F0, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, CallFunc_RegisterActionBinding_ReturnValue) == 0x0001F8, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::CallFunc_RegisterActionBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, CallFunc_MakeLiteralName_ReturnValue_1) == 0x0001FC, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, K2Node_CreateDelegate_OutputDelegate_4) == 0x000204, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, CallFunc_RegisterActionBinding_ReturnValue_1) == 0x000214, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::CallFunc_RegisterActionBinding_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, K2Node_CreateDelegate_OutputDelegate_5) == 0x000218, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, K2Node_CreateDelegate_OutputDelegate_6) == 0x000228, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, K2Node_ComponentBoundEvent_SlotButton_1) == 0x000238, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::K2Node_ComponentBoundEvent_SlotButton_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, K2Node_ComponentBoundEvent_SlotButton) == 0x000240, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::K2Node_ComponentBoundEvent_SlotButton' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, K2Node_CreateDelegate_OutputDelegate_7) == 0x000248, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000258, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, CallFunc_Array_Get_Item) == 0x000260, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, CallFunc_Array_Length_ReturnValue) == 0x000268, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item, CallFunc_Less_IntInt_ReturnValue) == 0x00026C, "Member 'WBP_Trading_Item_C_ExecuteUbergraph_WBP_Trading_Item::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.FocusLeft
// 0x0018 (0x0018 - 0x0000)
struct WBP_Trading_Item_C_FocusLeft final
{
public:
	class UWidget*                                CallFunc_Get_Inventory_Top_Focust_Target_FocusTarget; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetInventoryLastHoveredFocusTarget_Widget; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_C_FocusLeft) == 0x000008, "Wrong alignment on WBP_Trading_Item_C_FocusLeft");
static_assert(sizeof(WBP_Trading_Item_C_FocusLeft) == 0x000018, "Wrong size on WBP_Trading_Item_C_FocusLeft");
static_assert(offsetof(WBP_Trading_Item_C_FocusLeft, CallFunc_Get_Inventory_Top_Focust_Target_FocusTarget) == 0x000000, "Member 'WBP_Trading_Item_C_FocusLeft::CallFunc_Get_Inventory_Top_Focust_Target_FocusTarget' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_FocusLeft, CallFunc_GetInventoryLastHoveredFocusTarget_Widget) == 0x000008, "Member 'WBP_Trading_Item_C_FocusLeft::CallFunc_GetInventoryLastHoveredFocusTarget_Widget' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_FocusLeft, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_Trading_Item_C_FocusLeft::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.FocusRight
// 0x0018 (0x0018 - 0x0000)
struct WBP_Trading_Item_C_FocusRight final
{
public:
	class UWidget*                                CallFunc_GetTargetContainerTopFocustTarget_FocusTarget; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetTargetContainerLastHoveredFocusTarget_Widget; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_C_FocusRight) == 0x000008, "Wrong alignment on WBP_Trading_Item_C_FocusRight");
static_assert(sizeof(WBP_Trading_Item_C_FocusRight) == 0x000018, "Wrong size on WBP_Trading_Item_C_FocusRight");
static_assert(offsetof(WBP_Trading_Item_C_FocusRight, CallFunc_GetTargetContainerTopFocustTarget_FocusTarget) == 0x000000, "Member 'WBP_Trading_Item_C_FocusRight::CallFunc_GetTargetContainerTopFocustTarget_FocusTarget' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_FocusRight, CallFunc_GetTargetContainerLastHoveredFocusTarget_Widget) == 0x000008, "Member 'WBP_Trading_Item_C_FocusRight::CallFunc_GetTargetContainerLastHoveredFocusTarget_Widget' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_FocusRight, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_Trading_Item_C_FocusRight::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.FocusToStoreManage
// 0x0002 (0x0002 - 0x0000)
struct WBP_Trading_Item_C_FocusToStoreManage final
{
public:
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_C_FocusToStoreManage) == 0x000001, "Wrong alignment on WBP_Trading_Item_C_FocusToStoreManage");
static_assert(sizeof(WBP_Trading_Item_C_FocusToStoreManage) == 0x000002, "Wrong size on WBP_Trading_Item_C_FocusToStoreManage");
static_assert(offsetof(WBP_Trading_Item_C_FocusToStoreManage, CallFunc_IsVisible_ReturnValue) == 0x000000, "Member 'WBP_Trading_Item_C_FocusToStoreManage::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_FocusToStoreManage, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'WBP_Trading_Item_C_FocusToStoreManage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.On Store Content Updated
// 0x00C8 (0x00C8 - 0x0000)
struct WBP_Trading_Item_C_On_Store_Content_Updated final
{
public:
	class UPalItemContainer*                      ItemContainer;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F64[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPalItemBoothTradeInfo>         CallFunc_GetTradeInfos_OutTradeInfo;               // 0x0018(0x0010)(ReferenceParm)
	class UWBP_Trading_Item_List_C*               CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FPalItemBoothTradeInfo                 CallFunc_Array_Get_Item_1;                         // 0x0030(0x0068)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F65[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemStackCount_ReturnValue;            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x00A9(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F66[0x2];                                     // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTargetItemStock_ReturnValue;           // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00B0(0x0018)()
};
static_assert(alignof(WBP_Trading_Item_C_On_Store_Content_Updated) == 0x000008, "Wrong alignment on WBP_Trading_Item_C_On_Store_Content_Updated");
static_assert(sizeof(WBP_Trading_Item_C_On_Store_Content_Updated) == 0x0000C8, "Wrong size on WBP_Trading_Item_C_On_Store_Content_Updated");
static_assert(offsetof(WBP_Trading_Item_C_On_Store_Content_Updated, ItemContainer) == 0x000000, "Member 'WBP_Trading_Item_C_On_Store_Content_Updated::ItemContainer' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_On_Store_Content_Updated, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_Trading_Item_C_On_Store_Content_Updated::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_On_Store_Content_Updated, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBP_Trading_Item_C_On_Store_Content_Updated::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_On_Store_Content_Updated, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_Trading_Item_C_On_Store_Content_Updated::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_On_Store_Content_Updated, CallFunc_GetTradeInfos_OutTradeInfo) == 0x000018, "Member 'WBP_Trading_Item_C_On_Store_Content_Updated::CallFunc_GetTradeInfos_OutTradeInfo' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_On_Store_Content_Updated, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_Trading_Item_C_On_Store_Content_Updated::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_On_Store_Content_Updated, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'WBP_Trading_Item_C_On_Store_Content_Updated::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_On_Store_Content_Updated, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'WBP_Trading_Item_C_On_Store_Content_Updated::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_On_Store_Content_Updated, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'WBP_Trading_Item_C_On_Store_Content_Updated::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_On_Store_Content_Updated, CallFunc_Array_Length_ReturnValue_1) == 0x0000A0, "Member 'WBP_Trading_Item_C_On_Store_Content_Updated::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_On_Store_Content_Updated, CallFunc_GetItemStackCount_ReturnValue) == 0x0000A4, "Member 'WBP_Trading_Item_C_On_Store_Content_Updated::CallFunc_GetItemStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_On_Store_Content_Updated, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A8, "Member 'WBP_Trading_Item_C_On_Store_Content_Updated::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_On_Store_Content_Updated, CallFunc_IsEmpty_ReturnValue) == 0x0000A9, "Member 'WBP_Trading_Item_C_On_Store_Content_Updated::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_On_Store_Content_Updated, CallFunc_GetTargetItemStock_ReturnValue) == 0x0000AC, "Member 'WBP_Trading_Item_C_On_Store_Content_Updated::CallFunc_GetTargetItemStock_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_On_Store_Content_Updated, CallFunc_Conv_IntToText_ReturnValue) == 0x0000B0, "Member 'WBP_Trading_Item_C_On_Store_Content_Updated::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.OnCancelAction
// 0x0009 (0x0009 - 0x0000)
struct WBP_Trading_Item_C_OnCancelAction final
{
public:
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasKeyboardFocus_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyUserFocus_ReturnValue;              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasKeyboardFocus_ReturnValue_1;           // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyUserFocus_ReturnValue_1;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_C_OnCancelAction) == 0x000001, "Wrong alignment on WBP_Trading_Item_C_OnCancelAction");
static_assert(sizeof(WBP_Trading_Item_C_OnCancelAction) == 0x000009, "Wrong size on WBP_Trading_Item_C_OnCancelAction");
static_assert(offsetof(WBP_Trading_Item_C_OnCancelAction, CallFunc_IsVisible_ReturnValue) == 0x000000, "Member 'WBP_Trading_Item_C_OnCancelAction::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_OnCancelAction, CallFunc_HasKeyboardFocus_ReturnValue) == 0x000001, "Member 'WBP_Trading_Item_C_OnCancelAction::CallFunc_HasKeyboardFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_OnCancelAction, CallFunc_HasAnyUserFocus_ReturnValue) == 0x000002, "Member 'WBP_Trading_Item_C_OnCancelAction::CallFunc_HasAnyUserFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_OnCancelAction, CallFunc_HasKeyboardFocus_ReturnValue_1) == 0x000003, "Member 'WBP_Trading_Item_C_OnCancelAction::CallFunc_HasKeyboardFocus_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_OnCancelAction, CallFunc_HasAnyUserFocus_ReturnValue_1) == 0x000004, "Member 'WBP_Trading_Item_C_OnCancelAction::CallFunc_HasAnyUserFocus_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_OnCancelAction, CallFunc_BooleanOR_ReturnValue) == 0x000005, "Member 'WBP_Trading_Item_C_OnCancelAction::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_OnCancelAction, CallFunc_IsVisible_ReturnValue_1) == 0x000006, "Member 'WBP_Trading_Item_C_OnCancelAction::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_OnCancelAction, CallFunc_BooleanOR_ReturnValue_1) == 0x000007, "Member 'WBP_Trading_Item_C_OnCancelAction::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_OnCancelAction, CallFunc_BooleanOR_ReturnValue_2) == 0x000008, "Member 'WBP_Trading_Item_C_OnCancelAction::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.OnClickedAnyProductSlot
// 0x0090 (0x0090 - 0x0000)
struct WBP_Trading_Item_C_OnClickedAnyProductSlot final
{
public:
	class UWBP_PalItemSlotButtonBase_C*           Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EPalItemSlotPressType                         PressType;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F67[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalItemSlot*                           CallFunc_GetTargetSlot_targetSlot;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F68[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalItemId                             CallFunc_GetItemId_ReturnValue;                    // 0x001C(0x0028)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FPalItemAndNum                         K2Node_MakeStruct_PalItemAndNum;                   // 0x0044(0x002C)(NoDestructor)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F69[0x2];                                     // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTargetItemStock_ReturnValue;           // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0078(0x0018)()
};
static_assert(alignof(WBP_Trading_Item_C_OnClickedAnyProductSlot) == 0x000008, "Wrong alignment on WBP_Trading_Item_C_OnClickedAnyProductSlot");
static_assert(sizeof(WBP_Trading_Item_C_OnClickedAnyProductSlot) == 0x000090, "Wrong size on WBP_Trading_Item_C_OnClickedAnyProductSlot");
static_assert(offsetof(WBP_Trading_Item_C_OnClickedAnyProductSlot, Param_Slot) == 0x000000, "Member 'WBP_Trading_Item_C_OnClickedAnyProductSlot::Param_Slot' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_OnClickedAnyProductSlot, PressType) == 0x000008, "Member 'WBP_Trading_Item_C_OnClickedAnyProductSlot::PressType' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_OnClickedAnyProductSlot, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000009, "Member 'WBP_Trading_Item_C_OnClickedAnyProductSlot::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_OnClickedAnyProductSlot, CallFunc_GetTargetSlot_targetSlot) == 0x000010, "Member 'WBP_Trading_Item_C_OnClickedAnyProductSlot::CallFunc_GetTargetSlot_targetSlot' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_OnClickedAnyProductSlot, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_Trading_Item_C_OnClickedAnyProductSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_OnClickedAnyProductSlot, CallFunc_GetItemId_ReturnValue) == 0x00001C, "Member 'WBP_Trading_Item_C_OnClickedAnyProductSlot::CallFunc_GetItemId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_OnClickedAnyProductSlot, K2Node_MakeStruct_PalItemAndNum) == 0x000044, "Member 'WBP_Trading_Item_C_OnClickedAnyProductSlot::K2Node_MakeStruct_PalItemAndNum' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_OnClickedAnyProductSlot, CallFunc_IsEmpty_ReturnValue) == 0x000070, "Member 'WBP_Trading_Item_C_OnClickedAnyProductSlot::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_OnClickedAnyProductSlot, CallFunc_IsVisible_ReturnValue) == 0x000071, "Member 'WBP_Trading_Item_C_OnClickedAnyProductSlot::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_OnClickedAnyProductSlot, CallFunc_GetTargetItemStock_ReturnValue) == 0x000074, "Member 'WBP_Trading_Item_C_OnClickedAnyProductSlot::CallFunc_GetTargetItemStock_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_OnClickedAnyProductSlot, CallFunc_Conv_IntToText_ReturnValue) == 0x000078, "Member 'WBP_Trading_Item_C_OnClickedAnyProductSlot::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.OnClickedCostSelectSlot
// 0x005C (0x005C - 0x0000)
struct WBP_Trading_Item_C_OnClickedCostSelectSlot final
{
public:
	class FName                                   StaticItemId;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPalItemId                             K2Node_MakeStruct_PalItemId;                       // 0x0008(0x0028)(NoDestructor, HasGetValueTypeHash)
	struct FPalItemAndNum                         K2Node_MakeStruct_PalItemAndNum;                   // 0x0030(0x002C)(NoDestructor)
};
static_assert(alignof(WBP_Trading_Item_C_OnClickedCostSelectSlot) == 0x000004, "Wrong alignment on WBP_Trading_Item_C_OnClickedCostSelectSlot");
static_assert(sizeof(WBP_Trading_Item_C_OnClickedCostSelectSlot) == 0x00005C, "Wrong size on WBP_Trading_Item_C_OnClickedCostSelectSlot");
static_assert(offsetof(WBP_Trading_Item_C_OnClickedCostSelectSlot, StaticItemId) == 0x000000, "Member 'WBP_Trading_Item_C_OnClickedCostSelectSlot::StaticItemId' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_OnClickedCostSelectSlot, K2Node_MakeStruct_PalItemId) == 0x000008, "Member 'WBP_Trading_Item_C_OnClickedCostSelectSlot::K2Node_MakeStruct_PalItemId' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_OnClickedCostSelectSlot, K2Node_MakeStruct_PalItemAndNum) == 0x000030, "Member 'WBP_Trading_Item_C_OnClickedCostSelectSlot::K2Node_MakeStruct_PalItemAndNum' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.OnClickedRemoveTradeButton
// 0x0004 (0x0004 - 0x0000)
struct WBP_Trading_Item_C_OnClickedRemoveTradeButton final
{
public:
	int32                                         TradeIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_C_OnClickedRemoveTradeButton) == 0x000004, "Wrong alignment on WBP_Trading_Item_C_OnClickedRemoveTradeButton");
static_assert(sizeof(WBP_Trading_Item_C_OnClickedRemoveTradeButton) == 0x000004, "Wrong size on WBP_Trading_Item_C_OnClickedRemoveTradeButton");
static_assert(offsetof(WBP_Trading_Item_C_OnClickedRemoveTradeButton, TradeIndex) == 0x000000, "Member 'WBP_Trading_Item_C_OnClickedRemoveTradeButton::TradeIndex' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.OnPrivateLockChanged
// 0x0018 (0x0018 - 0x0000)
struct WBP_Trading_Item_C_OnPrivateLockChanged final
{
public:
	struct FGuid                                  LockPlayerUId;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECheckBoxState                                Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECheckBoxState                                Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLockedPrivateByLocalPlayer_ReturnValue; // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECheckBoxState                                K2Node_Select_Default;                             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_C_OnPrivateLockChanged) == 0x000004, "Wrong alignment on WBP_Trading_Item_C_OnPrivateLockChanged");
static_assert(sizeof(WBP_Trading_Item_C_OnPrivateLockChanged) == 0x000018, "Wrong size on WBP_Trading_Item_C_OnPrivateLockChanged");
static_assert(offsetof(WBP_Trading_Item_C_OnPrivateLockChanged, LockPlayerUId) == 0x000000, "Member 'WBP_Trading_Item_C_OnPrivateLockChanged::LockPlayerUId' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_OnPrivateLockChanged, Temp_bool_Variable) == 0x000010, "Member 'WBP_Trading_Item_C_OnPrivateLockChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_OnPrivateLockChanged, Temp_byte_Variable) == 0x000011, "Member 'WBP_Trading_Item_C_OnPrivateLockChanged::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_OnPrivateLockChanged, Temp_byte_Variable_1) == 0x000012, "Member 'WBP_Trading_Item_C_OnPrivateLockChanged::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_OnPrivateLockChanged, CallFunc_IsLockedPrivateByLocalPlayer_ReturnValue) == 0x000013, "Member 'WBP_Trading_Item_C_OnPrivateLockChanged::CallFunc_IsLockedPrivateByLocalPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_OnPrivateLockChanged, K2Node_Select_Default) == 0x000014, "Member 'WBP_Trading_Item_C_OnPrivateLockChanged::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.OnStoreSlotHovered
// 0x0010 (0x0010 - 0x0000)
struct WBP_Trading_Item_C_OnStoreSlotHovered final
{
public:
	class UWBP_PalItemSlotButtonBase_C*           Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_C_OnStoreSlotHovered) == 0x000008, "Wrong alignment on WBP_Trading_Item_C_OnStoreSlotHovered");
static_assert(sizeof(WBP_Trading_Item_C_OnStoreSlotHovered) == 0x000010, "Wrong size on WBP_Trading_Item_C_OnStoreSlotHovered");
static_assert(offsetof(WBP_Trading_Item_C_OnStoreSlotHovered, Widget) == 0x000000, "Member 'WBP_Trading_Item_C_OnStoreSlotHovered::Widget' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_OnStoreSlotHovered, CallFunc_IsVisible_ReturnValue) == 0x000008, "Member 'WBP_Trading_Item_C_OnStoreSlotHovered::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.OnStoreSlotUnhovered
// 0x0020 (0x0020 - 0x0000)
struct WBP_Trading_Item_C_OnStoreSlotUnhovered final
{
public:
	class UWBP_PalItemSlotButtonBase_C*           Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_C_OnStoreSlotUnhovered) == 0x000008, "Wrong alignment on WBP_Trading_Item_C_OnStoreSlotUnhovered");
static_assert(sizeof(WBP_Trading_Item_C_OnStoreSlotUnhovered) == 0x000020, "Wrong size on WBP_Trading_Item_C_OnStoreSlotUnhovered");
static_assert(offsetof(WBP_Trading_Item_C_OnStoreSlotUnhovered, Widget) == 0x000000, "Member 'WBP_Trading_Item_C_OnStoreSlotUnhovered::Widget' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_OnStoreSlotUnhovered, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_Trading_Item_C_OnStoreSlotUnhovered::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_OnStoreSlotUnhovered, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'WBP_Trading_Item_C_OnStoreSlotUnhovered::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.OnTradeEdit
// 0x00D0 (0x00D0 - 0x0000)
struct WBP_Trading_Item_C_OnTradeEdit final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F6A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0020(0x0018)()
	int32                                         CallFunc_GetTargetItemStock_ReturnValue;           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F6B[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x0040(0x0018)()
	TArray<struct FPalItemBoothTradeInfo>         CallFunc_GetTradeInfos_OutTradeInfo;               // 0x0058(0x0010)(ReferenceParm)
	struct FPalItemBoothTradeInfo                 CallFunc_Array_Get_Item;                           // 0x0068(0x0068)(NoDestructor)
};
static_assert(alignof(WBP_Trading_Item_C_OnTradeEdit) == 0x000008, "Wrong alignment on WBP_Trading_Item_C_OnTradeEdit");
static_assert(sizeof(WBP_Trading_Item_C_OnTradeEdit) == 0x0000D0, "Wrong size on WBP_Trading_Item_C_OnTradeEdit");
static_assert(offsetof(WBP_Trading_Item_C_OnTradeEdit, Param_Index) == 0x000000, "Member 'WBP_Trading_Item_C_OnTradeEdit::Param_Index' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_OnTradeEdit, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WBP_Trading_Item_C_OnTradeEdit::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_OnTradeEdit, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000020, "Member 'WBP_Trading_Item_C_OnTradeEdit::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_OnTradeEdit, CallFunc_GetTargetItemStock_ReturnValue) == 0x000038, "Member 'WBP_Trading_Item_C_OnTradeEdit::CallFunc_GetTargetItemStock_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_OnTradeEdit, CallFunc_Conv_IntToText_ReturnValue_2) == 0x000040, "Member 'WBP_Trading_Item_C_OnTradeEdit::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_OnTradeEdit, CallFunc_GetTradeInfos_OutTradeInfo) == 0x000058, "Member 'WBP_Trading_Item_C_OnTradeEdit::CallFunc_GetTradeInfos_OutTradeInfo' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_OnTradeEdit, CallFunc_Array_Get_Item) == 0x000068, "Member 'WBP_Trading_Item_C_OnTradeEdit::CallFunc_Array_Get_Item' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.OnTradeHovered
// 0x0088 (0x0088 - 0x0000)
struct WBP_Trading_Item_C_OnTradeHovered final
{
public:
	int32                                         TradeIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F6C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Trading_Item_List_C*               CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPalItemBoothTradeInfo>         CallFunc_GetTradeInfos_OutTradeInfo;               // 0x0010(0x0010)(ReferenceParm)
	struct FPalItemBoothTradeInfo                 CallFunc_Array_Get_Item_1;                         // 0x0020(0x0068)(NoDestructor)
};
static_assert(alignof(WBP_Trading_Item_C_OnTradeHovered) == 0x000008, "Wrong alignment on WBP_Trading_Item_C_OnTradeHovered");
static_assert(sizeof(WBP_Trading_Item_C_OnTradeHovered) == 0x000088, "Wrong size on WBP_Trading_Item_C_OnTradeHovered");
static_assert(offsetof(WBP_Trading_Item_C_OnTradeHovered, TradeIndex) == 0x000000, "Member 'WBP_Trading_Item_C_OnTradeHovered::TradeIndex' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_OnTradeHovered, CallFunc_Array_Get_Item) == 0x000008, "Member 'WBP_Trading_Item_C_OnTradeHovered::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_OnTradeHovered, CallFunc_GetTradeInfos_OutTradeInfo) == 0x000010, "Member 'WBP_Trading_Item_C_OnTradeHovered::CallFunc_GetTradeInfos_OutTradeInfo' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_OnTradeHovered, CallFunc_Array_Get_Item_1) == 0x000020, "Member 'WBP_Trading_Item_C_OnTradeHovered::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.OnTradeUnhovered
// 0x0004 (0x0004 - 0x0000)
struct WBP_Trading_Item_C_OnTradeUnhovered final
{
public:
	int32                                         TradeIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_C_OnTradeUnhovered) == 0x000004, "Wrong alignment on WBP_Trading_Item_C_OnTradeUnhovered");
static_assert(sizeof(WBP_Trading_Item_C_OnTradeUnhovered) == 0x000004, "Wrong size on WBP_Trading_Item_C_OnTradeUnhovered");
static_assert(offsetof(WBP_Trading_Item_C_OnTradeUnhovered, TradeIndex) == 0x000000, "Member 'WBP_Trading_Item_C_OnTradeUnhovered::TradeIndex' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.Refill
// 0x0010 (0x0010 - 0x0000)
struct WBP_Trading_Item_C_Refill final
{
public:
	class UPalItemContainer*                      CallFunc_GetStoreItemContainer_TargetContainer;    // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_C_Refill) == 0x000008, "Wrong alignment on WBP_Trading_Item_C_Refill");
static_assert(sizeof(WBP_Trading_Item_C_Refill) == 0x000010, "Wrong size on WBP_Trading_Item_C_Refill");
static_assert(offsetof(WBP_Trading_Item_C_Refill, CallFunc_GetStoreItemContainer_TargetContainer) == 0x000000, "Member 'WBP_Trading_Item_C_Refill::CallFunc_GetStoreItemContainer_TargetContainer' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Refill, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_Trading_Item_C_Refill::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.SetCostSettingNum
// 0x0040 (0x0040 - 0x0000)
struct WBP_Trading_Item_C_SetCostSettingNum final
{
public:
	int32                                         NewNum;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F6D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalItemIDManager*                      CallFunc_GetItemIDManager_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalStaticItemDataBase*                 CallFunc_GetStaticItemData_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxStackCount_ReturnValue;             // 0x0018(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F6E[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0028(0x0018)()
};
static_assert(alignof(WBP_Trading_Item_C_SetCostSettingNum) == 0x000008, "Wrong alignment on WBP_Trading_Item_C_SetCostSettingNum");
static_assert(sizeof(WBP_Trading_Item_C_SetCostSettingNum) == 0x000040, "Wrong size on WBP_Trading_Item_C_SetCostSettingNum");
static_assert(offsetof(WBP_Trading_Item_C_SetCostSettingNum, NewNum) == 0x000000, "Member 'WBP_Trading_Item_C_SetCostSettingNum::NewNum' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SetCostSettingNum, CallFunc_GetItemIDManager_ReturnValue) == 0x000008, "Member 'WBP_Trading_Item_C_SetCostSettingNum::CallFunc_GetItemIDManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SetCostSettingNum, CallFunc_GetStaticItemData_ReturnValue) == 0x000010, "Member 'WBP_Trading_Item_C_SetCostSettingNum::CallFunc_GetStaticItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SetCostSettingNum, CallFunc_GetMaxStackCount_ReturnValue) == 0x000018, "Member 'WBP_Trading_Item_C_SetCostSettingNum::CallFunc_GetMaxStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SetCostSettingNum, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'WBP_Trading_Item_C_SetCostSettingNum::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SetCostSettingNum, CallFunc_Min_ReturnValue) == 0x000020, "Member 'WBP_Trading_Item_C_SetCostSettingNum::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SetCostSettingNum, CallFunc_Max_ReturnValue) == 0x000024, "Member 'WBP_Trading_Item_C_SetCostSettingNum::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SetCostSettingNum, CallFunc_Conv_IntToText_ReturnValue) == 0x000028, "Member 'WBP_Trading_Item_C_SetCostSettingNum::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.SetProductSettingNum
// 0x0050 (0x0050 - 0x0000)
struct WBP_Trading_Item_C_SetProductSettingNum final
{
public:
	int32                                         NewNum;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F6F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalItemIDManager*                      CallFunc_GetItemIDManager_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTargetItemStock_ReturnValue;           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F70[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalStaticItemDataBase*                 CallFunc_GetStaticItemData_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxStackCount_ReturnValue;             // 0x0020(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F71[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue_1;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F72[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0038(0x0018)()
};
static_assert(alignof(WBP_Trading_Item_C_SetProductSettingNum) == 0x000008, "Wrong alignment on WBP_Trading_Item_C_SetProductSettingNum");
static_assert(sizeof(WBP_Trading_Item_C_SetProductSettingNum) == 0x000050, "Wrong size on WBP_Trading_Item_C_SetProductSettingNum");
static_assert(offsetof(WBP_Trading_Item_C_SetProductSettingNum, NewNum) == 0x000000, "Member 'WBP_Trading_Item_C_SetProductSettingNum::NewNum' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SetProductSettingNum, CallFunc_GetItemIDManager_ReturnValue) == 0x000008, "Member 'WBP_Trading_Item_C_SetProductSettingNum::CallFunc_GetItemIDManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SetProductSettingNum, CallFunc_GetTargetItemStock_ReturnValue) == 0x000010, "Member 'WBP_Trading_Item_C_SetProductSettingNum::CallFunc_GetTargetItemStock_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SetProductSettingNum, CallFunc_GetStaticItemData_ReturnValue) == 0x000018, "Member 'WBP_Trading_Item_C_SetProductSettingNum::CallFunc_GetStaticItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SetProductSettingNum, CallFunc_GetMaxStackCount_ReturnValue) == 0x000020, "Member 'WBP_Trading_Item_C_SetProductSettingNum::CallFunc_GetMaxStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SetProductSettingNum, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'WBP_Trading_Item_C_SetProductSettingNum::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SetProductSettingNum, CallFunc_Min_ReturnValue) == 0x000028, "Member 'WBP_Trading_Item_C_SetProductSettingNum::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SetProductSettingNum, CallFunc_Min_ReturnValue_1) == 0x00002C, "Member 'WBP_Trading_Item_C_SetProductSettingNum::CallFunc_Min_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SetProductSettingNum, CallFunc_Max_ReturnValue) == 0x000030, "Member 'WBP_Trading_Item_C_SetProductSettingNum::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SetProductSettingNum, CallFunc_Conv_IntToText_ReturnValue) == 0x000038, "Member 'WBP_Trading_Item_C_SetProductSettingNum::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.Setup
// 0x00F0 (0x00F0 - 0x0000)
struct WBP_Trading_Item_C_Setup final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F73[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UWBP_PalItemSlotButtonBase_C* Widget)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECheckBoxState                                Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F74[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UWBP_PalItemSlotButtonBase_C* Widget)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ECheckBoxState                                Temp_byte_Variable_1;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F75[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UWBP_PalItemSlotButtonBase_C* Widget, EPalItemSlotPressType PressType)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGuid& PlayerUId)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<EPalPlayerInventoryType>               K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
	TDelegate<void(class UPalItemContainer* Container)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0060(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0070(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F76[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_PalItemSlotButtonBase_C*>   CallFunc_GetAllItemSlotButton_Slots;               // 0x0088(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F77[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_PalItemSlotButtonBase_C*           CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F78[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLocalizedText_ReturnValue;             // 0x00B0(0x0018)()
	class UBP_PalInventoryModel_C*                CallFunc_SpawnObject_ReturnValue;                  // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLockedPrivateByLocalPlayer_ReturnValue; // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECheckBoxState                                K2Node_Select_Default;                             // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F79[0x6];                                     // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalItemContainer*                      CallFunc_GetStoreItemContainer_TargetContainer;    // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F7A[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_PalItemListBlock_C*                CallFunc_AddItemContainer_createdBlock;            // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_C_Setup) == 0x000008, "Wrong alignment on WBP_Trading_Item_C_Setup");
static_assert(sizeof(WBP_Trading_Item_C_Setup) == 0x0000F0, "Wrong size on WBP_Trading_Item_C_Setup");
static_assert(offsetof(WBP_Trading_Item_C_Setup, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_Trading_Item_C_Setup::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Setup, Temp_bool_Variable) == 0x000004, "Member 'WBP_Trading_Item_C_Setup::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Setup, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_Trading_Item_C_Setup::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Setup, Temp_byte_Variable) == 0x000018, "Member 'WBP_Trading_Item_C_Setup::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Setup, K2Node_CreateDelegate_OutputDelegate_1) == 0x00001C, "Member 'WBP_Trading_Item_C_Setup::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Setup, Temp_byte_Variable_1) == 0x00002C, "Member 'WBP_Trading_Item_C_Setup::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Setup, K2Node_CreateDelegate_OutputDelegate_2) == 0x000030, "Member 'WBP_Trading_Item_C_Setup::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Setup, K2Node_CreateDelegate_OutputDelegate_3) == 0x000040, "Member 'WBP_Trading_Item_C_Setup::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Setup, K2Node_MakeArray_Array) == 0x000050, "Member 'WBP_Trading_Item_C_Setup::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Setup, K2Node_CreateDelegate_OutputDelegate_4) == 0x000060, "Member 'WBP_Trading_Item_C_Setup::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Setup, K2Node_CreateDelegate_OutputDelegate_5) == 0x000070, "Member 'WBP_Trading_Item_C_Setup::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Setup, Temp_int_Loop_Counter_Variable) == 0x000080, "Member 'WBP_Trading_Item_C_Setup::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Setup, CallFunc_GetAllItemSlotButton_Slots) == 0x000088, "Member 'WBP_Trading_Item_C_Setup::CallFunc_GetAllItemSlotButton_Slots' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Setup, CallFunc_Add_IntInt_ReturnValue) == 0x000098, "Member 'WBP_Trading_Item_C_Setup::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Setup, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'WBP_Trading_Item_C_Setup::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Setup, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'WBP_Trading_Item_C_Setup::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Setup, CallFunc_Less_IntInt_ReturnValue) == 0x0000AC, "Member 'WBP_Trading_Item_C_Setup::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Setup, CallFunc_GetLocalizedText_ReturnValue) == 0x0000B0, "Member 'WBP_Trading_Item_C_Setup::CallFunc_GetLocalizedText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Setup, CallFunc_SpawnObject_ReturnValue) == 0x0000C8, "Member 'WBP_Trading_Item_C_Setup::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Setup, CallFunc_IsLockedPrivateByLocalPlayer_ReturnValue) == 0x0000D0, "Member 'WBP_Trading_Item_C_Setup::CallFunc_IsLockedPrivateByLocalPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Setup, K2Node_Select_Default) == 0x0000D1, "Member 'WBP_Trading_Item_C_Setup::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Setup, CallFunc_GetStoreItemContainer_TargetContainer) == 0x0000D8, "Member 'WBP_Trading_Item_C_Setup::CallFunc_GetStoreItemContainer_TargetContainer' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Setup, CallFunc_IsValid_ReturnValue) == 0x0000E0, "Member 'WBP_Trading_Item_C_Setup::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Setup, CallFunc_AddItemContainer_createdBlock) == 0x0000E8, "Member 'WBP_Trading_Item_C_Setup::CallFunc_AddItemContainer_createdBlock' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.Sort
// 0x0002 (0x0002 - 0x0000)
struct WBP_Trading_Item_C_Sort final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_C_Sort) == 0x000001, "Wrong alignment on WBP_Trading_Item_C_Sort");
static_assert(sizeof(WBP_Trading_Item_C_Sort) == 0x000002, "Wrong size on WBP_Trading_Item_C_Sort");
static_assert(offsetof(WBP_Trading_Item_C_Sort, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_Trading_Item_C_Sort::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Sort, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'WBP_Trading_Item_C_Sort::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.SwitchSellPanel
// 0x0028 (0x0028 - 0x0000)
struct WBP_Trading_Item_C_SwitchSellPanel final
{
public:
	bool                                          ToSellList;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F7B[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F7C[0x1];                                     // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetDesiredFocusTarget_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_C_SwitchSellPanel) == 0x000008, "Wrong alignment on WBP_Trading_Item_C_SwitchSellPanel");
static_assert(sizeof(WBP_Trading_Item_C_SwitchSellPanel) == 0x000028, "Wrong size on WBP_Trading_Item_C_SwitchSellPanel");
static_assert(offsetof(WBP_Trading_Item_C_SwitchSellPanel, ToSellList) == 0x000000, "Member 'WBP_Trading_Item_C_SwitchSellPanel::ToSellList' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchSellPanel, Temp_bool_Variable) == 0x000001, "Member 'WBP_Trading_Item_C_SwitchSellPanel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchSellPanel, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'WBP_Trading_Item_C_SwitchSellPanel::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchSellPanel, Temp_byte_Variable) == 0x000010, "Member 'WBP_Trading_Item_C_SwitchSellPanel::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchSellPanel, Temp_byte_Variable_1) == 0x000011, "Member 'WBP_Trading_Item_C_SwitchSellPanel::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchSellPanel, Temp_bool_Variable_1) == 0x000012, "Member 'WBP_Trading_Item_C_SwitchSellPanel::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchSellPanel, K2Node_Select_Default) == 0x000013, "Member 'WBP_Trading_Item_C_SwitchSellPanel::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchSellPanel, Temp_byte_Variable_2) == 0x000014, "Member 'WBP_Trading_Item_C_SwitchSellPanel::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchSellPanel, Temp_byte_Variable_3) == 0x000015, "Member 'WBP_Trading_Item_C_SwitchSellPanel::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchSellPanel, K2Node_Select_Default_1) == 0x000016, "Member 'WBP_Trading_Item_C_SwitchSellPanel::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchSellPanel, CallFunc_GetDesiredFocusTarget_ReturnValue) == 0x000018, "Member 'WBP_Trading_Item_C_SwitchSellPanel::CallFunc_GetDesiredFocusTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchSellPanel, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x000020, "Member 'WBP_Trading_Item_C_SwitchSellPanel::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.SwitchSlotPanelHoverDisplay
// 0x002C (0x002C - 0x0000)
struct WBP_Trading_Item_C_SwitchSlotPanelHoverDisplay final
{
public:
	bool                                          IsHover;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F7D[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0014(0x0014)()
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_C_SwitchSlotPanelHoverDisplay) == 0x000004, "Wrong alignment on WBP_Trading_Item_C_SwitchSlotPanelHoverDisplay");
static_assert(sizeof(WBP_Trading_Item_C_SwitchSlotPanelHoverDisplay) == 0x00002C, "Wrong size on WBP_Trading_Item_C_SwitchSlotPanelHoverDisplay");
static_assert(offsetof(WBP_Trading_Item_C_SwitchSlotPanelHoverDisplay, IsHover) == 0x000000, "Member 'WBP_Trading_Item_C_SwitchSlotPanelHoverDisplay::IsHover' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchSlotPanelHoverDisplay, Temp_bool_Variable) == 0x000001, "Member 'WBP_Trading_Item_C_SwitchSlotPanelHoverDisplay::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchSlotPanelHoverDisplay, CallFunc_SelectColor_ReturnValue) == 0x000004, "Member 'WBP_Trading_Item_C_SwitchSlotPanelHoverDisplay::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchSlotPanelHoverDisplay, K2Node_MakeStruct_SlateColor) == 0x000014, "Member 'WBP_Trading_Item_C_SwitchSlotPanelHoverDisplay::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchSlotPanelHoverDisplay, Temp_byte_Variable) == 0x000028, "Member 'WBP_Trading_Item_C_SwitchSlotPanelHoverDisplay::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchSlotPanelHoverDisplay, Temp_byte_Variable_1) == 0x000029, "Member 'WBP_Trading_Item_C_SwitchSlotPanelHoverDisplay::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchSlotPanelHoverDisplay, K2Node_Select_Default) == 0x00002A, "Member 'WBP_Trading_Item_C_SwitchSlotPanelHoverDisplay::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.SwitchStoragePanelVisibility
// 0x00D0 (0x00D0 - 0x0000)
struct WBP_Trading_Item_C_SwitchStoragePanelVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F7E[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_2;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_3;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_4;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPalUIActionBindData                   CallFunc_Array_Get_Item;                           // 0x0040(0x0004)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F7F[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x004C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x005C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPalUIActionBindData                   CallFunc_RegisterActionBinding_ReturnValue;        // 0x006C(0x0004)(NoDestructor)
	struct FPalUIActionBindData                   CallFunc_RegisterActionBinding_ReturnValue_1;      // 0x0070(0x0004)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x007C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x008C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPalUIActionBindData                   CallFunc_RegisterActionBinding_ReturnValue_2;      // 0x009C(0x0004)(NoDestructor)
	struct FPalUIActionBindData                   CallFunc_RegisterActionBinding_ReturnValue_3;      // 0x00A0(0x0004)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x00AC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F80[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetDesiredFocusTarget_ReturnValue;        // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FPalUIActionBindData                   CallFunc_RegisterActionBinding_ReturnValue_4;      // 0x00C8(0x0004)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_C_SwitchStoragePanelVisibility) == 0x000008, "Wrong alignment on WBP_Trading_Item_C_SwitchStoragePanelVisibility");
static_assert(sizeof(WBP_Trading_Item_C_SwitchStoragePanelVisibility) == 0x0000D0, "Wrong size on WBP_Trading_Item_C_SwitchStoragePanelVisibility");
static_assert(offsetof(WBP_Trading_Item_C_SwitchStoragePanelVisibility, Visible) == 0x000000, "Member 'WBP_Trading_Item_C_SwitchStoragePanelVisibility::Visible' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchStoragePanelVisibility, Temp_bool_Variable) == 0x000001, "Member 'WBP_Trading_Item_C_SwitchStoragePanelVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchStoragePanelVisibility, Temp_byte_Variable) == 0x000002, "Member 'WBP_Trading_Item_C_SwitchStoragePanelVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchStoragePanelVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_Trading_Item_C_SwitchStoragePanelVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchStoragePanelVisibility, Temp_bool_Variable_1) == 0x000004, "Member 'WBP_Trading_Item_C_SwitchStoragePanelVisibility::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchStoragePanelVisibility, K2Node_Select_Default) == 0x000005, "Member 'WBP_Trading_Item_C_SwitchStoragePanelVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchStoragePanelVisibility, Temp_byte_Variable_2) == 0x000006, "Member 'WBP_Trading_Item_C_SwitchStoragePanelVisibility::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchStoragePanelVisibility, Temp_byte_Variable_3) == 0x000007, "Member 'WBP_Trading_Item_C_SwitchStoragePanelVisibility::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchStoragePanelVisibility, K2Node_Select_Default_1) == 0x000008, "Member 'WBP_Trading_Item_C_SwitchStoragePanelVisibility::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchStoragePanelVisibility, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'WBP_Trading_Item_C_SwitchStoragePanelVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchStoragePanelVisibility, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'WBP_Trading_Item_C_SwitchStoragePanelVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchStoragePanelVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'WBP_Trading_Item_C_SwitchStoragePanelVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchStoragePanelVisibility, CallFunc_MakeLiteralName_ReturnValue) == 0x000018, "Member 'WBP_Trading_Item_C_SwitchStoragePanelVisibility::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchStoragePanelVisibility, CallFunc_MakeLiteralName_ReturnValue_1) == 0x000020, "Member 'WBP_Trading_Item_C_SwitchStoragePanelVisibility::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchStoragePanelVisibility, CallFunc_MakeLiteralName_ReturnValue_2) == 0x000028, "Member 'WBP_Trading_Item_C_SwitchStoragePanelVisibility::CallFunc_MakeLiteralName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchStoragePanelVisibility, CallFunc_MakeLiteralName_ReturnValue_3) == 0x000030, "Member 'WBP_Trading_Item_C_SwitchStoragePanelVisibility::CallFunc_MakeLiteralName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchStoragePanelVisibility, CallFunc_MakeLiteralName_ReturnValue_4) == 0x000038, "Member 'WBP_Trading_Item_C_SwitchStoragePanelVisibility::CallFunc_MakeLiteralName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchStoragePanelVisibility, CallFunc_Array_Get_Item) == 0x000040, "Member 'WBP_Trading_Item_C_SwitchStoragePanelVisibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchStoragePanelVisibility, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'WBP_Trading_Item_C_SwitchStoragePanelVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchStoragePanelVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'WBP_Trading_Item_C_SwitchStoragePanelVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchStoragePanelVisibility, K2Node_CreateDelegate_OutputDelegate) == 0x00004C, "Member 'WBP_Trading_Item_C_SwitchStoragePanelVisibility::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchStoragePanelVisibility, K2Node_CreateDelegate_OutputDelegate_1) == 0x00005C, "Member 'WBP_Trading_Item_C_SwitchStoragePanelVisibility::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchStoragePanelVisibility, CallFunc_RegisterActionBinding_ReturnValue) == 0x00006C, "Member 'WBP_Trading_Item_C_SwitchStoragePanelVisibility::CallFunc_RegisterActionBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchStoragePanelVisibility, CallFunc_RegisterActionBinding_ReturnValue_1) == 0x000070, "Member 'WBP_Trading_Item_C_SwitchStoragePanelVisibility::CallFunc_RegisterActionBinding_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchStoragePanelVisibility, CallFunc_Array_Add_ReturnValue) == 0x000074, "Member 'WBP_Trading_Item_C_SwitchStoragePanelVisibility::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchStoragePanelVisibility, CallFunc_Array_Add_ReturnValue_1) == 0x000078, "Member 'WBP_Trading_Item_C_SwitchStoragePanelVisibility::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchStoragePanelVisibility, K2Node_CreateDelegate_OutputDelegate_2) == 0x00007C, "Member 'WBP_Trading_Item_C_SwitchStoragePanelVisibility::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchStoragePanelVisibility, K2Node_CreateDelegate_OutputDelegate_3) == 0x00008C, "Member 'WBP_Trading_Item_C_SwitchStoragePanelVisibility::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchStoragePanelVisibility, CallFunc_RegisterActionBinding_ReturnValue_2) == 0x00009C, "Member 'WBP_Trading_Item_C_SwitchStoragePanelVisibility::CallFunc_RegisterActionBinding_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchStoragePanelVisibility, CallFunc_RegisterActionBinding_ReturnValue_3) == 0x0000A0, "Member 'WBP_Trading_Item_C_SwitchStoragePanelVisibility::CallFunc_RegisterActionBinding_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchStoragePanelVisibility, CallFunc_Array_Add_ReturnValue_2) == 0x0000A4, "Member 'WBP_Trading_Item_C_SwitchStoragePanelVisibility::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchStoragePanelVisibility, CallFunc_Array_Add_ReturnValue_3) == 0x0000A8, "Member 'WBP_Trading_Item_C_SwitchStoragePanelVisibility::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchStoragePanelVisibility, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000AC, "Member 'WBP_Trading_Item_C_SwitchStoragePanelVisibility::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchStoragePanelVisibility, CallFunc_GetDesiredFocusTarget_ReturnValue) == 0x0000C0, "Member 'WBP_Trading_Item_C_SwitchStoragePanelVisibility::CallFunc_GetDesiredFocusTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchStoragePanelVisibility, CallFunc_RegisterActionBinding_ReturnValue_4) == 0x0000C8, "Member 'WBP_Trading_Item_C_SwitchStoragePanelVisibility::CallFunc_RegisterActionBinding_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_SwitchStoragePanelVisibility, CallFunc_Array_Add_ReturnValue_4) == 0x0000CC, "Member 'WBP_Trading_Item_C_SwitchStoragePanelVisibility::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.Toggle Private Lock
// 0x0001 (0x0001 - 0x0000)
struct WBP_Trading_Item_C_Toggle_Private_Lock final
{
public:
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_C_Toggle_Private_Lock) == 0x000001, "Wrong alignment on WBP_Trading_Item_C_Toggle_Private_Lock");
static_assert(sizeof(WBP_Trading_Item_C_Toggle_Private_Lock) == 0x000001, "Wrong size on WBP_Trading_Item_C_Toggle_Private_Lock");
static_assert(offsetof(WBP_Trading_Item_C_Toggle_Private_Lock, CallFunc_IsVisible_ReturnValue) == 0x000000, "Member 'WBP_Trading_Item_C_Toggle_Private_Lock::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.ToSetSellPanel
// 0x0068 (0x0068 - 0x0000)
struct WBP_Trading_Item_C_ToSetSellPanel final
{
public:
	struct FPalItemBoothTradeInfo                 K2Node_MakeStruct_PalItemBoothTradeInfo;           // 0x0000(0x0068)(NoDestructor)
};
static_assert(alignof(WBP_Trading_Item_C_ToSetSellPanel) == 0x000004, "Wrong alignment on WBP_Trading_Item_C_ToSetSellPanel");
static_assert(sizeof(WBP_Trading_Item_C_ToSetSellPanel) == 0x000068, "Wrong size on WBP_Trading_Item_C_ToSetSellPanel");
static_assert(offsetof(WBP_Trading_Item_C_ToSetSellPanel, K2Node_MakeStruct_PalItemBoothTradeInfo) == 0x000000, "Member 'WBP_Trading_Item_C_ToSetSellPanel::K2Node_MakeStruct_PalItemBoothTradeInfo' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.Update Sell List
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_Trading_Item_C_Update_Sell_List final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F81[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetDesiredFocusTarget_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPalItemContainer*                      CallFunc_GetStoreItemContainer_TargetContainer;    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPalItemBoothTradeInfo>         CallFunc_GetTradeInfos_OutTradeInfo;               // 0x0020(0x0010)(ReferenceParm)
	struct FPalItemBoothTradeInfo                 CallFunc_Array_Get_Item;                           // 0x0030(0x0068)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F82[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Trading_Item_List_C*               CallFunc_Array_Get_Item_1;                         // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_C_Update_Sell_List) == 0x000008, "Wrong alignment on WBP_Trading_Item_C_Update_Sell_List");
static_assert(sizeof(WBP_Trading_Item_C_Update_Sell_List) == 0x0000B0, "Wrong size on WBP_Trading_Item_C_Update_Sell_List");
static_assert(offsetof(WBP_Trading_Item_C_Update_Sell_List, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_Trading_Item_C_Update_Sell_List::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Update_Sell_List, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_Trading_Item_C_Update_Sell_List::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Update_Sell_List, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_Trading_Item_C_Update_Sell_List::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Update_Sell_List, CallFunc_GetDesiredFocusTarget_ReturnValue) == 0x000010, "Member 'WBP_Trading_Item_C_Update_Sell_List::CallFunc_GetDesiredFocusTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Update_Sell_List, CallFunc_GetStoreItemContainer_TargetContainer) == 0x000018, "Member 'WBP_Trading_Item_C_Update_Sell_List::CallFunc_GetStoreItemContainer_TargetContainer' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Update_Sell_List, CallFunc_GetTradeInfos_OutTradeInfo) == 0x000020, "Member 'WBP_Trading_Item_C_Update_Sell_List::CallFunc_GetTradeInfos_OutTradeInfo' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Update_Sell_List, CallFunc_Array_Get_Item) == 0x000030, "Member 'WBP_Trading_Item_C_Update_Sell_List::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Update_Sell_List, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'WBP_Trading_Item_C_Update_Sell_List::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Update_Sell_List, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'WBP_Trading_Item_C_Update_Sell_List::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Update_Sell_List, CallFunc_Array_Get_Item_1) == 0x0000A0, "Member 'WBP_Trading_Item_C_Update_Sell_List::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Update_Sell_List, CallFunc_Array_Length_ReturnValue_1) == 0x0000A8, "Member 'WBP_Trading_Item_C_Update_Sell_List::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_Update_Sell_List, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000AC, "Member 'WBP_Trading_Item_C_Update_Sell_List::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.ValidateCurrentTradeInfo
// 0x0009 (0x0009 - 0x0000)
struct WBP_Trading_Item_C_ValidateCurrentTradeInfo final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0004(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue_1;                    // 0x0005(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_C_ValidateCurrentTradeInfo) == 0x000001, "Wrong alignment on WBP_Trading_Item_C_ValidateCurrentTradeInfo");
static_assert(sizeof(WBP_Trading_Item_C_ValidateCurrentTradeInfo) == 0x000009, "Wrong size on WBP_Trading_Item_C_ValidateCurrentTradeInfo");
static_assert(offsetof(WBP_Trading_Item_C_ValidateCurrentTradeInfo, Temp_bool_Variable) == 0x000000, "Member 'WBP_Trading_Item_C_ValidateCurrentTradeInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ValidateCurrentTradeInfo, Temp_byte_Variable) == 0x000001, "Member 'WBP_Trading_Item_C_ValidateCurrentTradeInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ValidateCurrentTradeInfo, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_Trading_Item_C_ValidateCurrentTradeInfo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ValidateCurrentTradeInfo, K2Node_Select_Default) == 0x000003, "Member 'WBP_Trading_Item_C_ValidateCurrentTradeInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ValidateCurrentTradeInfo, CallFunc_IsEmpty_ReturnValue) == 0x000004, "Member 'WBP_Trading_Item_C_ValidateCurrentTradeInfo::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ValidateCurrentTradeInfo, CallFunc_IsEmpty_ReturnValue_1) == 0x000005, "Member 'WBP_Trading_Item_C_ValidateCurrentTradeInfo::CallFunc_IsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ValidateCurrentTradeInfo, CallFunc_BooleanOR_ReturnValue) == 0x000006, "Member 'WBP_Trading_Item_C_ValidateCurrentTradeInfo::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ValidateCurrentTradeInfo, CallFunc_Not_PreBool_ReturnValue) == 0x000007, "Member 'WBP_Trading_Item_C_ValidateCurrentTradeInfo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_ValidateCurrentTradeInfo, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000008, "Member 'WBP_Trading_Item_C_ValidateCurrentTradeInfo::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function WBP_Trading_Item.WBP_Trading_Item_C.BP_GetDesiredFocusTarget
// 0x0018 (0x0018 - 0x0000)
struct WBP_Trading_Item_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Get_Inventory_Top_Focust_Target_FocusTarget; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_Trading_Item_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_Trading_Item_C_BP_GetDesiredFocusTarget) == 0x000018, "Wrong size on WBP_Trading_Item_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_Trading_Item_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_Trading_Item_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_BP_GetDesiredFocusTarget, CallFunc_Get_Inventory_Top_Focust_Target_FocusTarget) == 0x000008, "Member 'WBP_Trading_Item_C_BP_GetDesiredFocusTarget::CallFunc_Get_Inventory_Top_Focust_Target_FocusTarget' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_BP_GetDesiredFocusTarget, CallFunc_IsVisible_ReturnValue) == 0x000010, "Member 'WBP_Trading_Item_C_BP_GetDesiredFocusTarget::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_C_BP_GetDesiredFocusTarget, CallFunc_IsVisible_ReturnValue_1) == 0x000011, "Member 'WBP_Trading_Item_C_BP_GetDesiredFocusTarget::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");

}

