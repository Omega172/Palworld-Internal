#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Trading_Item_Buy

#include "Basic.hpp"

#include "Pal_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_Trading_Item_Buy.WBP_Trading_Item_Buy_C.BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_Add10_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_Trading_Item_Buy_C_BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_Add10_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature final
{
public:
	int32                                         Progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_Buy_C_BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_Add10_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature) == 0x000004, "Wrong alignment on WBP_Trading_Item_Buy_C_BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_Add10_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature");
static_assert(sizeof(WBP_Trading_Item_Buy_C_BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_Add10_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature) == 0x000004, "Wrong size on WBP_Trading_Item_Buy_C_BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_Add10_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature");
static_assert(offsetof(WBP_Trading_Item_Buy_C_BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_Add10_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature, Progress) == 0x000000, "Member 'WBP_Trading_Item_Buy_C_BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_Add10_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature::Progress' has a wrong offset!");

// Function WBP_Trading_Item_Buy.WBP_Trading_Item_Buy_C.BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_NumArrow_1_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_Trading_Item_Buy_C_BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_NumArrow_1_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature final
{
public:
	int32                                         Progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_Buy_C_BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_NumArrow_1_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature) == 0x000004, "Wrong alignment on WBP_Trading_Item_Buy_C_BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_NumArrow_1_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");
static_assert(sizeof(WBP_Trading_Item_Buy_C_BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_NumArrow_1_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature) == 0x000004, "Wrong size on WBP_Trading_Item_Buy_C_BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_NumArrow_1_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");
static_assert(offsetof(WBP_Trading_Item_Buy_C_BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_NumArrow_1_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature, Progress) == 0x000000, "Member 'WBP_Trading_Item_Buy_C_BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_NumArrow_1_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature::Progress' has a wrong offset!");

// Function WBP_Trading_Item_Buy.WBP_Trading_Item_Buy_C.BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_Slider_K2Node_ComponentBoundEvent_7_OnValueChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_Trading_Item_Buy_C_BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_Slider_K2Node_ComponentBoundEvent_7_OnValueChanged__DelegateSignature final
{
public:
	int32                                         NewCount;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_Buy_C_BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_Slider_K2Node_ComponentBoundEvent_7_OnValueChanged__DelegateSignature) == 0x000004, "Wrong alignment on WBP_Trading_Item_Buy_C_BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_Slider_K2Node_ComponentBoundEvent_7_OnValueChanged__DelegateSignature");
static_assert(sizeof(WBP_Trading_Item_Buy_C_BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_Slider_K2Node_ComponentBoundEvent_7_OnValueChanged__DelegateSignature) == 0x000004, "Wrong size on WBP_Trading_Item_Buy_C_BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_Slider_K2Node_ComponentBoundEvent_7_OnValueChanged__DelegateSignature");
static_assert(offsetof(WBP_Trading_Item_Buy_C_BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_Slider_K2Node_ComponentBoundEvent_7_OnValueChanged__DelegateSignature, NewCount) == 0x000000, "Member 'WBP_Trading_Item_Buy_C_BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_Slider_K2Node_ComponentBoundEvent_7_OnValueChanged__DelegateSignature::NewCount' has a wrong offset!");

// Function WBP_Trading_Item_Buy.WBP_Trading_Item_Buy_C.BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_Sub10_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_Trading_Item_Buy_C_BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_Sub10_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature final
{
public:
	int32                                         Progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_Buy_C_BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_Sub10_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature) == 0x000004, "Wrong alignment on WBP_Trading_Item_Buy_C_BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_Sub10_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature");
static_assert(sizeof(WBP_Trading_Item_Buy_C_BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_Sub10_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature) == 0x000004, "Wrong size on WBP_Trading_Item_Buy_C_BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_Sub10_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature");
static_assert(offsetof(WBP_Trading_Item_Buy_C_BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_Sub10_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature, Progress) == 0x000000, "Member 'WBP_Trading_Item_Buy_C_BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_Sub10_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature::Progress' has a wrong offset!");

// Function WBP_Trading_Item_Buy.WBP_Trading_Item_Buy_C.BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_Sub_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_Trading_Item_Buy_C_BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_Sub_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature final
{
public:
	int32                                         Progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_Buy_C_BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_Sub_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature) == 0x000004, "Wrong alignment on WBP_Trading_Item_Buy_C_BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_Sub_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature");
static_assert(sizeof(WBP_Trading_Item_Buy_C_BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_Sub_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature) == 0x000004, "Wrong size on WBP_Trading_Item_Buy_C_BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_Sub_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature");
static_assert(offsetof(WBP_Trading_Item_Buy_C_BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_Sub_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature, Progress) == 0x000000, "Member 'WBP_Trading_Item_Buy_C_BndEvt__WBP_IngameMenu_WorkSpace_WBP_IngameMenu_WorkSpace_Sub_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature::Progress' has a wrong offset!");

// Function WBP_Trading_Item_Buy.WBP_Trading_Item_Buy_C.CalcMaxTradeGroup
// 0x00C0 (0x00C0 - 0x0000)
struct WBP_Trading_Item_Buy_C_CalcMaxTradeGroup final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6586[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalItemIDManager*                      CallFunc_GetItemIDManager_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalPlayerInventoryData*                CallFunc_GetLocalInventoryData_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPalItemBoothTradeInfo>         CallFunc_GetTradeInfos_OutTradeInfo;               // 0x0018(0x0010)(ReferenceParm)
	struct FPalItemBoothTradeInfo                 CallFunc_Array_Get_Item;                           // 0x0028(0x0068)(NoDestructor)
	class UPalStaticItemDataBase*                 CallFunc_GetStaticItemData_ReturnValue;            // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalStaticItemDataBase*                 CallFunc_GetStaticItemData_ReturnValue_1;          // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasDynamicItemClass_ReturnValue;          // 0x00A2(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasDynamicItemClass_ReturnValue_1;        // 0x00A3(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CountItemNum_ReturnValue;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6587[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTargetItemStock_ReturnValue;           // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue_1;                        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_Buy_C_CalcMaxTradeGroup) == 0x000008, "Wrong alignment on WBP_Trading_Item_Buy_C_CalcMaxTradeGroup");
static_assert(sizeof(WBP_Trading_Item_Buy_C_CalcMaxTradeGroup) == 0x0000C0, "Wrong size on WBP_Trading_Item_Buy_C_CalcMaxTradeGroup");
static_assert(offsetof(WBP_Trading_Item_Buy_C_CalcMaxTradeGroup, Count) == 0x000000, "Member 'WBP_Trading_Item_Buy_C_CalcMaxTradeGroup::Count' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_CalcMaxTradeGroup, CallFunc_GetItemIDManager_ReturnValue) == 0x000008, "Member 'WBP_Trading_Item_Buy_C_CalcMaxTradeGroup::CallFunc_GetItemIDManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_CalcMaxTradeGroup, CallFunc_GetLocalInventoryData_ReturnValue) == 0x000010, "Member 'WBP_Trading_Item_Buy_C_CalcMaxTradeGroup::CallFunc_GetLocalInventoryData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_CalcMaxTradeGroup, CallFunc_GetTradeInfos_OutTradeInfo) == 0x000018, "Member 'WBP_Trading_Item_Buy_C_CalcMaxTradeGroup::CallFunc_GetTradeInfos_OutTradeInfo' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_CalcMaxTradeGroup, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_Trading_Item_Buy_C_CalcMaxTradeGroup::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_CalcMaxTradeGroup, CallFunc_GetStaticItemData_ReturnValue) == 0x000090, "Member 'WBP_Trading_Item_Buy_C_CalcMaxTradeGroup::CallFunc_GetStaticItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_CalcMaxTradeGroup, CallFunc_GetStaticItemData_ReturnValue_1) == 0x000098, "Member 'WBP_Trading_Item_Buy_C_CalcMaxTradeGroup::CallFunc_GetStaticItemData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_CalcMaxTradeGroup, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'WBP_Trading_Item_Buy_C_CalcMaxTradeGroup::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_CalcMaxTradeGroup, CallFunc_IsValid_ReturnValue_1) == 0x0000A1, "Member 'WBP_Trading_Item_Buy_C_CalcMaxTradeGroup::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_CalcMaxTradeGroup, CallFunc_HasDynamicItemClass_ReturnValue) == 0x0000A2, "Member 'WBP_Trading_Item_Buy_C_CalcMaxTradeGroup::CallFunc_HasDynamicItemClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_CalcMaxTradeGroup, CallFunc_HasDynamicItemClass_ReturnValue_1) == 0x0000A3, "Member 'WBP_Trading_Item_Buy_C_CalcMaxTradeGroup::CallFunc_HasDynamicItemClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_CalcMaxTradeGroup, CallFunc_CountItemNum_ReturnValue) == 0x0000A4, "Member 'WBP_Trading_Item_Buy_C_CalcMaxTradeGroup::CallFunc_CountItemNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_CalcMaxTradeGroup, CallFunc_BooleanOR_ReturnValue) == 0x0000A8, "Member 'WBP_Trading_Item_Buy_C_CalcMaxTradeGroup::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_CalcMaxTradeGroup, CallFunc_Divide_IntInt_ReturnValue) == 0x0000AC, "Member 'WBP_Trading_Item_Buy_C_CalcMaxTradeGroup::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_CalcMaxTradeGroup, CallFunc_GetTargetItemStock_ReturnValue) == 0x0000B0, "Member 'WBP_Trading_Item_Buy_C_CalcMaxTradeGroup::CallFunc_GetTargetItemStock_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_CalcMaxTradeGroup, CallFunc_Divide_IntInt_ReturnValue_1) == 0x0000B4, "Member 'WBP_Trading_Item_Buy_C_CalcMaxTradeGroup::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_CalcMaxTradeGroup, CallFunc_Min_ReturnValue) == 0x0000B8, "Member 'WBP_Trading_Item_Buy_C_CalcMaxTradeGroup::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_CalcMaxTradeGroup, CallFunc_Min_ReturnValue_1) == 0x0000BC, "Member 'WBP_Trading_Item_Buy_C_CalcMaxTradeGroup::CallFunc_Min_ReturnValue_1' has a wrong offset!");

// Function WBP_Trading_Item_Buy.WBP_Trading_Item_Buy_C.CheckTradeable
// 0x0008 (0x0008 - 0x0000)
struct WBP_Trading_Item_Buy_C_CheckTradeable final
{
public:
	int32                                         CallFunc_CalcMaxTradeGroup_Count;                  // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_Buy_C_CheckTradeable) == 0x000004, "Wrong alignment on WBP_Trading_Item_Buy_C_CheckTradeable");
static_assert(sizeof(WBP_Trading_Item_Buy_C_CheckTradeable) == 0x000008, "Wrong size on WBP_Trading_Item_Buy_C_CheckTradeable");
static_assert(offsetof(WBP_Trading_Item_Buy_C_CheckTradeable, CallFunc_CalcMaxTradeGroup_Count) == 0x000000, "Member 'WBP_Trading_Item_Buy_C_CheckTradeable::CallFunc_CalcMaxTradeGroup_Count' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_CheckTradeable, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000004, "Member 'WBP_Trading_Item_Buy_C_CheckTradeable::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_CheckTradeable, CallFunc_Greater_IntInt_ReturnValue) == 0x000005, "Member 'WBP_Trading_Item_Buy_C_CheckTradeable::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_CheckTradeable, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'WBP_Trading_Item_Buy_C_CheckTradeable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_CheckTradeable, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000007, "Member 'WBP_Trading_Item_Buy_C_CheckTradeable::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function WBP_Trading_Item_Buy.WBP_Trading_Item_Buy_C.ExecuteUbergraph_WBP_Trading_Item_Buy
// 0x00B8 (0x00B8 - 0x0000)
struct WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 Index)>                  K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_Trading_Item_List_C*>       K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UPalHUDDispatchParameterBase*           CallFunc_GetParam_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalHUDDispatchParameter_MapObject*     K2Node_DynamicCast_AsPal_HUDDispatch_Parameter_Map_Object; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6588[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalMapObjectItemBoothModel*            K2Node_DynamicCast_AsPal_Map_Object_Item_Booth_Model; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6589[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_ComponentBoundEvent_NewCount;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_Progress_3;             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_Progress_2;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_Progress_1;             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_Progress;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcMaxTradeGroup_Count;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_658A[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 Index)>                  K2Node_CreateDelegate_OutputDelegate_1;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 Index)>                  K2Node_CreateDelegate_OutputDelegate_2;            // 0x0098(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_Trading_Item_List_C*               CallFunc_Array_Get_Item;                           // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy) == 0x000008, "Wrong alignment on WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy");
static_assert(sizeof(WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy) == 0x0000B8, "Wrong size on WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy");
static_assert(offsetof(WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy, EntryPoint) == 0x000000, "Member 'WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy, K2Node_MakeArray_Array) == 0x000020, "Member 'WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy, CallFunc_GetParam_ReturnValue) == 0x000030, "Member 'WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy::CallFunc_GetParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy, K2Node_DynamicCast_AsPal_HUDDispatch_Parameter_Map_Object) == 0x000038, "Member 'WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy::K2Node_DynamicCast_AsPal_HUDDispatch_Parameter_Map_Object' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy, K2Node_DynamicCast_AsPal_Map_Object_Item_Booth_Model) == 0x000048, "Member 'WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy::K2Node_DynamicCast_AsPal_Map_Object_Item_Booth_Model' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy, K2Node_ComponentBoundEvent_NewCount) == 0x000054, "Member 'WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy::K2Node_ComponentBoundEvent_NewCount' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy, K2Node_ComponentBoundEvent_Progress_3) == 0x000058, "Member 'WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy::K2Node_ComponentBoundEvent_Progress_3' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy, K2Node_ComponentBoundEvent_Progress_2) == 0x00005C, "Member 'WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy::K2Node_ComponentBoundEvent_Progress_2' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy, K2Node_ComponentBoundEvent_Progress_1) == 0x000060, "Member 'WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy::K2Node_ComponentBoundEvent_Progress_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy, K2Node_ComponentBoundEvent_Progress) == 0x000064, "Member 'WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy::K2Node_ComponentBoundEvent_Progress' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy, CallFunc_CalcMaxTradeGroup_Count) == 0x000068, "Member 'WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy::CallFunc_CalcMaxTradeGroup_Count' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy, CallFunc_Max_ReturnValue) == 0x00006C, "Member 'WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy, CallFunc_Add_IntInt_ReturnValue_1) == 0x000070, "Member 'WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy, CallFunc_Add_IntInt_ReturnValue_2) == 0x000074, "Member 'WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy, CallFunc_Max_ReturnValue_1) == 0x000078, "Member 'WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy, CallFunc_Add_IntInt_ReturnValue_3) == 0x00007C, "Member 'WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy, CallFunc_Add_IntInt_ReturnValue_4) == 0x000080, "Member 'WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000084, "Member 'WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy, K2Node_CreateDelegate_OutputDelegate_1) == 0x000088, "Member 'WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy, K2Node_CreateDelegate_OutputDelegate_2) == 0x000098, "Member 'WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy, CallFunc_Less_IntInt_ReturnValue) == 0x0000B4, "Member 'WBP_Trading_Item_Buy_C_ExecuteUbergraph_WBP_Trading_Item_Buy::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_Trading_Item_Buy.WBP_Trading_Item_Buy_C.On Store Content Updated
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_Trading_Item_Buy_C_On_Store_Content_Updated final
{
public:
	class UPalItemContainer*                      ItemContainer;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_658B[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Trading_Item_List_C*               CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPalItemBoothTradeInfo>         CallFunc_GetTradeInfos_OutTradeInfo;               // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPalItemBoothTradeInfo                 CallFunc_Array_Get_Item_1;                         // 0x0034(0x0068)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_658C[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_658D[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemStackCount_ReturnValue;            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_Buy_C_On_Store_Content_Updated) == 0x000008, "Wrong alignment on WBP_Trading_Item_Buy_C_On_Store_Content_Updated");
static_assert(sizeof(WBP_Trading_Item_Buy_C_On_Store_Content_Updated) == 0x0000B0, "Wrong size on WBP_Trading_Item_Buy_C_On_Store_Content_Updated");
static_assert(offsetof(WBP_Trading_Item_Buy_C_On_Store_Content_Updated, ItemContainer) == 0x000000, "Member 'WBP_Trading_Item_Buy_C_On_Store_Content_Updated::ItemContainer' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_On_Store_Content_Updated, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_Trading_Item_Buy_C_On_Store_Content_Updated::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_On_Store_Content_Updated, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBP_Trading_Item_Buy_C_On_Store_Content_Updated::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_On_Store_Content_Updated, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_Trading_Item_Buy_C_On_Store_Content_Updated::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_On_Store_Content_Updated, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_Trading_Item_Buy_C_On_Store_Content_Updated::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_On_Store_Content_Updated, CallFunc_GetTradeInfos_OutTradeInfo) == 0x000020, "Member 'WBP_Trading_Item_Buy_C_On_Store_Content_Updated::CallFunc_GetTradeInfos_OutTradeInfo' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_On_Store_Content_Updated, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WBP_Trading_Item_Buy_C_On_Store_Content_Updated::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_On_Store_Content_Updated, CallFunc_Array_Get_Item_1) == 0x000034, "Member 'WBP_Trading_Item_Buy_C_On_Store_Content_Updated::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_On_Store_Content_Updated, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'WBP_Trading_Item_Buy_C_On_Store_Content_Updated::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_On_Store_Content_Updated, CallFunc_Array_Length_ReturnValue_1) == 0x0000A0, "Member 'WBP_Trading_Item_Buy_C_On_Store_Content_Updated::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_On_Store_Content_Updated, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A4, "Member 'WBP_Trading_Item_Buy_C_On_Store_Content_Updated::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_On_Store_Content_Updated, CallFunc_GetItemStackCount_ReturnValue) == 0x0000A8, "Member 'WBP_Trading_Item_Buy_C_On_Store_Content_Updated::CallFunc_GetItemStackCount_ReturnValue' has a wrong offset!");

// Function WBP_Trading_Item_Buy.WBP_Trading_Item_Buy_C.OnCancelAction
// 0x0020 (0x0020 - 0x0000)
struct WBP_Trading_Item_Buy_C_OnCancelAction final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_658E[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Trading_Item_List_C*               CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_Buy_C_OnCancelAction) == 0x000008, "Wrong alignment on WBP_Trading_Item_Buy_C_OnCancelAction");
static_assert(sizeof(WBP_Trading_Item_Buy_C_OnCancelAction) == 0x000020, "Wrong size on WBP_Trading_Item_Buy_C_OnCancelAction");
static_assert(offsetof(WBP_Trading_Item_Buy_C_OnCancelAction, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_Trading_Item_Buy_C_OnCancelAction::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_OnCancelAction, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_Trading_Item_Buy_C_OnCancelAction::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_OnCancelAction, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_Trading_Item_Buy_C_OnCancelAction::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_OnCancelAction, CallFunc_IsVisible_ReturnValue) == 0x00000C, "Member 'WBP_Trading_Item_Buy_C_OnCancelAction::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_OnCancelAction, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_Trading_Item_Buy_C_OnCancelAction::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_OnCancelAction, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'WBP_Trading_Item_Buy_C_OnCancelAction::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_OnCancelAction, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_Trading_Item_Buy_C_OnCancelAction::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_Trading_Item_Buy.WBP_Trading_Item_Buy_C.OnTradeComplete
// 0x0028 (0x0028 - 0x0000)
struct WBP_Trading_Item_Buy_C_OnTradeComplete final
{
public:
	class APalPlayerState*                        PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_658F[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Trading_Item_List_C*               CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_Buy_C_OnTradeComplete) == 0x000008, "Wrong alignment on WBP_Trading_Item_Buy_C_OnTradeComplete");
static_assert(sizeof(WBP_Trading_Item_Buy_C_OnTradeComplete) == 0x000028, "Wrong size on WBP_Trading_Item_Buy_C_OnTradeComplete");
static_assert(offsetof(WBP_Trading_Item_Buy_C_OnTradeComplete, PlayerState) == 0x000000, "Member 'WBP_Trading_Item_Buy_C_OnTradeComplete::PlayerState' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_OnTradeComplete, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_Trading_Item_Buy_C_OnTradeComplete::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_OnTradeComplete, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBP_Trading_Item_Buy_C_OnTradeComplete::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_OnTradeComplete, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_Trading_Item_Buy_C_OnTradeComplete::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_OnTradeComplete, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_Trading_Item_Buy_C_OnTradeComplete::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_OnTradeComplete, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_Trading_Item_Buy_C_OnTradeComplete::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_OnTradeComplete, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'WBP_Trading_Item_Buy_C_OnTradeComplete::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_Trading_Item_Buy.WBP_Trading_Item_Buy_C.OnTradeHovered
// 0x0088 (0x0088 - 0x0000)
struct WBP_Trading_Item_Buy_C_OnTradeHovered final
{
public:
	int32                                         TradeIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6590[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPalItemBoothTradeInfo>         CallFunc_GetTradeInfos_OutTradeInfo;               // 0x0008(0x0010)(ReferenceParm)
	class UWBP_Trading_Item_List_C*               CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FPalItemBoothTradeInfo                 CallFunc_Array_Get_Item_1;                         // 0x0020(0x0068)(NoDestructor)
};
static_assert(alignof(WBP_Trading_Item_Buy_C_OnTradeHovered) == 0x000008, "Wrong alignment on WBP_Trading_Item_Buy_C_OnTradeHovered");
static_assert(sizeof(WBP_Trading_Item_Buy_C_OnTradeHovered) == 0x000088, "Wrong size on WBP_Trading_Item_Buy_C_OnTradeHovered");
static_assert(offsetof(WBP_Trading_Item_Buy_C_OnTradeHovered, TradeIndex) == 0x000000, "Member 'WBP_Trading_Item_Buy_C_OnTradeHovered::TradeIndex' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_OnTradeHovered, CallFunc_GetTradeInfos_OutTradeInfo) == 0x000008, "Member 'WBP_Trading_Item_Buy_C_OnTradeHovered::CallFunc_GetTradeInfos_OutTradeInfo' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_OnTradeHovered, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_Trading_Item_Buy_C_OnTradeHovered::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_OnTradeHovered, CallFunc_Array_Get_Item_1) == 0x000020, "Member 'WBP_Trading_Item_Buy_C_OnTradeHovered::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function WBP_Trading_Item_Buy.WBP_Trading_Item_Buy_C.OnTradeSelected
// 0x0038 (0x0038 - 0x0000)
struct WBP_Trading_Item_Buy_C_OnTradeSelected final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6591[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Trading_Item_List_C*               CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6592[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Trading_Item_List_C*               CallFunc_Array_Get_Item_1;                         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_Buy_C_OnTradeSelected) == 0x000008, "Wrong alignment on WBP_Trading_Item_Buy_C_OnTradeSelected");
static_assert(sizeof(WBP_Trading_Item_Buy_C_OnTradeSelected) == 0x000038, "Wrong size on WBP_Trading_Item_Buy_C_OnTradeSelected");
static_assert(offsetof(WBP_Trading_Item_Buy_C_OnTradeSelected, Param_Index) == 0x000000, "Member 'WBP_Trading_Item_Buy_C_OnTradeSelected::Param_Index' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_OnTradeSelected, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_Trading_Item_Buy_C_OnTradeSelected::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_OnTradeSelected, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WBP_Trading_Item_Buy_C_OnTradeSelected::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_OnTradeSelected, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_Trading_Item_Buy_C_OnTradeSelected::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_OnTradeSelected, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'WBP_Trading_Item_Buy_C_OnTradeSelected::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_OnTradeSelected, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_Trading_Item_Buy_C_OnTradeSelected::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_OnTradeSelected, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000020, "Member 'WBP_Trading_Item_Buy_C_OnTradeSelected::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_OnTradeSelected, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'WBP_Trading_Item_Buy_C_OnTradeSelected::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_OnTradeSelected, CallFunc_Array_Get_Item_1) == 0x000028, "Member 'WBP_Trading_Item_Buy_C_OnTradeSelected::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_OnTradeSelected, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'WBP_Trading_Item_Buy_C_OnTradeSelected::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_Trading_Item_Buy.WBP_Trading_Item_Buy_C.OnTradeUnhovered
// 0x0004 (0x0004 - 0x0000)
struct WBP_Trading_Item_Buy_C_OnTradeUnhovered final
{
public:
	int32                                         TradeIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_Buy_C_OnTradeUnhovered) == 0x000004, "Wrong alignment on WBP_Trading_Item_Buy_C_OnTradeUnhovered");
static_assert(sizeof(WBP_Trading_Item_Buy_C_OnTradeUnhovered) == 0x000004, "Wrong size on WBP_Trading_Item_Buy_C_OnTradeUnhovered");
static_assert(offsetof(WBP_Trading_Item_Buy_C_OnTradeUnhovered, TradeIndex) == 0x000000, "Member 'WBP_Trading_Item_Buy_C_OnTradeUnhovered::TradeIndex' has a wrong offset!");

// Function WBP_Trading_Item_Buy.WBP_Trading_Item_Buy_C.SetMax
// 0x0004 (0x0004 - 0x0000)
struct WBP_Trading_Item_Buy_C_SetMax final
{
public:
	int32                                         CallFunc_CalcMaxTradeGroup_Count;                  // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_Buy_C_SetMax) == 0x000004, "Wrong alignment on WBP_Trading_Item_Buy_C_SetMax");
static_assert(sizeof(WBP_Trading_Item_Buy_C_SetMax) == 0x000004, "Wrong size on WBP_Trading_Item_Buy_C_SetMax");
static_assert(offsetof(WBP_Trading_Item_Buy_C_SetMax, CallFunc_CalcMaxTradeGroup_Count) == 0x000000, "Member 'WBP_Trading_Item_Buy_C_SetMax::CallFunc_CalcMaxTradeGroup_Count' has a wrong offset!");

// Function WBP_Trading_Item_Buy.WBP_Trading_Item_Buy_C.Setup
// 0x0058 (0x0058 - 0x0000)
struct WBP_Trading_Item_Buy_C_Setup final
{
public:
	TDelegate<void(class APalPlayerState* PlayerState)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalPlayerState*                        CallFunc_GetLocalPlayerState_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalItemContainer*                      CallFunc_GetStoreItemContainer_TargetContainer;    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPalItemContainer* Container)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6593[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_Buy_C_Setup) == 0x000008, "Wrong alignment on WBP_Trading_Item_Buy_C_Setup");
static_assert(sizeof(WBP_Trading_Item_Buy_C_Setup) == 0x000058, "Wrong size on WBP_Trading_Item_Buy_C_Setup");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Setup, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_Trading_Item_Buy_C_Setup::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Setup, CallFunc_GetLocalPlayerState_ReturnValue) == 0x000010, "Member 'WBP_Trading_Item_Buy_C_Setup::CallFunc_GetLocalPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Setup, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'WBP_Trading_Item_Buy_C_Setup::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Setup, CallFunc_GetStoreItemContainer_TargetContainer) == 0x000028, "Member 'WBP_Trading_Item_Buy_C_Setup::CallFunc_GetStoreItemContainer_TargetContainer' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Setup, K2Node_CreateDelegate_OutputDelegate_2) == 0x000030, "Member 'WBP_Trading_Item_Buy_C_Setup::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Setup, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'WBP_Trading_Item_Buy_C_Setup::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Setup, K2Node_CreateDelegate_OutputDelegate_3) == 0x000044, "Member 'WBP_Trading_Item_Buy_C_Setup::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");

// Function WBP_Trading_Item_Buy.WBP_Trading_Item_Buy_C.Switch Trading Panel
// 0x0240 (0x0240 - 0x0000)
struct WBP_Trading_Item_Buy_C_Switch_Trading_Panel final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6594[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalItemBoothTradeInfo                 TempTradeInfo;                                     // 0x0004(0x0068)(Edit, BlueprintVisible, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6595[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetDesiredFocusTarget_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcMaxTradeGroup_Count;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPalSlateNavigationSetting             K2Node_MakeStruct_PalSlateNavigationSetting;       // 0x008C(0x0005)(NoDestructor)
	uint8                                         Pad_6596[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalUIActionBindData                   CallFunc_Array_Get_Item;                           // 0x0094(0x0004)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6597[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00B0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPalUIActionBindData                   CallFunc_RegisterActionBinding_ReturnValue;        // 0x00C0(0x0004)(NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x00C4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x00D4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPalUIActionBindData                   CallFunc_RegisterActionBinding_ReturnValue_1;      // 0x00E4(0x0004)(NoDestructor)
	struct FPalUIActionBindData                   CallFunc_RegisterActionBinding_ReturnValue_2;      // 0x00E8(0x0004)(NoDestructor)
	struct FPalUIActionBindData                   CallFunc_RegisterActionBinding_ReturnValue_3;      // 0x00EC(0x0004)(NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x00F0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0100(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0110(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x0120(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPalUIActionBindData                   CallFunc_RegisterActionBinding_ReturnValue_4;      // 0x0130(0x0004)(NoDestructor)
	struct FPalUIActionBindData                   CallFunc_RegisterActionBinding_ReturnValue_5;      // 0x0134(0x0004)(NoDestructor)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPalUIActionBindData                   CallFunc_RegisterActionBinding_ReturnValue_6;      // 0x0140(0x0004)(NoDestructor)
	struct FPalUIActionBindData                   CallFunc_RegisterActionBinding_ReturnValue_7;      // 0x0144(0x0004)(NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x0148(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6598[0x3];                                     // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalUIActionBindData                   CallFunc_RegisterActionBinding_ReturnValue_8;      // 0x015C(0x0004)(NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6599[0x2];                                     // 0x0162(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetItemName_outName;                      // 0x0168(0x0018)()
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_8;                  // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalPlayerInventoryData*                CallFunc_GetLocalInventoryData_ReturnValue;        // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CountItemNum_ReturnValue;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_659A[0x4];                                     // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x01B0(0x0018)()
	TArray<struct FPalItemBoothTradeInfo>         CallFunc_GetTradeInfos_OutTradeInfo;               // 0x01C8(0x0010)(ReferenceParm)
	struct FPalItemBoothTradeInfo                 CallFunc_Array_Get_Item_1;                         // 0x01D8(0x0068)(NoDestructor)
};
static_assert(alignof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel) == 0x000008, "Wrong alignment on WBP_Trading_Item_Buy_C_Switch_Trading_Panel");
static_assert(sizeof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel) == 0x000240, "Wrong size on WBP_Trading_Item_Buy_C_Switch_Trading_Panel");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, Visible) == 0x000000, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::Visible' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, TempTradeInfo) == 0x000004, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::TempTradeInfo' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, Temp_int_Array_Index_Variable) == 0x00006C, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, Temp_byte_Variable) == 0x000078, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, CallFunc_GetDesiredFocusTarget_ReturnValue) == 0x000080, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::CallFunc_GetDesiredFocusTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, CallFunc_CalcMaxTradeGroup_Count) == 0x000088, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::CallFunc_CalcMaxTradeGroup_Count' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, K2Node_MakeStruct_PalSlateNavigationSetting) == 0x00008C, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::K2Node_MakeStruct_PalSlateNavigationSetting' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, CallFunc_Array_Get_Item) == 0x000094, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, K2Node_CreateDelegate_OutputDelegate) == 0x0000A0, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000B0, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, CallFunc_RegisterActionBinding_ReturnValue) == 0x0000C0, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::CallFunc_RegisterActionBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000C4, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000D4, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, CallFunc_RegisterActionBinding_ReturnValue_1) == 0x0000E4, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::CallFunc_RegisterActionBinding_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, CallFunc_RegisterActionBinding_ReturnValue_2) == 0x0000E8, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::CallFunc_RegisterActionBinding_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, CallFunc_RegisterActionBinding_ReturnValue_3) == 0x0000EC, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::CallFunc_RegisterActionBinding_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000F0, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, K2Node_CreateDelegate_OutputDelegate_5) == 0x000100, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, K2Node_CreateDelegate_OutputDelegate_6) == 0x000110, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, K2Node_CreateDelegate_OutputDelegate_7) == 0x000120, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, CallFunc_RegisterActionBinding_ReturnValue_4) == 0x000130, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::CallFunc_RegisterActionBinding_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, CallFunc_RegisterActionBinding_ReturnValue_5) == 0x000134, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::CallFunc_RegisterActionBinding_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, CallFunc_MakeLiteralName_ReturnValue) == 0x000138, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, CallFunc_RegisterActionBinding_ReturnValue_6) == 0x000140, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::CallFunc_RegisterActionBinding_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, CallFunc_RegisterActionBinding_ReturnValue_7) == 0x000144, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::CallFunc_RegisterActionBinding_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, K2Node_CreateDelegate_OutputDelegate_8) == 0x000148, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, Temp_byte_Variable_1) == 0x000158, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, CallFunc_RegisterActionBinding_ReturnValue_8) == 0x00015C, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::CallFunc_RegisterActionBinding_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, Temp_bool_Variable) == 0x000160, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, K2Node_Select_Default) == 0x000161, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, CallFunc_Array_Add_ReturnValue) == 0x000164, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, CallFunc_GetItemName_outName) == 0x000168, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::CallFunc_GetItemName_outName' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, CallFunc_Array_Add_ReturnValue_1) == 0x000180, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, CallFunc_Array_Add_ReturnValue_2) == 0x000184, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, CallFunc_Array_Add_ReturnValue_3) == 0x000188, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, CallFunc_Array_Add_ReturnValue_4) == 0x00018C, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, CallFunc_Array_Add_ReturnValue_5) == 0x000190, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, CallFunc_Array_Add_ReturnValue_6) == 0x000194, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, CallFunc_Array_Add_ReturnValue_7) == 0x000198, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, CallFunc_Array_Add_ReturnValue_8) == 0x00019C, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::CallFunc_Array_Add_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, CallFunc_GetLocalInventoryData_ReturnValue) == 0x0001A0, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::CallFunc_GetLocalInventoryData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, CallFunc_CountItemNum_ReturnValue) == 0x0001A8, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::CallFunc_CountItemNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, CallFunc_Conv_IntToText_ReturnValue) == 0x0001B0, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, CallFunc_GetTradeInfos_OutTradeInfo) == 0x0001C8, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::CallFunc_GetTradeInfos_OutTradeInfo' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Switch_Trading_Panel, CallFunc_Array_Get_Item_1) == 0x0001D8, "Member 'WBP_Trading_Item_Buy_C_Switch_Trading_Panel::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function WBP_Trading_Item_Buy.WBP_Trading_Item_Buy_C.Update Select Count
// 0x0098 (0x0098 - 0x0000)
struct WBP_Trading_Item_Buy_C_Update_Select_Count final
{
public:
	TArray<struct FPalItemBoothTradeInfo>         CallFunc_GetTradeInfos_OutTradeInfo;               // 0x0000(0x0010)(ReferenceParm)
	struct FPalItemBoothTradeInfo                 CallFunc_Array_Get_Item;                           // 0x0010(0x0068)(NoDestructor)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0080(0x0018)()
};
static_assert(alignof(WBP_Trading_Item_Buy_C_Update_Select_Count) == 0x000008, "Wrong alignment on WBP_Trading_Item_Buy_C_Update_Select_Count");
static_assert(sizeof(WBP_Trading_Item_Buy_C_Update_Select_Count) == 0x000098, "Wrong size on WBP_Trading_Item_Buy_C_Update_Select_Count");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Update_Select_Count, CallFunc_GetTradeInfos_OutTradeInfo) == 0x000000, "Member 'WBP_Trading_Item_Buy_C_Update_Select_Count::CallFunc_GetTradeInfos_OutTradeInfo' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Update_Select_Count, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_Trading_Item_Buy_C_Update_Select_Count::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Update_Select_Count, CallFunc_Multiply_IntInt_ReturnValue) == 0x000078, "Member 'WBP_Trading_Item_Buy_C_Update_Select_Count::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Update_Select_Count, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x00007C, "Member 'WBP_Trading_Item_Buy_C_Update_Select_Count::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_Update_Select_Count, CallFunc_Conv_IntToText_ReturnValue) == 0x000080, "Member 'WBP_Trading_Item_Buy_C_Update_Select_Count::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_Trading_Item_Buy.WBP_Trading_Item_Buy_C.UpdateSellList
// 0x00B8 (0x00B8 - 0x0000)
struct WBP_Trading_Item_Buy_C_UpdateSellList final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_659B[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_659C[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalItemContainer*                      CallFunc_GetStoreItemContainer_TargetContainer;    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_Trading_Item_List_C*               CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_659D[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPalItemBoothTradeInfo>         CallFunc_GetTradeInfos_OutTradeInfo;               // 0x0030(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_659E[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalItemBoothTradeInfo                 CallFunc_Array_Get_Item_1;                         // 0x0044(0x0068)(NoDestructor)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_659F[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_Buy_C_UpdateSellList) == 0x000008, "Wrong alignment on WBP_Trading_Item_Buy_C_UpdateSellList");
static_assert(sizeof(WBP_Trading_Item_Buy_C_UpdateSellList) == 0x0000B8, "Wrong size on WBP_Trading_Item_Buy_C_UpdateSellList");
static_assert(offsetof(WBP_Trading_Item_Buy_C_UpdateSellList, Temp_byte_Variable) == 0x000000, "Member 'WBP_Trading_Item_Buy_C_UpdateSellList::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_UpdateSellList, Temp_byte_Variable_1) == 0x000001, "Member 'WBP_Trading_Item_Buy_C_UpdateSellList::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_UpdateSellList, Temp_bool_Variable) == 0x000002, "Member 'WBP_Trading_Item_Buy_C_UpdateSellList::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_UpdateSellList, Temp_byte_Variable_2) == 0x000003, "Member 'WBP_Trading_Item_Buy_C_UpdateSellList::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_UpdateSellList, Temp_byte_Variable_3) == 0x000004, "Member 'WBP_Trading_Item_Buy_C_UpdateSellList::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_UpdateSellList, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_Trading_Item_Buy_C_UpdateSellList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_UpdateSellList, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBP_Trading_Item_Buy_C_UpdateSellList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_UpdateSellList, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_Trading_Item_Buy_C_UpdateSellList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_UpdateSellList, CallFunc_GetStoreItemContainer_TargetContainer) == 0x000018, "Member 'WBP_Trading_Item_Buy_C_UpdateSellList::CallFunc_GetStoreItemContainer_TargetContainer' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_UpdateSellList, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_Trading_Item_Buy_C_UpdateSellList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_UpdateSellList, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'WBP_Trading_Item_Buy_C_UpdateSellList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_UpdateSellList, CallFunc_GetTradeInfos_OutTradeInfo) == 0x000030, "Member 'WBP_Trading_Item_Buy_C_UpdateSellList::CallFunc_GetTradeInfos_OutTradeInfo' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_UpdateSellList, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'WBP_Trading_Item_Buy_C_UpdateSellList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_UpdateSellList, CallFunc_Array_Get_Item_1) == 0x000044, "Member 'WBP_Trading_Item_Buy_C_UpdateSellList::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_UpdateSellList, CallFunc_Array_IsEmpty_ReturnValue) == 0x0000AC, "Member 'WBP_Trading_Item_Buy_C_UpdateSellList::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_UpdateSellList, CallFunc_Array_Length_ReturnValue_1) == 0x0000B0, "Member 'WBP_Trading_Item_Buy_C_UpdateSellList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_UpdateSellList, Temp_bool_Variable_1) == 0x0000B4, "Member 'WBP_Trading_Item_Buy_C_UpdateSellList::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_UpdateSellList, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B5, "Member 'WBP_Trading_Item_Buy_C_UpdateSellList::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_UpdateSellList, K2Node_Select_Default) == 0x0000B6, "Member 'WBP_Trading_Item_Buy_C_UpdateSellList::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_UpdateSellList, K2Node_Select_Default_1) == 0x0000B7, "Member 'WBP_Trading_Item_Buy_C_UpdateSellList::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_Trading_Item_Buy.WBP_Trading_Item_Buy_C.BP_GetDesiredFocusTarget
// 0x0010 (0x0010 - 0x0000)
struct WBP_Trading_Item_Buy_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Item_Buy_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_Trading_Item_Buy_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_Trading_Item_Buy_C_BP_GetDesiredFocusTarget) == 0x000010, "Wrong size on WBP_Trading_Item_Buy_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_Trading_Item_Buy_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_Trading_Item_Buy_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Item_Buy_C_BP_GetDesiredFocusTarget, CallFunc_IsVisible_ReturnValue) == 0x000008, "Member 'WBP_Trading_Item_Buy_C_BP_GetDesiredFocusTarget::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

}

