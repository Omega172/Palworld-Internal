#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Ingame_InteractMultiplayModifier

#include "Basic.hpp"

#include "WBP_Ingame_InteractMultiplayModifier_classes.hpp"
#include "WBP_Ingame_InteractMultiplayModifier_parameters.hpp"


namespace SDK
{

// Function WBP_Ingame_InteractMultiplayModifier.WBP_Ingame_InteractMultiplayModifier_C.ExecuteUbergraph_WBP_Ingame_InteractMultiplayModifier
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_Ingame_InteractMultiplayModifier_C::ExecuteUbergraph_WBP_Ingame_InteractMultiplayModifier(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Ingame_InteractMultiplayModifier_C", "ExecuteUbergraph_WBP_Ingame_InteractMultiplayModifier");

	Params::WBP_Ingame_InteractMultiplayModifier_C_ExecuteUbergraph_WBP_Ingame_InteractMultiplayModifier Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_Ingame_InteractMultiplayModifier.WBP_Ingame_InteractMultiplayModifier_C.OnSetup
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UWBP_Ingame_InteractMultiplayModifier_C::OnSetup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Ingame_InteractMultiplayModifier_C", "OnSetup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_Ingame_InteractMultiplayModifier.WBP_Ingame_InteractMultiplayModifier_C.OnUpdateLastModifiedUserName
// (Event, Public, BlueprintEvent)

void UWBP_Ingame_InteractMultiplayModifier_C::OnUpdateLastModifiedUserName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_Ingame_InteractMultiplayModifier_C", "OnUpdateLastModifiedUserName");

	UObject::ProcessEvent(Func, nullptr);
}

}

