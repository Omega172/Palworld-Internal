#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_IngameMenu_Chest_Filter

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_IngameMenu_Chest_Filter.WBP_IngameMenu_Chest_Filter_C.AddContentItem
// 0x0030 (0x0030 - 0x0000)
struct WBP_IngameMenu_Chest_Filter_C_AddContentItem final
{
public:
	class FName                                   FilterId;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   FilterTextId;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_IngameMenu_Chest_FilterContent_C*  ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_IngameMenu_Chest_FilterContent_C*  CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_IngameMenu_Chest_Filter_C_AddContentItem) == 0x000008, "Wrong alignment on WBP_IngameMenu_Chest_Filter_C_AddContentItem");
static_assert(sizeof(WBP_IngameMenu_Chest_Filter_C_AddContentItem) == 0x000030, "Wrong size on WBP_IngameMenu_Chest_Filter_C_AddContentItem");
static_assert(offsetof(WBP_IngameMenu_Chest_Filter_C_AddContentItem, FilterId) == 0x000000, "Member 'WBP_IngameMenu_Chest_Filter_C_AddContentItem::FilterId' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_Filter_C_AddContentItem, FilterTextId) == 0x000008, "Member 'WBP_IngameMenu_Chest_Filter_C_AddContentItem::FilterTextId' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_Filter_C_AddContentItem, ReturnValue) == 0x000010, "Member 'WBP_IngameMenu_Chest_Filter_C_AddContentItem::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_Filter_C_AddContentItem, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'WBP_IngameMenu_Chest_Filter_C_AddContentItem::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_Filter_C_AddContentItem, CallFunc_Create_ReturnValue) == 0x000020, "Member 'WBP_IngameMenu_Chest_Filter_C_AddContentItem::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_Filter_C_AddContentItem, CallFunc_AddChild_ReturnValue) == 0x000028, "Member 'WBP_IngameMenu_Chest_Filter_C_AddContentItem::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function WBP_IngameMenu_Chest_Filter.WBP_IngameMenu_Chest_Filter_C.ExecuteUbergraph_WBP_IngameMenu_Chest_Filter
// 0x0004 (0x0004 - 0x0000)
struct WBP_IngameMenu_Chest_Filter_C_ExecuteUbergraph_WBP_IngameMenu_Chest_Filter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_IngameMenu_Chest_Filter_C_ExecuteUbergraph_WBP_IngameMenu_Chest_Filter) == 0x000004, "Wrong alignment on WBP_IngameMenu_Chest_Filter_C_ExecuteUbergraph_WBP_IngameMenu_Chest_Filter");
static_assert(sizeof(WBP_IngameMenu_Chest_Filter_C_ExecuteUbergraph_WBP_IngameMenu_Chest_Filter) == 0x000004, "Wrong size on WBP_IngameMenu_Chest_Filter_C_ExecuteUbergraph_WBP_IngameMenu_Chest_Filter");
static_assert(offsetof(WBP_IngameMenu_Chest_Filter_C_ExecuteUbergraph_WBP_IngameMenu_Chest_Filter, EntryPoint) == 0x000000, "Member 'WBP_IngameMenu_Chest_Filter_C_ExecuteUbergraph_WBP_IngameMenu_Chest_Filter::EntryPoint' has a wrong offset!");

// Function WBP_IngameMenu_Chest_Filter.WBP_IngameMenu_Chest_Filter_C.GetDesiredFocusTarget
// 0x0020 (0x0020 - 0x0000)
struct WBP_IngameMenu_Chest_Filter_C_GetDesiredFocusTarget final
{
public:
	class UWidget*                                NewParam;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_IngameMenu_Chest_FilterContent_C*  K2Node_DynamicCast_AsWBP_Ingame_Menu_Chest_Filter_Content; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_IngameMenu_Chest_Filter_C_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_IngameMenu_Chest_Filter_C_GetDesiredFocusTarget");
static_assert(sizeof(WBP_IngameMenu_Chest_Filter_C_GetDesiredFocusTarget) == 0x000020, "Wrong size on WBP_IngameMenu_Chest_Filter_C_GetDesiredFocusTarget");
static_assert(offsetof(WBP_IngameMenu_Chest_Filter_C_GetDesiredFocusTarget, NewParam) == 0x000000, "Member 'WBP_IngameMenu_Chest_Filter_C_GetDesiredFocusTarget::NewParam' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_Filter_C_GetDesiredFocusTarget, CallFunc_GetChildAt_ReturnValue) == 0x000008, "Member 'WBP_IngameMenu_Chest_Filter_C_GetDesiredFocusTarget::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_Filter_C_GetDesiredFocusTarget, K2Node_DynamicCast_AsWBP_Ingame_Menu_Chest_Filter_Content) == 0x000010, "Member 'WBP_IngameMenu_Chest_Filter_C_GetDesiredFocusTarget::K2Node_DynamicCast_AsWBP_Ingame_Menu_Chest_Filter_Content' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_Filter_C_GetDesiredFocusTarget, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_IngameMenu_Chest_Filter_C_GetDesiredFocusTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_IngameMenu_Chest_Filter.WBP_IngameMenu_Chest_Filter_C.SetAllChecker
// 0x0048 (0x0048 - 0x0000)
struct WBP_IngameMenu_Chest_Filter_C_SetAllChecker final
{
public:
	bool                                          Checked;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECheckBoxState                                Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECheckBoxState                                Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECheckBoxState                                K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_156E[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_156F[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_IngameMenu_Chest_FilterContent_C*  K2Node_DynamicCast_AsWBP_Ingame_Menu_Chest_Filter_Content; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1570[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_IngameMenu_Chest_Filter_C_SetAllChecker) == 0x000008, "Wrong alignment on WBP_IngameMenu_Chest_Filter_C_SetAllChecker");
static_assert(sizeof(WBP_IngameMenu_Chest_Filter_C_SetAllChecker) == 0x000048, "Wrong size on WBP_IngameMenu_Chest_Filter_C_SetAllChecker");
static_assert(offsetof(WBP_IngameMenu_Chest_Filter_C_SetAllChecker, Checked) == 0x000000, "Member 'WBP_IngameMenu_Chest_Filter_C_SetAllChecker::Checked' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_Filter_C_SetAllChecker, Temp_bool_Variable) == 0x000001, "Member 'WBP_IngameMenu_Chest_Filter_C_SetAllChecker::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_Filter_C_SetAllChecker, Temp_byte_Variable) == 0x000002, "Member 'WBP_IngameMenu_Chest_Filter_C_SetAllChecker::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_Filter_C_SetAllChecker, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_IngameMenu_Chest_Filter_C_SetAllChecker::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_Filter_C_SetAllChecker, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_IngameMenu_Chest_Filter_C_SetAllChecker::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_Filter_C_SetAllChecker, K2Node_Select_Default) == 0x000008, "Member 'WBP_IngameMenu_Chest_Filter_C_SetAllChecker::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_Filter_C_SetAllChecker, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBP_IngameMenu_Chest_Filter_C_SetAllChecker::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_Filter_C_SetAllChecker, CallFunc_GetAllChildren_ReturnValue) == 0x000010, "Member 'WBP_IngameMenu_Chest_Filter_C_SetAllChecker::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_Filter_C_SetAllChecker, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WBP_IngameMenu_Chest_Filter_C_SetAllChecker::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_Filter_C_SetAllChecker, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_IngameMenu_Chest_Filter_C_SetAllChecker::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_Filter_C_SetAllChecker, K2Node_DynamicCast_AsWBP_Ingame_Menu_Chest_Filter_Content) == 0x000030, "Member 'WBP_IngameMenu_Chest_Filter_C_SetAllChecker::K2Node_DynamicCast_AsWBP_Ingame_Menu_Chest_Filter_Content' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_Filter_C_SetAllChecker, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_IngameMenu_Chest_Filter_C_SetAllChecker::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_Filter_C_SetAllChecker, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'WBP_IngameMenu_Chest_Filter_C_SetAllChecker::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_Filter_C_SetAllChecker, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'WBP_IngameMenu_Chest_Filter_C_SetAllChecker::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_IngameMenu_Chest_Filter.WBP_IngameMenu_Chest_Filter_C.SetupAsItemFilter
// 0x0018 (0x0018 - 0x0000)
struct WBP_IngameMenu_Chest_Filter_C_SetupAsItemFilter final
{
public:
	class FText                                   CallFunc_GetLocalizedText_ReturnValue;             // 0x0000(0x0018)()
};
static_assert(alignof(WBP_IngameMenu_Chest_Filter_C_SetupAsItemFilter) == 0x000008, "Wrong alignment on WBP_IngameMenu_Chest_Filter_C_SetupAsItemFilter");
static_assert(sizeof(WBP_IngameMenu_Chest_Filter_C_SetupAsItemFilter) == 0x000018, "Wrong size on WBP_IngameMenu_Chest_Filter_C_SetupAsItemFilter");
static_assert(offsetof(WBP_IngameMenu_Chest_Filter_C_SetupAsItemFilter, CallFunc_GetLocalizedText_ReturnValue) == 0x000000, "Member 'WBP_IngameMenu_Chest_Filter_C_SetupAsItemFilter::CallFunc_GetLocalizedText_ReturnValue' has a wrong offset!");

}

