#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPCEmoteDetectionComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Pal_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_NPCEmoteDetectionComponent.BP_NPCEmoteDetectionComponent_C
// 0x0020 (0x0108 - 0x00E8)
class UBP_NPCEmoteDetectionComponent_C final : public UPalNPCEmoteDetectionComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UClass*                                 TargetEmoteClass;                                  // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ActStopTimer;                                      // 0x00F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class APalPlayerCharacter*                    DetectedLocalPlayer;                               // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ActEmote(class UClass* Param_Class, class AActor* ActionTarget);
	void CanEmote(bool* bCanEmote);
	void CreateDetector();
	void ExecuteUbergraph_BP_NPCEmoteDetectionComponent(int32 EntryPoint);
	void OnActionBegin(const class UPalActionBase* Action);
	void OnLoaded_FB93EA3046670DE08CA4E3A6593D68F2(TSubclassOf<class UObject> Loaded);
	void OnPlayerOverlapEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnPlayerOverlapStart(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void StopEmoteAction();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_NPCEmoteDetectionComponent_C">();
	}
	static class UBP_NPCEmoteDetectionComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_NPCEmoteDetectionComponent_C>();
	}
};
static_assert(alignof(UBP_NPCEmoteDetectionComponent_C) == 0x000008, "Wrong alignment on UBP_NPCEmoteDetectionComponent_C");
static_assert(sizeof(UBP_NPCEmoteDetectionComponent_C) == 0x000108, "Wrong size on UBP_NPCEmoteDetectionComponent_C");
static_assert(offsetof(UBP_NPCEmoteDetectionComponent_C, UberGraphFrame) == 0x0000E8, "Member 'UBP_NPCEmoteDetectionComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_NPCEmoteDetectionComponent_C, TargetEmoteClass) == 0x0000F0, "Member 'UBP_NPCEmoteDetectionComponent_C::TargetEmoteClass' has a wrong offset!");
static_assert(offsetof(UBP_NPCEmoteDetectionComponent_C, ActStopTimer) == 0x0000F8, "Member 'UBP_NPCEmoteDetectionComponent_C::ActStopTimer' has a wrong offset!");
static_assert(offsetof(UBP_NPCEmoteDetectionComponent_C, DetectedLocalPlayer) == 0x000100, "Member 'UBP_NPCEmoteDetectionComponent_C::DetectedLocalPlayer' has a wrong offset!");

}

