#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CombatHeli

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"
#include "Pal_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CombatHeli.BP_CombatHeli_C
// 0x0070 (0x0A60 - 0x09F0)
class ABP_CombatHeli_C final : public APalNPC
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x09F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPointLightComponent*                   PointLight;                                        // 0x09F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPalBodyPartsCapsuleComponent*          PalBodyPartsCapsule3;                              // 0x0A00(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPalBodyPartsBoxComponent*              PalBodyPartsBox3;                                  // 0x0A08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPalBodyPartsBoxComponent*              PalBodyPartsBox2;                                  // 0x0A10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPalBodyPartsBoxComponent*              PalBodyPartsBox1;                                  // 0x0A18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPalBodyPartsCapsuleComponent*          PalBodyPartsCapsule2;                              // 0x0A20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CombatHeli_HeliBody;                               // 0x0A28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CombatHeli_Gun;                                    // 0x0A30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPalBodyPartsBoxComponent*              PalBodyPartsBox;                                   // 0x0A38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_CombatHeliRpidWeaponComponent_Bomber_C* BP_CombatHeliRpidWeaponComponent_Bomber;           // 0x0A40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_CombatHeliRpidWeaponComponent_WingMiso_C* BP_CombatHeliRpidWeaponComponent_WingMiso;         // 0x0A48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_CombatHeliRpidWeaponComponent_FrontMG_C* BP_CombatHeliRpidWeaponComponent_FrontMG;          // 0x0A50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 TargetActor;                                       // 0x0A58(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void CalcHeightControl(double TargetHeight, double* Result);
	void ExecuteUbergraph_BP_CombatHeli(int32 EntryPoint);
	void OnHPGaugeCollisionOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnHPGaugeCollisionOverlapEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void ReceiveBeginPlay();
	void SetHideAll();
	void ShootMGBullet();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CombatHeli_C">();
	}
	static class ABP_CombatHeli_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CombatHeli_C>();
	}
};
static_assert(alignof(ABP_CombatHeli_C) == 0x000010, "Wrong alignment on ABP_CombatHeli_C");
static_assert(sizeof(ABP_CombatHeli_C) == 0x000A60, "Wrong size on ABP_CombatHeli_C");
static_assert(offsetof(ABP_CombatHeli_C, UberGraphFrame) == 0x0009F0, "Member 'ABP_CombatHeli_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CombatHeli_C, PointLight) == 0x0009F8, "Member 'ABP_CombatHeli_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_CombatHeli_C, PalBodyPartsCapsule3) == 0x000A00, "Member 'ABP_CombatHeli_C::PalBodyPartsCapsule3' has a wrong offset!");
static_assert(offsetof(ABP_CombatHeli_C, PalBodyPartsBox3) == 0x000A08, "Member 'ABP_CombatHeli_C::PalBodyPartsBox3' has a wrong offset!");
static_assert(offsetof(ABP_CombatHeli_C, PalBodyPartsBox2) == 0x000A10, "Member 'ABP_CombatHeli_C::PalBodyPartsBox2' has a wrong offset!");
static_assert(offsetof(ABP_CombatHeli_C, PalBodyPartsBox1) == 0x000A18, "Member 'ABP_CombatHeli_C::PalBodyPartsBox1' has a wrong offset!");
static_assert(offsetof(ABP_CombatHeli_C, PalBodyPartsCapsule2) == 0x000A20, "Member 'ABP_CombatHeli_C::PalBodyPartsCapsule2' has a wrong offset!");
static_assert(offsetof(ABP_CombatHeli_C, CombatHeli_HeliBody) == 0x000A28, "Member 'ABP_CombatHeli_C::CombatHeli_HeliBody' has a wrong offset!");
static_assert(offsetof(ABP_CombatHeli_C, CombatHeli_Gun) == 0x000A30, "Member 'ABP_CombatHeli_C::CombatHeli_Gun' has a wrong offset!");
static_assert(offsetof(ABP_CombatHeli_C, PalBodyPartsBox) == 0x000A38, "Member 'ABP_CombatHeli_C::PalBodyPartsBox' has a wrong offset!");
static_assert(offsetof(ABP_CombatHeli_C, BP_CombatHeliRpidWeaponComponent_Bomber) == 0x000A40, "Member 'ABP_CombatHeli_C::BP_CombatHeliRpidWeaponComponent_Bomber' has a wrong offset!");
static_assert(offsetof(ABP_CombatHeli_C, BP_CombatHeliRpidWeaponComponent_WingMiso) == 0x000A48, "Member 'ABP_CombatHeli_C::BP_CombatHeliRpidWeaponComponent_WingMiso' has a wrong offset!");
static_assert(offsetof(ABP_CombatHeli_C, BP_CombatHeliRpidWeaponComponent_FrontMG) == 0x000A50, "Member 'ABP_CombatHeli_C::BP_CombatHeliRpidWeaponComponent_FrontMG' has a wrong offset!");
static_assert(offsetof(ABP_CombatHeli_C, TargetActor) == 0x000A58, "Member 'ABP_CombatHeli_C::TargetActor' has a wrong offset!");

}

