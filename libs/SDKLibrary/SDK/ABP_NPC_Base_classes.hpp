#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_NPC_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ABP_NPC_Base_structs.hpp"
#include "Pal_structs.hpp"
#include "Pal_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_NPC_Base.ABP_NPC_Base_C
// 0x2B80 (0x31A0 - 0x0620)
class UABP_NPC_Base_C : public UPalAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0620(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_NPC_Base::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0628(0x001C)(HasGetValueTypeHash)
	uint8                                         Pad_4FAD[0x4];                                     // 0x0644(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0648(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0650(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root_3;                              // 0x0658(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_2;                   // 0x0678(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_6;                    // 0x0740(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_11;                    // 0x0848(0x0028)()
	struct FAnimNode_Fabrik                       AnimGraphNode_Fabrik;                              // 0x0870(0x01F0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x0A60(0x0020)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_8;                   // 0x0A80(0x0048)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x0AC8(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_10;                    // 0x0AE8(0x0028)()
	struct FAnimNode_Root                         AnimGraphNode_Root_2;                              // 0x0B10(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x0B30(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_5;                    // 0x0BF8(0x0108)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_2;                  // 0x0D00(0x00E0)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x0DE0(0x00E0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_4;                    // 0x0EC0(0x0108)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0x0FC8(0x0108)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_7;                   // 0x10D0(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_6;                   // 0x1118(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_9;                     // 0x1160(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_8;                     // 0x1188(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x11B0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x11F8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x1240(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x1288(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_5;                   // 0x12D0(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x1318(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x1340(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_4;                   // 0x1368(0x0048)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x13B0(0x00C8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x1478(0x0020)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x1498(0x0108)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x15A0(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x15E8(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_3;                              // 0x1610(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x1658(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x16A0(0x00E0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x1780(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x17A8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x17D0(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x17F8(0x0108)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x1900(0x0048)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x1948(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x1968(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x1A90(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x1BB8(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x1CE0(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x1D00(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1D28(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x1E30(0x0028)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x1E58(0x0020)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_2;                   // 0x1E78(0x00C8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x1F40(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x1F68(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x1F90(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x1FB8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x1FE0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x2008(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x2030(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x2058(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x2080(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x20C8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x20E8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x2130(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x2150(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x2198(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x21B8(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x2280(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x22A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x22C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x22F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x2318(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x2340(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x2368(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x2390(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x23D8(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x2420(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x2490(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x24B0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x24F8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x2518(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x2560(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x25A8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x25F0(0x0020)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x2610(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x2658(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x26C8(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x2738(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x2758(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x27A0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x27C0(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x2888(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x28A8(0x00C8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x2970(0x0048)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_1;                   // 0x29B8(0x00C8)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer;                     // 0x2A80(0x00C8)()
	bool                                          K2Node_PropertyAccess_11;                          // 0x2B48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_10;                          // 0x2B49(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FAE[0x6];                                     // 0x2B4A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_PropertyAccess_9;                           // 0x2B50(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_PropertyAccess_8;                           // 0x2B68(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_PropertyAccess_7;                           // 0x2B80(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWeaponAnimationInfo                   K2Node_PropertyAccess_6;                           // 0x2B98(0x0260)()
	uint8                                         Pad_4FAF[0x8];                                     // 0x2DF8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_PropertyAccess_5;                           // 0x2E00(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_4;                           // 0x2E60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_3;                           // 0x2E61(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_2;                           // 0x2E62(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_1;                           // 0x2E63(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FB0[0x4];                                     // 0x2E64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_PropertyAccess;                             // 0x2E68(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWeaponAnimationInfo                   WeaponInfo;                                        // 0x2E80(0x0260)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector2D                              VelocityXY;                                        // 0x30E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x30F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAim;                                             // 0x30F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsReloading;                                       // 0x30F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCrouch;                                          // 0x30FA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FB1[0x5];                                     // 0x30FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               AimRotatorForSpine;                                // 0x3100(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsEndJump;                                         // 0x3118(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValidSprintAnimation;                            // 0x3119(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSprint;                                          // 0x311A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FB2[0x5];                                     // 0x311B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LeftHandTransform;                                 // 0x3120(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAttachLeftHand;                                  // 0x3180(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4FB3[0x7];                                     // 0x3181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalShooterComponent*                   TSCache_ShooterComponent;                          // 0x3188(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          TSCache_OwnerPalCharacter;                         // 0x3190(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void BlueprintBeginPlay();
	void BlueprintThreadSafeUpdateAnimation(float DeltaTime);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_BlendListByBool_E2DE616E480579F7354F33B1777A4358();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_BlendListByBool_F4C92C35456A21C307270A83D6D219A6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_BlendListByBool_F63282324F16651B07F04EA37B13D648();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_BlendListByBool_FA0E6E324CA7134F3022AA94B20262ED();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_BlendSpacePlayer_ECEA17A54981985346E400AE295C30FF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_SequencePlayer_0D482E0C4B2E4E7CD091E386E53618A7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_SequencePlayer_103905184AD9AADFC2AC7783DC8F943D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_SequencePlayer_3AE6580A4F970316C15CF69E11CE9615();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_SequencePlayer_40C8EDE3400634534A504B80F766E208();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_SequencePlayer_8536992D4A36125389B06C90F08A99B2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_SequencePlayer_A843A5B240417E340E569DA258225C81();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_SequencePlayer_BBD8BB9A4AAC9FE30FB9758FBD35CF09();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_TransitionResult_1D93E8984AE04BDD9AC072AC8F1B4CC6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_TransitionResult_41047BF041CF74296033DFA993D3480E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_TransitionResult_98F8247B476FFB0446F91DB7328341FA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_TransitionResult_A9D4C35A4750D9C872FF0F8E72859E1D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_TransitionResult_B09EDEC94382438CC2EA92A0E18A09D7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_TransitionResult_CEEA545B4239D429BD47C58F9B3A00B1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_TransitionResult_F009816844CF3DF7CEFF7DAA17E020BA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_TransitionResult_FB87F47D45ADB262044FA6BC9B050E13();
	void ExecuteUbergraph_ABP_NPC_Base(int32 EntryPoint);
	void LeftHandIK(const struct FPoseLink& InPose_LeftHand, struct FPoseLink* Param_LeftHandIK);
	void NPC_HairClothLayer(const struct FPoseLink& InPose, struct FPoseLink* Param_NPC_HairClothLayer);
	void ShooterComponentUpdate(class UPalShooterComponent* ShooterComponent);
	void WeaponUpper(const struct FPoseLink& InPose, struct FPoseLink* Param_WeaponUpper);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_NPC_Base_C">();
	}
	static class UABP_NPC_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_NPC_Base_C>();
	}
};
static_assert(alignof(UABP_NPC_Base_C) == 0x000010, "Wrong alignment on UABP_NPC_Base_C");
static_assert(sizeof(UABP_NPC_Base_C) == 0x0031A0, "Wrong size on UABP_NPC_Base_C");
static_assert(offsetof(UABP_NPC_Base_C, UberGraphFrame) == 0x000620, "Member 'UABP_NPC_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, __AnimBlueprintMutables) == 0x000628, "Member 'UABP_NPC_Base_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimBlueprintExtension_PropertyAccess) == 0x000648, "Member 'UABP_NPC_Base_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimBlueprintExtension_Base) == 0x000650, "Member 'UABP_NPC_Base_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_Root_3) == 0x000658, "Member 'UABP_NPC_Base_C::AnimGraphNode_Root_3' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_LinkedInputPose_2) == 0x000678, "Member 'UABP_NPC_Base_C::AnimGraphNode_LinkedInputPose_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SaveCachedPose_6) == 0x000740, "Member 'UABP_NPC_Base_C::AnimGraphNode_SaveCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_UseCachedPose_11) == 0x000848, "Member 'UABP_NPC_Base_C::AnimGraphNode_UseCachedPose_11' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_Fabrik) == 0x000870, "Member 'UABP_NPC_Base_C::AnimGraphNode_Fabrik' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_LocalToComponentSpace_1) == 0x000A60, "Member 'UABP_NPC_Base_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_BlendListByBool_8) == 0x000A80, "Member 'UABP_NPC_Base_C::AnimGraphNode_BlendListByBool_8' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x000AC8, "Member 'UABP_NPC_Base_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_UseCachedPose_10) == 0x000AE8, "Member 'UABP_NPC_Base_C::AnimGraphNode_UseCachedPose_10' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_Root_2) == 0x000B10, "Member 'UABP_NPC_Base_C::AnimGraphNode_Root_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_LinkedInputPose_1) == 0x000B30, "Member 'UABP_NPC_Base_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SaveCachedPose_5) == 0x000BF8, "Member 'UABP_NPC_Base_C::AnimGraphNode_SaveCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_LayeredBoneBlend_2) == 0x000D00, "Member 'UABP_NPC_Base_C::AnimGraphNode_LayeredBoneBlend_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_LayeredBoneBlend_1) == 0x000DE0, "Member 'UABP_NPC_Base_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SaveCachedPose_4) == 0x000EC0, "Member 'UABP_NPC_Base_C::AnimGraphNode_SaveCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SaveCachedPose_3) == 0x000FC8, "Member 'UABP_NPC_Base_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_BlendListByBool_7) == 0x0010D0, "Member 'UABP_NPC_Base_C::AnimGraphNode_BlendListByBool_7' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_BlendListByBool_6) == 0x001118, "Member 'UABP_NPC_Base_C::AnimGraphNode_BlendListByBool_6' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_UseCachedPose_9) == 0x001160, "Member 'UABP_NPC_Base_C::AnimGraphNode_UseCachedPose_9' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_UseCachedPose_8) == 0x001188, "Member 'UABP_NPC_Base_C::AnimGraphNode_UseCachedPose_8' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SequencePlayer_11) == 0x0011B0, "Member 'UABP_NPC_Base_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SequencePlayer_10) == 0x0011F8, "Member 'UABP_NPC_Base_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SequencePlayer_9) == 0x001240, "Member 'UABP_NPC_Base_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SequencePlayer_8) == 0x001288, "Member 'UABP_NPC_Base_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_BlendListByBool_5) == 0x0012D0, "Member 'UABP_NPC_Base_C::AnimGraphNode_BlendListByBool_5' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_UseCachedPose_7) == 0x001318, "Member 'UABP_NPC_Base_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_UseCachedPose_6) == 0x001340, "Member 'UABP_NPC_Base_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_BlendListByBool_4) == 0x001368, "Member 'UABP_NPC_Base_C::AnimGraphNode_BlendListByBool_4' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_LinkedInputPose) == 0x0013B0, "Member 'UABP_NPC_Base_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_Root_1) == 0x001478, "Member 'UABP_NPC_Base_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SaveCachedPose_2) == 0x001498, "Member 'UABP_NPC_Base_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_BlendListByBool_3) == 0x0015A0, "Member 'UABP_NPC_Base_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_UseCachedPose_5) == 0x0015E8, "Member 'UABP_NPC_Base_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_Slot_3) == 0x001610, "Member 'UABP_NPC_Base_C::AnimGraphNode_Slot_3' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_Slot_2) == 0x001658, "Member 'UABP_NPC_Base_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_LayeredBoneBlend) == 0x0016A0, "Member 'UABP_NPC_Base_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_UseCachedPose_4) == 0x001780, "Member 'UABP_NPC_Base_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_UseCachedPose_3) == 0x0017A8, "Member 'UABP_NPC_Base_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_UseCachedPose_2) == 0x0017D0, "Member 'UABP_NPC_Base_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SaveCachedPose_1) == 0x0017F8, "Member 'UABP_NPC_Base_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_Slot_1) == 0x001900, "Member 'UABP_NPC_Base_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_LocalToComponentSpace) == 0x001948, "Member 'UABP_NPC_Base_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_ModifyBone_2) == 0x001968, "Member 'UABP_NPC_Base_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_ModifyBone_1) == 0x001A90, "Member 'UABP_NPC_Base_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_ModifyBone) == 0x001BB8, "Member 'UABP_NPC_Base_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_ComponentToLocalSpace) == 0x001CE0, "Member 'UABP_NPC_Base_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_UseCachedPose_1) == 0x001D00, "Member 'UABP_NPC_Base_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SaveCachedPose) == 0x001D28, "Member 'UABP_NPC_Base_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_UseCachedPose) == 0x001E30, "Member 'UABP_NPC_Base_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_Root) == 0x001E58, "Member 'UABP_NPC_Base_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_LinkedAnimLayer_2) == 0x001E78, "Member 'UABP_NPC_Base_C::AnimGraphNode_LinkedAnimLayer_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_TransitionResult_13) == 0x001F40, "Member 'UABP_NPC_Base_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_TransitionResult_12) == 0x001F68, "Member 'UABP_NPC_Base_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_TransitionResult_11) == 0x001F90, "Member 'UABP_NPC_Base_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_TransitionResult_10) == 0x001FB8, "Member 'UABP_NPC_Base_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_TransitionResult_9) == 0x001FE0, "Member 'UABP_NPC_Base_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_TransitionResult_8) == 0x002008, "Member 'UABP_NPC_Base_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_TransitionResult_7) == 0x002030, "Member 'UABP_NPC_Base_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_TransitionResult_6) == 0x002058, "Member 'UABP_NPC_Base_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SequencePlayer_7) == 0x002080, "Member 'UABP_NPC_Base_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_StateResult_9) == 0x0020C8, "Member 'UABP_NPC_Base_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SequencePlayer_6) == 0x0020E8, "Member 'UABP_NPC_Base_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_StateResult_8) == 0x002130, "Member 'UABP_NPC_Base_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SequencePlayer_5) == 0x002150, "Member 'UABP_NPC_Base_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_StateResult_7) == 0x002198, "Member 'UABP_NPC_Base_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_StateMachine_2) == 0x0021B8, "Member 'UABP_NPC_Base_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_StateResult_6) == 0x002280, "Member 'UABP_NPC_Base_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_TransitionResult_5) == 0x0022A0, "Member 'UABP_NPC_Base_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_TransitionResult_4) == 0x0022C8, "Member 'UABP_NPC_Base_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_TransitionResult_3) == 0x0022F0, "Member 'UABP_NPC_Base_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_TransitionResult_2) == 0x002318, "Member 'UABP_NPC_Base_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_TransitionResult_1) == 0x002340, "Member 'UABP_NPC_Base_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_TransitionResult) == 0x002368, "Member 'UABP_NPC_Base_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SequencePlayer_4) == 0x002390, "Member 'UABP_NPC_Base_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_BlendListByBool_2) == 0x0023D8, "Member 'UABP_NPC_Base_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_BlendSpacePlayer_2) == 0x002420, "Member 'UABP_NPC_Base_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_StateResult_5) == 0x002490, "Member 'UABP_NPC_Base_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SequencePlayer_3) == 0x0024B0, "Member 'UABP_NPC_Base_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_StateResult_4) == 0x0024F8, "Member 'UABP_NPC_Base_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SequencePlayer_2) == 0x002518, "Member 'UABP_NPC_Base_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SequencePlayer_1) == 0x002560, "Member 'UABP_NPC_Base_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_BlendListByBool_1) == 0x0025A8, "Member 'UABP_NPC_Base_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_StateResult_3) == 0x0025F0, "Member 'UABP_NPC_Base_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_BlendListByBool) == 0x002610, "Member 'UABP_NPC_Base_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_BlendSpacePlayer_1) == 0x002658, "Member 'UABP_NPC_Base_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_BlendSpacePlayer) == 0x0026C8, "Member 'UABP_NPC_Base_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_StateResult_2) == 0x002738, "Member 'UABP_NPC_Base_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SequencePlayer) == 0x002758, "Member 'UABP_NPC_Base_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_StateResult_1) == 0x0027A0, "Member 'UABP_NPC_Base_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_StateMachine_1) == 0x0027C0, "Member 'UABP_NPC_Base_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_StateResult) == 0x002888, "Member 'UABP_NPC_Base_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_StateMachine) == 0x0028A8, "Member 'UABP_NPC_Base_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_Slot) == 0x002970, "Member 'UABP_NPC_Base_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_LinkedAnimLayer_1) == 0x0029B8, "Member 'UABP_NPC_Base_C::AnimGraphNode_LinkedAnimLayer_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_LinkedAnimLayer) == 0x002A80, "Member 'UABP_NPC_Base_C::AnimGraphNode_LinkedAnimLayer' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, K2Node_PropertyAccess_11) == 0x002B48, "Member 'UABP_NPC_Base_C::K2Node_PropertyAccess_11' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, K2Node_PropertyAccess_10) == 0x002B49, "Member 'UABP_NPC_Base_C::K2Node_PropertyAccess_10' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, K2Node_PropertyAccess_9) == 0x002B50, "Member 'UABP_NPC_Base_C::K2Node_PropertyAccess_9' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, K2Node_PropertyAccess_8) == 0x002B68, "Member 'UABP_NPC_Base_C::K2Node_PropertyAccess_8' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, K2Node_PropertyAccess_7) == 0x002B80, "Member 'UABP_NPC_Base_C::K2Node_PropertyAccess_7' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, K2Node_PropertyAccess_6) == 0x002B98, "Member 'UABP_NPC_Base_C::K2Node_PropertyAccess_6' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, K2Node_PropertyAccess_5) == 0x002E00, "Member 'UABP_NPC_Base_C::K2Node_PropertyAccess_5' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, K2Node_PropertyAccess_4) == 0x002E60, "Member 'UABP_NPC_Base_C::K2Node_PropertyAccess_4' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, K2Node_PropertyAccess_3) == 0x002E61, "Member 'UABP_NPC_Base_C::K2Node_PropertyAccess_3' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, K2Node_PropertyAccess_2) == 0x002E62, "Member 'UABP_NPC_Base_C::K2Node_PropertyAccess_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, K2Node_PropertyAccess_1) == 0x002E63, "Member 'UABP_NPC_Base_C::K2Node_PropertyAccess_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, K2Node_PropertyAccess) == 0x002E68, "Member 'UABP_NPC_Base_C::K2Node_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, WeaponInfo) == 0x002E80, "Member 'UABP_NPC_Base_C::WeaponInfo' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, VelocityXY) == 0x0030E0, "Member 'UABP_NPC_Base_C::VelocityXY' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, Speed) == 0x0030F0, "Member 'UABP_NPC_Base_C::Speed' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, IsAim) == 0x0030F8, "Member 'UABP_NPC_Base_C::IsAim' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, IsReloading) == 0x0030F9, "Member 'UABP_NPC_Base_C::IsReloading' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, IsCrouch) == 0x0030FA, "Member 'UABP_NPC_Base_C::IsCrouch' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AimRotatorForSpine) == 0x003100, "Member 'UABP_NPC_Base_C::AimRotatorForSpine' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, IsEndJump) == 0x003118, "Member 'UABP_NPC_Base_C::IsEndJump' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, IsValidSprintAnimation) == 0x003119, "Member 'UABP_NPC_Base_C::IsValidSprintAnimation' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, IsSprint) == 0x00311A, "Member 'UABP_NPC_Base_C::IsSprint' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, LeftHandTransform) == 0x003120, "Member 'UABP_NPC_Base_C::LeftHandTransform' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, IsAttachLeftHand) == 0x003180, "Member 'UABP_NPC_Base_C::IsAttachLeftHand' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, TSCache_ShooterComponent) == 0x003188, "Member 'UABP_NPC_Base_C::TSCache_ShooterComponent' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, TSCache_OwnerPalCharacter) == 0x003190, "Member 'UABP_NPC_Base_C::TSCache_OwnerPalCharacter' has a wrong offset!");

}

