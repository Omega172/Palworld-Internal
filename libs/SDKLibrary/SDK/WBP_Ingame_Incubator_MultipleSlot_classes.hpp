#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Ingame_Incubator_MultipleSlot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Ingame_Incubator_MultipleSlot.WBP_Ingame_Incubator_MultipleSlot_C
// 0x0040 (0x02B8 - 0x0278)
class UWBP_Ingame_Incubator_MultipleSlot_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_PalRichTextBlock_C*                 BP_PalRichTextBlock_RemainTime;                    // 0x0280(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     BP_PalTextBlock_Complete;                          // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CircleGauge_Complete;                              // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CircleGauge_Progress;                              // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalCommonItemIcon_C*               WBP_PalCommonItemIcon;                             // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPalWorkProgress*                       Work_Progress;                                     // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UPalItemSlot*                           TargetSlot;                                        // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_Ingame_Incubator_MultipleSlot(int32 EntryPoint);
	void On_Update_Work_Amount(class UPalWorkProgress* WorkProgress);
	void SetSlot(class UPalItemSlot* Param_Slot);
	void Unbind();
	void UpdateSlotProgress(class UPalWorkProgress* Param_Work_Progress);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Ingame_Incubator_MultipleSlot_C">();
	}
	static class UWBP_Ingame_Incubator_MultipleSlot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Ingame_Incubator_MultipleSlot_C>();
	}
};
static_assert(alignof(UWBP_Ingame_Incubator_MultipleSlot_C) == 0x000008, "Wrong alignment on UWBP_Ingame_Incubator_MultipleSlot_C");
static_assert(sizeof(UWBP_Ingame_Incubator_MultipleSlot_C) == 0x0002B8, "Wrong size on UWBP_Ingame_Incubator_MultipleSlot_C");
static_assert(offsetof(UWBP_Ingame_Incubator_MultipleSlot_C, UberGraphFrame) == 0x000278, "Member 'UWBP_Ingame_Incubator_MultipleSlot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_MultipleSlot_C, BP_PalRichTextBlock_RemainTime) == 0x000280, "Member 'UWBP_Ingame_Incubator_MultipleSlot_C::BP_PalRichTextBlock_RemainTime' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_MultipleSlot_C, BP_PalTextBlock_Complete) == 0x000288, "Member 'UWBP_Ingame_Incubator_MultipleSlot_C::BP_PalTextBlock_Complete' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_MultipleSlot_C, CircleGauge_Complete) == 0x000290, "Member 'UWBP_Ingame_Incubator_MultipleSlot_C::CircleGauge_Complete' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_MultipleSlot_C, CircleGauge_Progress) == 0x000298, "Member 'UWBP_Ingame_Incubator_MultipleSlot_C::CircleGauge_Progress' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_MultipleSlot_C, WBP_PalCommonItemIcon) == 0x0002A0, "Member 'UWBP_Ingame_Incubator_MultipleSlot_C::WBP_PalCommonItemIcon' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_MultipleSlot_C, Work_Progress) == 0x0002A8, "Member 'UWBP_Ingame_Incubator_MultipleSlot_C::Work_Progress' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_MultipleSlot_C, TargetSlot) == 0x0002B0, "Member 'UWBP_Ingame_Incubator_MultipleSlot_C::TargetSlot' has a wrong offset!");

}

