#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Trading_Pal

#include "Basic.hpp"

#include "EPalBoxHoveredSlotType_structs.hpp"
#include "Engine_structs.hpp"
#include "Pal_structs.hpp"
#include "Pal_classes.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Trading_Pal.WBP_Trading_Pal_C
// 0x01B0 (0x05E0 - 0x0430)
class UWBP_Trading_Pal_C final : public UPalUserWidgetOverlayUI
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0430(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCanvasPanel*                           Canvas_Caution;                                    // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_SellList;                                   // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_SellSetting;                                // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              CheckBox_PrivateLock;                              // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_Lock_1;                              // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_SellSetting_Head;                    // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBoxSellListHead_;                        // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ItemSlot_Add;                                // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_PalSlot_Add;                                 // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPalEditableTextBox*                    PalEditableTextBox_CostNum;                        // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_BoxPalList_Party_C*                WBP_BoxPalList_Party;                              // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CommonButton_1_C*                  WBP_CommonButton_Cancel;                           // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CommonButton_C*                    WBP_CommonButton_Confirm;                          // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_IngameMenu_PalBox_PalDetail_C*     WBP_IngameMenu_PalBox_PalDetail;                   // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Menu_btn_C*                        WBP_Menu_btn;                                      // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalCommonCharacterSlotButton_C*    WBP_PalCommonCharacterSlotButton_Edit;             // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalInGameMenuItemSlotButton_C*     WBP_PalInGameMenuItemSlotButton_Cost;              // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalInvisibleButton_C*              WBP_PalInvisibleButton_Lock;                       // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalInvisibleButton_C*              WBP_PalInvisibleButton_Minus;                      // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalInvisibleButton_C*              WBP_PalInvisibleButton_Plus;                       // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Trading_Item_List_C*               WBP_Trading_Item_List;                             // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Trading_Item_List_C*               WBP_Trading_Item_List_1;                           // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Trading_Item_List_C*               WBP_Trading_Item_List_2;                           // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Trading_Item_List_C*               WBP_Trading_Item_List_3;                           // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Trading_Item_List_C*               WBP_Trading_Item_List_4;                           // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPalMapObjectPalBoothModel*             PalBoothModel;                                     // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_PalCommonCharacterSlotButton_C*> PartyPalSlots;                                     // 0x0508(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UPalIndividualCharacterSlot*            CachedLastHoveredSlot;                             // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FPalUIActionBindData                   ViewDetailInputHandle;                             // 0x0520(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	uint8                                         Pad_3BD7[0x4];                                     // 0x0524(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_Trading_Item_List_C*>       TradingList;                                       // 0x0528(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FPalPalBoothTradeInfo                  CurrentTradeInfo;                                  // 0x0538(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   LastCostNum;                                       // 0x05A8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Confirmable;                                       // 0x05C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BD8[0x3];                                     // 0x05C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EditingIndex;                                      // 0x05C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SelectingProduct;                                  // 0x05C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPalBoxHoveredSlotType                        HoverdSlotType;                                    // 0x05C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BD9[0x6];                                     // 0x05CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIndividualCharacterHandle*          LastHoveredTradePalHandle;                         // 0x05D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableEdit;                                        // 0x05D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__WBP_Trading_Item_PalEditableTextBox_CostNum_K2Node_ComponentBoundEvent_12_OnEditableTextBoxChangedEvent__DelegateSignature(const class FText& Text);
	void BndEvt__WBP_Trading_Item_PalEditableTextBox_CostNum_K2Node_ComponentBoundEvent_13_OnEditableTextBoxCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__WBP_Trading_Pal_WBP_BoxPalList_Party_K2Node_ComponentBoundEvent_0_OnHoverSlot__DelegateSignature(class UWBP_PalCharacterSlotButtonBase_C* Param_Slot);
	void BndEvt__WBP_Trading_Pal_WBP_BoxPalList_Party_K2Node_ComponentBoundEvent_1_OnUnhoverSlot__DelegateSignature(class UWBP_PalCharacterSlotButtonBase_C* Param_Slot);
	void BndEvt__WBP_Trading_Pal_WBP_BoxPalList_Party_K2Node_ComponentBoundEvent_5_OnCreatedNewSlot__DelegateSignature(class UWBP_PalCharacterSlotButtonBase_C* Param_Slot);
	void BndEvt__WBP_Trading_Pal_WBP_BoxPalList_Party_K2Node_ComponentBoundEvent_6_OnLeftClickedSlot__DelegateSignature(class UWBP_PalCharacterSlotButtonBase_C* Param_Slot, EPalItemSlotPressType PressType);
	void BndEvt__WBP_Trading_Pal_WBP_CommonButton_Cancel_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature();
	void BndEvt__WBP_Trading_Pal_WBP_CommonButton_Confirm_K2Node_ComponentBoundEvent_14_OnClicked__DelegateSignature();
	void BndEvt__WBP_Trading_Pal_WBP_Menu_btn_K2Node_ComponentBoundEvent_2_OnButtonClicked__DelegateSignature();
	void BndEvt__WBP_Trading_Pal_WBP_PalCommonCharacterSlotButton_Edit_K2Node_ComponentBoundEvent_4_OnClickedButton__DelegateSignature(class UWBP_PalCharacterSlotButtonBase_C* Widget, EPalItemSlotPressType PressType);
	void BndEvt__WBP_Trading_Pal_WBP_PalCommonCharacterSlotButton_Edit_K2Node_ComponentBoundEvent_7_OnHoveredButton__DelegateSignature(class UWBP_PalCharacterSlotButtonBase_C* Widget);
	void BndEvt__WBP_Trading_Pal_WBP_PalCommonCharacterSlotButton_Edit_K2Node_ComponentBoundEvent_8_OnUnhoveredButton__DelegateSignature(class UWBP_PalCharacterSlotButtonBase_C* Widget);
	void BndEvt__WBP_Trading_Pal_WBP_PalInGameMenuItemSlotButton_Cost_K2Node_ComponentBoundEvent_9_OnClickedButton__DelegateSignature(class UWBP_PalItemSlotButtonBase_C* Widget, EPalItemSlotPressType PressType);
	void BndEvt__WBP_Trading_Pal_WBP_PalInvisibleButton_Lock_K2Node_ComponentBoundEvent_15_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_Trading_Pal_WBP_PalInvisibleButton_Minus_K2Node_ComponentBoundEvent_11_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_Trading_Pal_WBP_PalInvisibleButton_Plus_K2Node_ComponentBoundEvent_10_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	class UWidget* CustomNavigation_ToCancel(EUINavigation Param_Navigation);
	void Destruct();
	void Enable_Pal_Select(bool EnableBox, bool EnableParty);
	void ExecuteUbergraph_WBP_Trading_Pal(int32 EntryPoint);
	void OnCancelAction();
	void OnClickedCostSelectSlot(class FName StaticItemId);
	void OnClickedRemoveTradeButton(int32 TradeIndex);
	void OnClickSlot(class UWBP_PalCharacterSlotButtonBase_C* Param_Slot, EPalItemSlotPressType PressType);
	void OnHoverPalSlot(class UPalIndividualCharacterSlot* Param_Slot);
	void OnHoverPartyPalSlot(class UWBP_PalCharacterSlotButtonBase_C* Param_Slot);
	void OnInitialized();
	void OnPrivateLockChanged(const struct FGuid& LockPlayerUId);
	void OnSetup();
	void OnStoreSlotUpdate(class UPalIndividualCharacterSlot* Param_Slot, class UPalIndividualCharacterHandle* LastHandle);
	void OnTradeEdit(int32 Param_Index);
	void OnTradeHovered(int32 TradeIndex);
	void OnTradeUnhovered(int32 TradeIndex);
	void OnUnhoverPalSlot();
	void OnUnhoverPartyPalSlot(class UWBP_PalCharacterSlotButtonBase_C* Param_Slot);
	void OnViewDetailInput();
	void PreConstruct(bool IsDesignTime);
	void SetCostSettingNum(int32 NewNum);
	void Setup();
	void Switch_Sell_Panel(bool ToSellList);
	void Toggle_Private_Lock();
	void ToNextFocus();
	void ToPrevFocus();
	void ToSellListPanel();
	void ToSetSellPanel();
	void Update_Sell_List();
	void Validate_Current_Trade_Info();

	class UWidget* BP_GetDesiredFocusTarget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Trading_Pal_C">();
	}
	static class UWBP_Trading_Pal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Trading_Pal_C>();
	}
};
static_assert(alignof(UWBP_Trading_Pal_C) == 0x000008, "Wrong alignment on UWBP_Trading_Pal_C");
static_assert(sizeof(UWBP_Trading_Pal_C) == 0x0005E0, "Wrong size on UWBP_Trading_Pal_C");
static_assert(offsetof(UWBP_Trading_Pal_C, UberGraphFrame) == 0x000430, "Member 'UWBP_Trading_Pal_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, Canvas_Caution) == 0x000438, "Member 'UWBP_Trading_Pal_C::Canvas_Caution' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, Canvas_SellList) == 0x000440, "Member 'UWBP_Trading_Pal_C::Canvas_SellList' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, Canvas_SellSetting) == 0x000448, "Member 'UWBP_Trading_Pal_C::Canvas_SellSetting' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, CheckBox_PrivateLock) == 0x000450, "Member 'UWBP_Trading_Pal_C::CheckBox_PrivateLock' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, HorizontalBox_Lock_1) == 0x000458, "Member 'UWBP_Trading_Pal_C::HorizontalBox_Lock_1' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, HorizontalBox_SellSetting_Head) == 0x000460, "Member 'UWBP_Trading_Pal_C::HorizontalBox_SellSetting_Head' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, HorizontalBoxSellListHead_) == 0x000468, "Member 'UWBP_Trading_Pal_C::HorizontalBoxSellListHead_' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, Image_ItemSlot_Add) == 0x000470, "Member 'UWBP_Trading_Pal_C::Image_ItemSlot_Add' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, Image_PalSlot_Add) == 0x000478, "Member 'UWBP_Trading_Pal_C::Image_PalSlot_Add' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, PalEditableTextBox_CostNum) == 0x000480, "Member 'UWBP_Trading_Pal_C::PalEditableTextBox_CostNum' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, WBP_BoxPalList_Party) == 0x000488, "Member 'UWBP_Trading_Pal_C::WBP_BoxPalList_Party' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, WBP_CommonButton_Cancel) == 0x000490, "Member 'UWBP_Trading_Pal_C::WBP_CommonButton_Cancel' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, WBP_CommonButton_Confirm) == 0x000498, "Member 'UWBP_Trading_Pal_C::WBP_CommonButton_Confirm' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, WBP_IngameMenu_PalBox_PalDetail) == 0x0004A0, "Member 'UWBP_Trading_Pal_C::WBP_IngameMenu_PalBox_PalDetail' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, WBP_Menu_btn) == 0x0004A8, "Member 'UWBP_Trading_Pal_C::WBP_Menu_btn' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, WBP_PalCommonCharacterSlotButton_Edit) == 0x0004B0, "Member 'UWBP_Trading_Pal_C::WBP_PalCommonCharacterSlotButton_Edit' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, WBP_PalInGameMenuItemSlotButton_Cost) == 0x0004B8, "Member 'UWBP_Trading_Pal_C::WBP_PalInGameMenuItemSlotButton_Cost' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, WBP_PalInvisibleButton_Lock) == 0x0004C0, "Member 'UWBP_Trading_Pal_C::WBP_PalInvisibleButton_Lock' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, WBP_PalInvisibleButton_Minus) == 0x0004C8, "Member 'UWBP_Trading_Pal_C::WBP_PalInvisibleButton_Minus' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, WBP_PalInvisibleButton_Plus) == 0x0004D0, "Member 'UWBP_Trading_Pal_C::WBP_PalInvisibleButton_Plus' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, WBP_Trading_Item_List) == 0x0004D8, "Member 'UWBP_Trading_Pal_C::WBP_Trading_Item_List' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, WBP_Trading_Item_List_1) == 0x0004E0, "Member 'UWBP_Trading_Pal_C::WBP_Trading_Item_List_1' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, WBP_Trading_Item_List_2) == 0x0004E8, "Member 'UWBP_Trading_Pal_C::WBP_Trading_Item_List_2' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, WBP_Trading_Item_List_3) == 0x0004F0, "Member 'UWBP_Trading_Pal_C::WBP_Trading_Item_List_3' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, WBP_Trading_Item_List_4) == 0x0004F8, "Member 'UWBP_Trading_Pal_C::WBP_Trading_Item_List_4' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, PalBoothModel) == 0x000500, "Member 'UWBP_Trading_Pal_C::PalBoothModel' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, PartyPalSlots) == 0x000508, "Member 'UWBP_Trading_Pal_C::PartyPalSlots' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, CachedLastHoveredSlot) == 0x000518, "Member 'UWBP_Trading_Pal_C::CachedLastHoveredSlot' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, ViewDetailInputHandle) == 0x000520, "Member 'UWBP_Trading_Pal_C::ViewDetailInputHandle' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, TradingList) == 0x000528, "Member 'UWBP_Trading_Pal_C::TradingList' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, CurrentTradeInfo) == 0x000538, "Member 'UWBP_Trading_Pal_C::CurrentTradeInfo' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, LastCostNum) == 0x0005A8, "Member 'UWBP_Trading_Pal_C::LastCostNum' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, Confirmable) == 0x0005C0, "Member 'UWBP_Trading_Pal_C::Confirmable' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, EditingIndex) == 0x0005C4, "Member 'UWBP_Trading_Pal_C::EditingIndex' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, SelectingProduct) == 0x0005C8, "Member 'UWBP_Trading_Pal_C::SelectingProduct' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, HoverdSlotType) == 0x0005C9, "Member 'UWBP_Trading_Pal_C::HoverdSlotType' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, LastHoveredTradePalHandle) == 0x0005D0, "Member 'UWBP_Trading_Pal_C::LastHoveredTradePalHandle' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Pal_C, EnableEdit) == 0x0005D8, "Member 'UWBP_Trading_Pal_C::EnableEdit' has a wrong offset!");

}

