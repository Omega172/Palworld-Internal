#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Action_GrapplingBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Pal_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Action_GrapplingBase.BP_Action_GrapplingBase_C
// 0x0070 (0x01B0 - 0x0140)
#pragma pack(push, 0x1)
class alignas(0x10) UBP_Action_GrapplingBase_C : public UPalActionBase
{
public:
	uint8                                         Pad_5202[0x8];                                     // 0x0138(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0140(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        JumpPower;                                         // 0x0148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEndCompleted;                                    // 0x0150(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5203[0xF];                                     // 0x0151(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  MeshRotationCache;                                 // 0x0160(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MeshLocationCache;                                 // 0x0180(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          ReelingSE;                                         // 0x0198(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         HitPointEffect;                                    // 0x01A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void EndProcess();
	void ExecuteUbergraph_BP_Action_GrapplingBase(int32 EntryPoint);
	void NotifyFinishToWeapon();
	void NotifyStartToWeapon(const struct FVector& HitLocation, double CoolTimeRate);
	void OnBeginAction();
	void OnBlendOut_284045CE4BC4B2D43CCB2E9B3225F0C8(class FName NotifyName);
	void OnBreakAction();
	void OnCompleted_284045CE4BC4B2D43CCB2E9B3225F0C8(class FName NotifyName);
	void OnEndAction();
	void OnInterrupted_284045CE4BC4B2D43CCB2E9B3225F0C8(class FName NotifyName);
	void OnNotifyBegin_284045CE4BC4B2D43CCB2E9B3225F0C8(class FName NotifyName);
	void OnNotifyEnd_284045CE4BC4B2D43CCB2E9B3225F0C8(class FName NotifyName);
	void SetCharacterVelocity(const struct FVector& Velocity);
	void TickAction(float DeltaTime);
	void UpdateMeshRotation(float DeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Action_GrapplingBase_C">();
	}
	static class UBP_Action_GrapplingBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Action_GrapplingBase_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(UBP_Action_GrapplingBase_C) == 0x000010, "Wrong alignment on UBP_Action_GrapplingBase_C");
static_assert(sizeof(UBP_Action_GrapplingBase_C) == 0x0001B0, "Wrong size on UBP_Action_GrapplingBase_C");
static_assert(offsetof(UBP_Action_GrapplingBase_C, UberGraphFrame) == 0x000140, "Member 'UBP_Action_GrapplingBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Action_GrapplingBase_C, JumpPower) == 0x000148, "Member 'UBP_Action_GrapplingBase_C::JumpPower' has a wrong offset!");
static_assert(offsetof(UBP_Action_GrapplingBase_C, IsEndCompleted) == 0x000150, "Member 'UBP_Action_GrapplingBase_C::IsEndCompleted' has a wrong offset!");
static_assert(offsetof(UBP_Action_GrapplingBase_C, MeshRotationCache) == 0x000160, "Member 'UBP_Action_GrapplingBase_C::MeshRotationCache' has a wrong offset!");
static_assert(offsetof(UBP_Action_GrapplingBase_C, MeshLocationCache) == 0x000180, "Member 'UBP_Action_GrapplingBase_C::MeshLocationCache' has a wrong offset!");
static_assert(offsetof(UBP_Action_GrapplingBase_C, ReelingSE) == 0x000198, "Member 'UBP_Action_GrapplingBase_C::ReelingSE' has a wrong offset!");
static_assert(offsetof(UBP_Action_GrapplingBase_C, HitPointEffect) == 0x0001A0, "Member 'UBP_Action_GrapplingBase_C::HitPointEffect' has a wrong offset!");

}

