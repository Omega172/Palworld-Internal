#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GrapplingGun

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Pal_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GrapplingGun.BP_GrapplingGun_C
// 0x0060 (0x05F0 - 0x0590)
class ABP_GrapplingGun_C final : public APalWeaponBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0590(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 Weapon;                                            // 0x0598(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEquip;                                           // 0x05A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5964[0x7];                                     // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CableMaxLength;                                    // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CableShootSpeed;                                   // 0x05B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CableReturnSpeed;                                  // 0x05B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PlayerMoveSpeed;                                   // 0x05C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsVisibleReticle;                                  // 0x05C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5965[0x7];                                     // 0x05C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GrapplingGun_Bullet_C*              Bullet;                                            // 0x05D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        NearCoolTimeDistance;                              // 0x05D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NearCoolTimeRate;                                  // 0x05E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalGrapplingGunModule*                 GrapplingGunModule;                                // 0x05E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_GrapplingGun(int32 EntryPoint);
	void OnAttachWeapon(class AActor* AttachActor);
	void OnDetachWeapon(class AActor* DetachActor);
	void OnGrapplingActionEnd();
	void OnGrapplingActionStart(const struct FVector& HitLocation, double CoolTimeRate);
	void OnPullTrigger();
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveTick(float DeltaSeconds);
	void UpdateBulletLocation();
	void UpdateVisibleReticle();

	void IsShowReticle(bool* IsShow) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GrapplingGun_C">();
	}
	static class ABP_GrapplingGun_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GrapplingGun_C>();
	}
};
static_assert(alignof(ABP_GrapplingGun_C) == 0x000008, "Wrong alignment on ABP_GrapplingGun_C");
static_assert(sizeof(ABP_GrapplingGun_C) == 0x0005F0, "Wrong size on ABP_GrapplingGun_C");
static_assert(offsetof(ABP_GrapplingGun_C, UberGraphFrame) == 0x000590, "Member 'ABP_GrapplingGun_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_GrapplingGun_C, Weapon) == 0x000598, "Member 'ABP_GrapplingGun_C::Weapon' has a wrong offset!");
static_assert(offsetof(ABP_GrapplingGun_C, IsEquip) == 0x0005A0, "Member 'ABP_GrapplingGun_C::IsEquip' has a wrong offset!");
static_assert(offsetof(ABP_GrapplingGun_C, CableMaxLength) == 0x0005A8, "Member 'ABP_GrapplingGun_C::CableMaxLength' has a wrong offset!");
static_assert(offsetof(ABP_GrapplingGun_C, CableShootSpeed) == 0x0005B0, "Member 'ABP_GrapplingGun_C::CableShootSpeed' has a wrong offset!");
static_assert(offsetof(ABP_GrapplingGun_C, CableReturnSpeed) == 0x0005B8, "Member 'ABP_GrapplingGun_C::CableReturnSpeed' has a wrong offset!");
static_assert(offsetof(ABP_GrapplingGun_C, PlayerMoveSpeed) == 0x0005C0, "Member 'ABP_GrapplingGun_C::PlayerMoveSpeed' has a wrong offset!");
static_assert(offsetof(ABP_GrapplingGun_C, IsVisibleReticle) == 0x0005C8, "Member 'ABP_GrapplingGun_C::IsVisibleReticle' has a wrong offset!");
static_assert(offsetof(ABP_GrapplingGun_C, Bullet) == 0x0005D0, "Member 'ABP_GrapplingGun_C::Bullet' has a wrong offset!");
static_assert(offsetof(ABP_GrapplingGun_C, NearCoolTimeDistance) == 0x0005D8, "Member 'ABP_GrapplingGun_C::NearCoolTimeDistance' has a wrong offset!");
static_assert(offsetof(ABP_GrapplingGun_C, NearCoolTimeRate) == 0x0005E0, "Member 'ABP_GrapplingGun_C::NearCoolTimeRate' has a wrong offset!");
static_assert(offsetof(ABP_GrapplingGun_C, GrapplingGunModule) == 0x0005E8, "Member 'ABP_GrapplingGun_C::GrapplingGunModule' has a wrong offset!");

}

