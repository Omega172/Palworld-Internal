#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Ingame_Incubator_Multiple

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Pal_structs.hpp"
#include "Pal_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Ingame_Incubator_Multiple.WBP_Ingame_Incubator_Multiple_C
// 0x00C0 (0x04C8 - 0x0408)
class UWBP_Ingame_Incubator_Multiple_C final : public UPalUIMapObjectStatusIndicatorBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0408(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anm_DetailToSimple;                                // 0x0410(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBP_PalRichTextBlock_C*                 BP_PalRichTextBlock_NoSet;                         // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LineCenter;                                        // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OverlayStatus;                                     // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Ingame_Incubator_MultipleSlot_C*   WBP_Ingame_Incubator_MultipleSlot;                 // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Ingame_Incubator_MultipleSlot_C*   WBP_Ingame_Incubator_MultipleSlot_1;               // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Ingame_Incubator_MultipleSlot_C*   WBP_Ingame_Incubator_MultipleSlot_2;               // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Ingame_Incubator_MultipleSlot_C*   WBP_Ingame_Incubator_MultipleSlot_3;               // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Ingame_Incubator_MultipleSlot_C*   WBP_Ingame_Incubator_MultipleSlot_4;               // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Ingame_Incubator_MultipleSlot_C*   WBP_Ingame_Incubator_MultipleSlot_5;               // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Ingame_Incubator_MultipleSlot_C*   WBP_Ingame_Incubator_MultipleSlot_6;               // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Ingame_Incubator_MultipleSlot_C*   WBP_Ingame_Incubator_MultipleSlot_7;               // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Ingame_Incubator_MultipleSlot_C*   WBP_Ingame_Incubator_MultipleSlot_8;               // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Ingame_Incubator_MultipleSlot_C*   WBP_Ingame_Incubator_MultipleSlot_9;               // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Ingame_Incubator_MultipleSlot_C*   WBP_Ingame_Incubator_MultipleSlot_Simple;          // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_RequirePalInfo_C*                  WBP_RequirePalInfo;                                // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPalMapObjectMultiHatchingEggModel*     Model;                                             // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDisplayedDetail;                                 // 0x0498(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_650F[0x7];                                     // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           DisplayCheckTimer;                                 // 0x04A0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_Ingame_Incubator_MultipleSlot_C*> Slots;                                             // 0x04A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         LastSimpleSlotIndex;                               // 0x04B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6510[0x4];                                     // 0x04BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           SimpleSlotUpdateTimer;                             // 0x04C0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void Destruct();
	void DisplayCheck();
	void ExecuteUbergraph_WBP_Ingame_Incubator_Multiple(int32 EntryPoint);
	void OnEggArrayUpdated();
	void OnInitialized();
	void OnSetup();
	void Setup();
	void UpdatePowerSuffcient(class UPalMapObjectEnergyModule* Module);
	void UpdateSimpleSlot();
	void UpdateSlots(class UPalItemContainer* ItemContainer);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Ingame_Incubator_Multiple_C">();
	}
	static class UWBP_Ingame_Incubator_Multiple_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Ingame_Incubator_Multiple_C>();
	}
};
static_assert(alignof(UWBP_Ingame_Incubator_Multiple_C) == 0x000008, "Wrong alignment on UWBP_Ingame_Incubator_Multiple_C");
static_assert(sizeof(UWBP_Ingame_Incubator_Multiple_C) == 0x0004C8, "Wrong size on UWBP_Ingame_Incubator_Multiple_C");
static_assert(offsetof(UWBP_Ingame_Incubator_Multiple_C, UberGraphFrame) == 0x000408, "Member 'UWBP_Ingame_Incubator_Multiple_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_Multiple_C, Anm_DetailToSimple) == 0x000410, "Member 'UWBP_Ingame_Incubator_Multiple_C::Anm_DetailToSimple' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_Multiple_C, BP_PalRichTextBlock_NoSet) == 0x000418, "Member 'UWBP_Ingame_Incubator_Multiple_C::BP_PalRichTextBlock_NoSet' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_Multiple_C, LineCenter) == 0x000420, "Member 'UWBP_Ingame_Incubator_Multiple_C::LineCenter' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_Multiple_C, OverlayStatus) == 0x000428, "Member 'UWBP_Ingame_Incubator_Multiple_C::OverlayStatus' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_Multiple_C, WBP_Ingame_Incubator_MultipleSlot) == 0x000430, "Member 'UWBP_Ingame_Incubator_Multiple_C::WBP_Ingame_Incubator_MultipleSlot' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_Multiple_C, WBP_Ingame_Incubator_MultipleSlot_1) == 0x000438, "Member 'UWBP_Ingame_Incubator_Multiple_C::WBP_Ingame_Incubator_MultipleSlot_1' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_Multiple_C, WBP_Ingame_Incubator_MultipleSlot_2) == 0x000440, "Member 'UWBP_Ingame_Incubator_Multiple_C::WBP_Ingame_Incubator_MultipleSlot_2' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_Multiple_C, WBP_Ingame_Incubator_MultipleSlot_3) == 0x000448, "Member 'UWBP_Ingame_Incubator_Multiple_C::WBP_Ingame_Incubator_MultipleSlot_3' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_Multiple_C, WBP_Ingame_Incubator_MultipleSlot_4) == 0x000450, "Member 'UWBP_Ingame_Incubator_Multiple_C::WBP_Ingame_Incubator_MultipleSlot_4' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_Multiple_C, WBP_Ingame_Incubator_MultipleSlot_5) == 0x000458, "Member 'UWBP_Ingame_Incubator_Multiple_C::WBP_Ingame_Incubator_MultipleSlot_5' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_Multiple_C, WBP_Ingame_Incubator_MultipleSlot_6) == 0x000460, "Member 'UWBP_Ingame_Incubator_Multiple_C::WBP_Ingame_Incubator_MultipleSlot_6' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_Multiple_C, WBP_Ingame_Incubator_MultipleSlot_7) == 0x000468, "Member 'UWBP_Ingame_Incubator_Multiple_C::WBP_Ingame_Incubator_MultipleSlot_7' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_Multiple_C, WBP_Ingame_Incubator_MultipleSlot_8) == 0x000470, "Member 'UWBP_Ingame_Incubator_Multiple_C::WBP_Ingame_Incubator_MultipleSlot_8' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_Multiple_C, WBP_Ingame_Incubator_MultipleSlot_9) == 0x000478, "Member 'UWBP_Ingame_Incubator_Multiple_C::WBP_Ingame_Incubator_MultipleSlot_9' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_Multiple_C, WBP_Ingame_Incubator_MultipleSlot_Simple) == 0x000480, "Member 'UWBP_Ingame_Incubator_Multiple_C::WBP_Ingame_Incubator_MultipleSlot_Simple' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_Multiple_C, WBP_RequirePalInfo) == 0x000488, "Member 'UWBP_Ingame_Incubator_Multiple_C::WBP_RequirePalInfo' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_Multiple_C, Model) == 0x000490, "Member 'UWBP_Ingame_Incubator_Multiple_C::Model' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_Multiple_C, IsDisplayedDetail) == 0x000498, "Member 'UWBP_Ingame_Incubator_Multiple_C::IsDisplayedDetail' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_Multiple_C, DisplayCheckTimer) == 0x0004A0, "Member 'UWBP_Ingame_Incubator_Multiple_C::DisplayCheckTimer' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_Multiple_C, Slots) == 0x0004A8, "Member 'UWBP_Ingame_Incubator_Multiple_C::Slots' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_Multiple_C, LastSimpleSlotIndex) == 0x0004B8, "Member 'UWBP_Ingame_Incubator_Multiple_C::LastSimpleSlotIndex' has a wrong offset!");
static_assert(offsetof(UWBP_Ingame_Incubator_Multiple_C, SimpleSlotUpdateTimer) == 0x0004C0, "Member 'UWBP_Ingame_Incubator_Multiple_C::SimpleSlotUpdateTimer' has a wrong offset!");

}

