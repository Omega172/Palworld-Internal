#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPCEmoteDetectionComponent

#include "Basic.hpp"

#include "Pal_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_NPCEmoteDetectionComponent.BP_NPCEmoteDetectionComponent_C.ActEmote
// 0x0068 (0x0068 - 0x0000)
struct BP_NPCEmoteDetectionComponent_C_ActEmote final
{
public:
	class UClass*                                 Param_Class;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ActionTarget;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_480E[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Action_Emote_Base;    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_480F[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4810[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UPalActionComponent*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPalActionBase*                         CallFunc_PlayAction_ReturnValue;                   // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalActionBase*                         CallFunc_PlayActionByType_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanEmote_bCanEmote;                       // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPCEmoteDetectionComponent_C_ActEmote) == 0x000008, "Wrong alignment on BP_NPCEmoteDetectionComponent_C_ActEmote");
static_assert(sizeof(BP_NPCEmoteDetectionComponent_C_ActEmote) == 0x000068, "Wrong size on BP_NPCEmoteDetectionComponent_C_ActEmote");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ActEmote, Param_Class) == 0x000000, "Member 'BP_NPCEmoteDetectionComponent_C_ActEmote::Param_Class' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ActEmote, ActionTarget) == 0x000008, "Member 'BP_NPCEmoteDetectionComponent_C_ActEmote::ActionTarget' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ActEmote, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_NPCEmoteDetectionComponent_C_ActEmote::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ActEmote, K2Node_ClassDynamicCast_AsBP_Action_Emote_Base) == 0x000018, "Member 'BP_NPCEmoteDetectionComponent_C_ActEmote::K2Node_ClassDynamicCast_AsBP_Action_Emote_Base' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ActEmote, K2Node_ClassDynamicCast_bSuccess) == 0x000020, "Member 'BP_NPCEmoteDetectionComponent_C_ActEmote::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ActEmote, K2Node_CreateDelegate_OutputDelegate) == 0x000024, "Member 'BP_NPCEmoteDetectionComponent_C_ActEmote::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ActEmote, CallFunc_GetOwner_ReturnValue) == 0x000038, "Member 'BP_NPCEmoteDetectionComponent_C_ActEmote::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ActEmote, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000040, "Member 'BP_NPCEmoteDetectionComponent_C_ActEmote::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ActEmote, CallFunc_GetComponentByClass_ReturnValue) == 0x000048, "Member 'BP_NPCEmoteDetectionComponent_C_ActEmote::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ActEmote, CallFunc_PlayAction_ReturnValue) == 0x000050, "Member 'BP_NPCEmoteDetectionComponent_C_ActEmote::CallFunc_PlayAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ActEmote, CallFunc_PlayActionByType_ReturnValue) == 0x000058, "Member 'BP_NPCEmoteDetectionComponent_C_ActEmote::CallFunc_PlayActionByType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ActEmote, CallFunc_IsValid_ReturnValue_1) == 0x000060, "Member 'BP_NPCEmoteDetectionComponent_C_ActEmote::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ActEmote, CallFunc_CanEmote_bCanEmote) == 0x000061, "Member 'BP_NPCEmoteDetectionComponent_C_ActEmote::CallFunc_CanEmote_bCanEmote' has a wrong offset!");

// Function BP_NPCEmoteDetectionComponent.BP_NPCEmoteDetectionComponent_C.CanEmote
// 0x0028 (0x0028 - 0x0000)
struct BP_NPCEmoteDetectionComponent_C_CanEmote final
{
public:
	bool                                          bCanEmote;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4811[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_ReturnValue;                       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4812[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          K2Node_DynamicCast_AsPal_Character;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBattleMode_ReturnValue;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPCEmoteDetectionComponent_C_CanEmote) == 0x000008, "Wrong alignment on BP_NPCEmoteDetectionComponent_C_CanEmote");
static_assert(sizeof(BP_NPCEmoteDetectionComponent_C_CanEmote) == 0x000028, "Wrong size on BP_NPCEmoteDetectionComponent_C_CanEmote");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_CanEmote, bCanEmote) == 0x000000, "Member 'BP_NPCEmoteDetectionComponent_C_CanEmote::bCanEmote' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_CanEmote, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_NPCEmoteDetectionComponent_C_CanEmote::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_CanEmote, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_NPCEmoteDetectionComponent_C_CanEmote::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_CanEmote, CallFunc_IsDead_ReturnValue) == 0x000011, "Member 'BP_NPCEmoteDetectionComponent_C_CanEmote::CallFunc_IsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_CanEmote, K2Node_DynamicCast_AsPal_Character) == 0x000018, "Member 'BP_NPCEmoteDetectionComponent_C_CanEmote::K2Node_DynamicCast_AsPal_Character' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_CanEmote, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_NPCEmoteDetectionComponent_C_CanEmote::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_CanEmote, CallFunc_GetBattleMode_ReturnValue) == 0x000021, "Member 'BP_NPCEmoteDetectionComponent_C_CanEmote::CallFunc_GetBattleMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_CanEmote, CallFunc_BooleanOR_ReturnValue) == 0x000022, "Member 'BP_NPCEmoteDetectionComponent_C_CanEmote::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_CanEmote, CallFunc_Not_PreBool_ReturnValue) == 0x000023, "Member 'BP_NPCEmoteDetectionComponent_C_CanEmote::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_NPCEmoteDetectionComponent.BP_NPCEmoteDetectionComponent_C.ExecuteUbergraph_BP_NPCEmoteDetectionComponent
// 0x0260 (0x0260 - 0x0000)
struct BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4813[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent_1;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_1;                   // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp_1;                    // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bFromSweep;                     // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4814[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_CustomEvent_SweepResult;                    // 0x0050(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class USphereComponent*                       CallFunc_AddComponentByClass_ReturnValue;          // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APalPlayerCharacter*                    K2Node_DynamicCast_AsPal_Player_Character;         // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4815[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalActionComponent*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4816[0x7];                                     // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent;            // 0x0160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4817[0x4];                                     // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APalPlayerCharacter*                    K2Node_DynamicCast_AsPal_Player_Character_1;       // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4818[0x7];                                     // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalActionComponent*                    CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4819[0x6];                                     // 0x019A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_481A[0x4];                                     // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalActionComponent*                    CallFunc_GetComponentByClass_ReturnValue_2;        // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPalActionBase* Action)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x01C8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_481B[0x7];                                     // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded;                         // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x01E8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_481C[0x7];                                     // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_Array_Get_Item;                           // 0x0200(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetLocalPlayerRewardAble_ReturnValue;     // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0232(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_481D[0x5];                                     // 0x0233(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APalPlayerCharacter*                    CallFunc_GetPalmi_ReturnValue;                     // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalPlayerCharacter*                    CallFunc_GetPalmi_ReturnValue_1;                   // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_481E[0x2];                                     // 0x024A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UPalActionBase* Action)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x024C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanEmote_bCanEmote;                       // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent) == 0x000008, "Wrong alignment on BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent");
static_assert(sizeof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent) == 0x000260, "Wrong size on BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, EntryPoint) == 0x000000, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, K2Node_CustomEvent_OverlappedComponent_1) == 0x000030, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::K2Node_CustomEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, K2Node_CustomEvent_OtherActor_1) == 0x000038, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::K2Node_CustomEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, K2Node_CustomEvent_OtherComp_1) == 0x000040, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::K2Node_CustomEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, K2Node_CustomEvent_OtherBodyIndex_1) == 0x000048, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::K2Node_CustomEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, K2Node_CustomEvent_bFromSweep) == 0x00004C, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::K2Node_CustomEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, K2Node_CustomEvent_SweepResult) == 0x000050, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::K2Node_CustomEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, CallFunc_AddComponentByClass_ReturnValue) == 0x000138, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, K2Node_DynamicCast_AsPal_Player_Character) == 0x000140, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::K2Node_DynamicCast_AsPal_Player_Character' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, K2Node_DynamicCast_bSuccess) == 0x000148, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, CallFunc_GetComponentByClass_ReturnValue) == 0x000150, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, CallFunc_IsValid_ReturnValue) == 0x000158, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, K2Node_CustomEvent_OverlappedComponent) == 0x000160, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::K2Node_CustomEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, K2Node_CustomEvent_OtherActor) == 0x000168, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, K2Node_CustomEvent_OtherComp) == 0x000170, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, K2Node_CustomEvent_OtherBodyIndex) == 0x000178, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::K2Node_CustomEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, K2Node_DynamicCast_AsPal_Player_Character_1) == 0x000180, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::K2Node_DynamicCast_AsPal_Player_Character_1' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, K2Node_DynamicCast_bSuccess_1) == 0x000188, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000190, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, CallFunc_IsValid_ReturnValue_1) == 0x000198, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, CallFunc_Less_IntInt_ReturnValue) == 0x000199, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, Temp_class_Variable) == 0x0001A0, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, CallFunc_Array_Length_ReturnValue) == 0x0001A8, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, CallFunc_Subtract_IntInt_ReturnValue) == 0x0001AC, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, CallFunc_RandomIntegerInRange_ReturnValue) == 0x0001B0, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, CallFunc_GetOwner_ReturnValue_1) == 0x0001B8, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, CallFunc_GetComponentByClass_ReturnValue_2) == 0x0001C0, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::CallFunc_GetComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, K2Node_CreateDelegate_OutputDelegate_2) == 0x0001C8, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, CallFunc_IsValid_ReturnValue_2) == 0x0001D8, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, K2Node_CustomEvent_Loaded) == 0x0001E0, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, K2Node_CreateDelegate_OutputDelegate_3) == 0x0001E8, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, K2Node_Event_EndPlayReason) == 0x0001F8, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, CallFunc_Array_Get_Item) == 0x000200, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x000230, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, CallFunc_GetLocalPlayerRewardAble_ReturnValue) == 0x000231, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::CallFunc_GetLocalPlayerRewardAble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000232, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, CallFunc_GetPalmi_ReturnValue) == 0x000238, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::CallFunc_GetPalmi_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, CallFunc_GetPalmi_ReturnValue_1) == 0x000240, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::CallFunc_GetPalmi_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000248, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000249, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, K2Node_CreateDelegate_OutputDelegate_4) == 0x00024C, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent, CallFunc_CanEmote_bCanEmote) == 0x00025C, "Member 'BP_NPCEmoteDetectionComponent_C_ExecuteUbergraph_BP_NPCEmoteDetectionComponent::CallFunc_CanEmote_bCanEmote' has a wrong offset!");

// Function BP_NPCEmoteDetectionComponent.BP_NPCEmoteDetectionComponent_C.OnActionBegin
// 0x0108 (0x0108 - 0x0000)
struct BP_NPCEmoteDetectionComponent_C_OnActionBegin final
{
public:
	const class UPalActionBase*                   Action;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetActionCharacter_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_Conv_ClassToSoftClassReference_ReturnValue; // 0x0018(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetLocalPlayerRewardAble_ReturnValue;     // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_481F[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLocalizedText_ReturnValue;             // 0x0050(0x0018)()
	TSoftClassPtr<class UClass>                   CallFunc_Array_Get_Item;                           // 0x0068(0x0030)(HasGetValueTypeHash)
	struct FPalLogAdditionalData                  K2Node_MakeStruct_PalLogAdditionalData;            // 0x0098(0x0038)()
	bool                                          CallFunc_EqualEqual_SoftClassReference_ReturnValue; // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4820[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalLogManager*                         CallFunc_GetLogManager_ReturnValue;                // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_AddLog_ReturnValue;                       // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalStaticCharacterParameterComponent*  CallFunc_GetComponentByClass_ReturnValue;          // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPCEmoteDetectionComponent_C_OnActionBegin) == 0x000008, "Wrong alignment on BP_NPCEmoteDetectionComponent_C_OnActionBegin");
static_assert(sizeof(BP_NPCEmoteDetectionComponent_C_OnActionBegin) == 0x000108, "Wrong size on BP_NPCEmoteDetectionComponent_C_OnActionBegin");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_OnActionBegin, Action) == 0x000000, "Member 'BP_NPCEmoteDetectionComponent_C_OnActionBegin::Action' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_OnActionBegin, CallFunc_GetObjectClass_ReturnValue) == 0x000008, "Member 'BP_NPCEmoteDetectionComponent_C_OnActionBegin::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_OnActionBegin, CallFunc_GetActionCharacter_ReturnValue) == 0x000010, "Member 'BP_NPCEmoteDetectionComponent_C_OnActionBegin::CallFunc_GetActionCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_OnActionBegin, CallFunc_Conv_ClassToSoftClassReference_ReturnValue) == 0x000018, "Member 'BP_NPCEmoteDetectionComponent_C_OnActionBegin::CallFunc_Conv_ClassToSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_OnActionBegin, CallFunc_Array_Contains_ReturnValue) == 0x000048, "Member 'BP_NPCEmoteDetectionComponent_C_OnActionBegin::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_OnActionBegin, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000049, "Member 'BP_NPCEmoteDetectionComponent_C_OnActionBegin::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_OnActionBegin, CallFunc_GetLocalPlayerRewardAble_ReturnValue) == 0x00004A, "Member 'BP_NPCEmoteDetectionComponent_C_OnActionBegin::CallFunc_GetLocalPlayerRewardAble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_OnActionBegin, K2Node_SwitchEnum_CmpSuccess) == 0x00004B, "Member 'BP_NPCEmoteDetectionComponent_C_OnActionBegin::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_OnActionBegin, CallFunc_GetLocalizedText_ReturnValue) == 0x000050, "Member 'BP_NPCEmoteDetectionComponent_C_OnActionBegin::CallFunc_GetLocalizedText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_OnActionBegin, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_NPCEmoteDetectionComponent_C_OnActionBegin::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_OnActionBegin, K2Node_MakeStruct_PalLogAdditionalData) == 0x000098, "Member 'BP_NPCEmoteDetectionComponent_C_OnActionBegin::K2Node_MakeStruct_PalLogAdditionalData' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_OnActionBegin, CallFunc_EqualEqual_SoftClassReference_ReturnValue) == 0x0000D0, "Member 'BP_NPCEmoteDetectionComponent_C_OnActionBegin::CallFunc_EqualEqual_SoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_OnActionBegin, CallFunc_GetLogManager_ReturnValue) == 0x0000D8, "Member 'BP_NPCEmoteDetectionComponent_C_OnActionBegin::CallFunc_GetLogManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_OnActionBegin, CallFunc_AddLog_ReturnValue) == 0x0000E0, "Member 'BP_NPCEmoteDetectionComponent_C_OnActionBegin::CallFunc_AddLog_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_OnActionBegin, CallFunc_GetOwner_ReturnValue) == 0x0000F0, "Member 'BP_NPCEmoteDetectionComponent_C_OnActionBegin::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_OnActionBegin, CallFunc_GetComponentByClass_ReturnValue) == 0x0000F8, "Member 'BP_NPCEmoteDetectionComponent_C_OnActionBegin::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_OnActionBegin, CallFunc_IsValid_ReturnValue) == 0x000100, "Member 'BP_NPCEmoteDetectionComponent_C_OnActionBegin::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_NPCEmoteDetectionComponent.BP_NPCEmoteDetectionComponent_C.OnLoaded_FB93EA3046670DE08CA4E3A6593D68F2
// 0x0008 (0x0008 - 0x0000)
struct BP_NPCEmoteDetectionComponent_C_OnLoaded_FB93EA3046670DE08CA4E3A6593D68F2 final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPCEmoteDetectionComponent_C_OnLoaded_FB93EA3046670DE08CA4E3A6593D68F2) == 0x000008, "Wrong alignment on BP_NPCEmoteDetectionComponent_C_OnLoaded_FB93EA3046670DE08CA4E3A6593D68F2");
static_assert(sizeof(BP_NPCEmoteDetectionComponent_C_OnLoaded_FB93EA3046670DE08CA4E3A6593D68F2) == 0x000008, "Wrong size on BP_NPCEmoteDetectionComponent_C_OnLoaded_FB93EA3046670DE08CA4E3A6593D68F2");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_OnLoaded_FB93EA3046670DE08CA4E3A6593D68F2, Loaded) == 0x000000, "Member 'BP_NPCEmoteDetectionComponent_C_OnLoaded_FB93EA3046670DE08CA4E3A6593D68F2::Loaded' has a wrong offset!");

// Function BP_NPCEmoteDetectionComponent.BP_NPCEmoteDetectionComponent_C.OnPlayerOverlapEnd
// 0x0020 (0x0020 - 0x0000)
struct BP_NPCEmoteDetectionComponent_C_OnPlayerOverlapEnd final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPCEmoteDetectionComponent_C_OnPlayerOverlapEnd) == 0x000008, "Wrong alignment on BP_NPCEmoteDetectionComponent_C_OnPlayerOverlapEnd");
static_assert(sizeof(BP_NPCEmoteDetectionComponent_C_OnPlayerOverlapEnd) == 0x000020, "Wrong size on BP_NPCEmoteDetectionComponent_C_OnPlayerOverlapEnd");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_OnPlayerOverlapEnd, OverlappedComponent) == 0x000000, "Member 'BP_NPCEmoteDetectionComponent_C_OnPlayerOverlapEnd::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_OnPlayerOverlapEnd, OtherActor) == 0x000008, "Member 'BP_NPCEmoteDetectionComponent_C_OnPlayerOverlapEnd::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_OnPlayerOverlapEnd, OtherComp) == 0x000010, "Member 'BP_NPCEmoteDetectionComponent_C_OnPlayerOverlapEnd::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_OnPlayerOverlapEnd, OtherBodyIndex) == 0x000018, "Member 'BP_NPCEmoteDetectionComponent_C_OnPlayerOverlapEnd::OtherBodyIndex' has a wrong offset!");

// Function BP_NPCEmoteDetectionComponent.BP_NPCEmoteDetectionComponent_C.OnPlayerOverlapStart
// 0x0108 (0x0108 - 0x0000)
struct BP_NPCEmoteDetectionComponent_C_OnPlayerOverlapStart final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4821[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_NPCEmoteDetectionComponent_C_OnPlayerOverlapStart) == 0x000008, "Wrong alignment on BP_NPCEmoteDetectionComponent_C_OnPlayerOverlapStart");
static_assert(sizeof(BP_NPCEmoteDetectionComponent_C_OnPlayerOverlapStart) == 0x000108, "Wrong size on BP_NPCEmoteDetectionComponent_C_OnPlayerOverlapStart");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_OnPlayerOverlapStart, OverlappedComponent) == 0x000000, "Member 'BP_NPCEmoteDetectionComponent_C_OnPlayerOverlapStart::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_OnPlayerOverlapStart, OtherActor) == 0x000008, "Member 'BP_NPCEmoteDetectionComponent_C_OnPlayerOverlapStart::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_OnPlayerOverlapStart, OtherComp) == 0x000010, "Member 'BP_NPCEmoteDetectionComponent_C_OnPlayerOverlapStart::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_OnPlayerOverlapStart, OtherBodyIndex) == 0x000018, "Member 'BP_NPCEmoteDetectionComponent_C_OnPlayerOverlapStart::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_OnPlayerOverlapStart, bFromSweep) == 0x00001C, "Member 'BP_NPCEmoteDetectionComponent_C_OnPlayerOverlapStart::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_OnPlayerOverlapStart, SweepResult) == 0x000020, "Member 'BP_NPCEmoteDetectionComponent_C_OnPlayerOverlapStart::SweepResult' has a wrong offset!");

// Function BP_NPCEmoteDetectionComponent.BP_NPCEmoteDetectionComponent_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_NPCEmoteDetectionComponent_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPCEmoteDetectionComponent_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_NPCEmoteDetectionComponent_C_ReceiveEndPlay");
static_assert(sizeof(BP_NPCEmoteDetectionComponent_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_NPCEmoteDetectionComponent_C_ReceiveEndPlay");
static_assert(offsetof(BP_NPCEmoteDetectionComponent_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_NPCEmoteDetectionComponent_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

}

