#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_BoxPalList_Party

#include "Basic.hpp"

#include "Pal_structs.hpp"


namespace SDK::Params
{

// Function WBP_BoxPalList_Party.WBP_BoxPalList_Party_C.BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_0_OnLeftClickedSlot__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_0_OnLeftClickedSlot__DelegateSignature final
{
public:
	class UWBP_PalCharacterSlotButtonBase_C*      Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EPalItemSlotPressType                         PressType;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_0_OnLeftClickedSlot__DelegateSignature) == 0x000008, "Wrong alignment on WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_0_OnLeftClickedSlot__DelegateSignature");
static_assert(sizeof(WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_0_OnLeftClickedSlot__DelegateSignature) == 0x000010, "Wrong size on WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_0_OnLeftClickedSlot__DelegateSignature");
static_assert(offsetof(WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_0_OnLeftClickedSlot__DelegateSignature, Widget) == 0x000000, "Member 'WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_0_OnLeftClickedSlot__DelegateSignature::Widget' has a wrong offset!");
static_assert(offsetof(WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_0_OnLeftClickedSlot__DelegateSignature, PressType) == 0x000008, "Member 'WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_0_OnLeftClickedSlot__DelegateSignature::PressType' has a wrong offset!");

// Function WBP_BoxPalList_Party.WBP_BoxPalList_Party_C.BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_1_OnHoveredSlot__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_1_OnHoveredSlot__DelegateSignature final
{
public:
	class UWBP_PalCharacterSlotButtonBase_C*      Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_1_OnHoveredSlot__DelegateSignature) == 0x000008, "Wrong alignment on WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_1_OnHoveredSlot__DelegateSignature");
static_assert(sizeof(WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_1_OnHoveredSlot__DelegateSignature) == 0x000008, "Wrong size on WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_1_OnHoveredSlot__DelegateSignature");
static_assert(offsetof(WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_1_OnHoveredSlot__DelegateSignature, Widget) == 0x000000, "Member 'WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_1_OnHoveredSlot__DelegateSignature::Widget' has a wrong offset!");

// Function WBP_BoxPalList_Party.WBP_BoxPalList_Party_C.BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_2_OnUnhoveredSlot__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_2_OnUnhoveredSlot__DelegateSignature final
{
public:
	class UWBP_PalCharacterSlotButtonBase_C*      Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_2_OnUnhoveredSlot__DelegateSignature) == 0x000008, "Wrong alignment on WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_2_OnUnhoveredSlot__DelegateSignature");
static_assert(sizeof(WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_2_OnUnhoveredSlot__DelegateSignature) == 0x000008, "Wrong size on WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_2_OnUnhoveredSlot__DelegateSignature");
static_assert(offsetof(WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_2_OnUnhoveredSlot__DelegateSignature, Widget) == 0x000000, "Member 'WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_2_OnUnhoveredSlot__DelegateSignature::Widget' has a wrong offset!");

// Function WBP_BoxPalList_Party.WBP_BoxPalList_Party_C.BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_3_OnCreatedNewSlot__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_3_OnCreatedNewSlot__DelegateSignature final
{
public:
	class UWBP_PalCharacterSlotButtonBase_C*      NewSlot;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_3_OnCreatedNewSlot__DelegateSignature) == 0x000008, "Wrong alignment on WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_3_OnCreatedNewSlot__DelegateSignature");
static_assert(sizeof(WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_3_OnCreatedNewSlot__DelegateSignature) == 0x000008, "Wrong size on WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_3_OnCreatedNewSlot__DelegateSignature");
static_assert(offsetof(WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_3_OnCreatedNewSlot__DelegateSignature, NewSlot) == 0x000000, "Member 'WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_3_OnCreatedNewSlot__DelegateSignature::NewSlot' has a wrong offset!");

// Function WBP_BoxPalList_Party.WBP_BoxPalList_Party_C.BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_4_OnRightClickedSlot__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_4_OnRightClickedSlot__DelegateSignature final
{
public:
	class UWBP_PalCharacterSlotButtonBase_C*      Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_4_OnRightClickedSlot__DelegateSignature) == 0x000008, "Wrong alignment on WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_4_OnRightClickedSlot__DelegateSignature");
static_assert(sizeof(WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_4_OnRightClickedSlot__DelegateSignature) == 0x000008, "Wrong size on WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_4_OnRightClickedSlot__DelegateSignature");
static_assert(offsetof(WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_4_OnRightClickedSlot__DelegateSignature, Widget) == 0x000000, "Member 'WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_4_OnRightClickedSlot__DelegateSignature::Widget' has a wrong offset!");

// Function WBP_BoxPalList_Party.WBP_BoxPalList_Party_C.BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_5_OnUpdatedPage__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_5_OnUpdatedPage__DelegateSignature final
{
public:
	int32                                         NowPage;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_5_OnUpdatedPage__DelegateSignature) == 0x000004, "Wrong alignment on WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_5_OnUpdatedPage__DelegateSignature");
static_assert(sizeof(WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_5_OnUpdatedPage__DelegateSignature) == 0x000004, "Wrong size on WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_5_OnUpdatedPage__DelegateSignature");
static_assert(offsetof(WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_5_OnUpdatedPage__DelegateSignature, NowPage) == 0x000000, "Member 'WBP_BoxPalList_Party_C_BndEvt__WBP_BoxPalList_Party_WBP_BoxPalList_K2Node_ComponentBoundEvent_5_OnUpdatedPage__DelegateSignature::NowPage' has a wrong offset!");

// Function WBP_BoxPalList_Party.WBP_BoxPalList_Party_C.ExecuteUbergraph_WBP_BoxPalList_Party
// 0x0050 (0x0050 - 0x0000)
struct WBP_BoxPalList_Party_C_ExecuteUbergraph_WBP_BoxPalList_Party final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6454[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_PalCharacterSlotButtonBase_C*      K2Node_ComponentBoundEvent_Widget_3;               // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EPalItemSlotPressType                         K2Node_ComponentBoundEvent_PressType;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6455[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_PalCommonCharacterSlotButton_C*> K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWBP_PalCharacterSlotButtonBase_C*      K2Node_ComponentBoundEvent_Widget_2;               // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_PalCharacterSlotButtonBase_C*      K2Node_ComponentBoundEvent_Widget_1;               // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_PalCharacterSlotButtonBase_C*      K2Node_ComponentBoundEvent_NewSlot;                // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_PalCharacterSlotButtonBase_C*      K2Node_ComponentBoundEvent_Widget;                 // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_NowPage;                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BoxPalList_Party_C_ExecuteUbergraph_WBP_BoxPalList_Party) == 0x000008, "Wrong alignment on WBP_BoxPalList_Party_C_ExecuteUbergraph_WBP_BoxPalList_Party");
static_assert(sizeof(WBP_BoxPalList_Party_C_ExecuteUbergraph_WBP_BoxPalList_Party) == 0x000050, "Wrong size on WBP_BoxPalList_Party_C_ExecuteUbergraph_WBP_BoxPalList_Party");
static_assert(offsetof(WBP_BoxPalList_Party_C_ExecuteUbergraph_WBP_BoxPalList_Party, EntryPoint) == 0x000000, "Member 'WBP_BoxPalList_Party_C_ExecuteUbergraph_WBP_BoxPalList_Party::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_BoxPalList_Party_C_ExecuteUbergraph_WBP_BoxPalList_Party, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000004, "Member 'WBP_BoxPalList_Party_C_ExecuteUbergraph_WBP_BoxPalList_Party::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BoxPalList_Party_C_ExecuteUbergraph_WBP_BoxPalList_Party, K2Node_ComponentBoundEvent_Widget_3) == 0x000008, "Member 'WBP_BoxPalList_Party_C_ExecuteUbergraph_WBP_BoxPalList_Party::K2Node_ComponentBoundEvent_Widget_3' has a wrong offset!");
static_assert(offsetof(WBP_BoxPalList_Party_C_ExecuteUbergraph_WBP_BoxPalList_Party, K2Node_ComponentBoundEvent_PressType) == 0x000010, "Member 'WBP_BoxPalList_Party_C_ExecuteUbergraph_WBP_BoxPalList_Party::K2Node_ComponentBoundEvent_PressType' has a wrong offset!");
static_assert(offsetof(WBP_BoxPalList_Party_C_ExecuteUbergraph_WBP_BoxPalList_Party, K2Node_MakeArray_Array) == 0x000018, "Member 'WBP_BoxPalList_Party_C_ExecuteUbergraph_WBP_BoxPalList_Party::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_BoxPalList_Party_C_ExecuteUbergraph_WBP_BoxPalList_Party, K2Node_ComponentBoundEvent_Widget_2) == 0x000028, "Member 'WBP_BoxPalList_Party_C_ExecuteUbergraph_WBP_BoxPalList_Party::K2Node_ComponentBoundEvent_Widget_2' has a wrong offset!");
static_assert(offsetof(WBP_BoxPalList_Party_C_ExecuteUbergraph_WBP_BoxPalList_Party, K2Node_ComponentBoundEvent_Widget_1) == 0x000030, "Member 'WBP_BoxPalList_Party_C_ExecuteUbergraph_WBP_BoxPalList_Party::K2Node_ComponentBoundEvent_Widget_1' has a wrong offset!");
static_assert(offsetof(WBP_BoxPalList_Party_C_ExecuteUbergraph_WBP_BoxPalList_Party, K2Node_ComponentBoundEvent_NewSlot) == 0x000038, "Member 'WBP_BoxPalList_Party_C_ExecuteUbergraph_WBP_BoxPalList_Party::K2Node_ComponentBoundEvent_NewSlot' has a wrong offset!");
static_assert(offsetof(WBP_BoxPalList_Party_C_ExecuteUbergraph_WBP_BoxPalList_Party, K2Node_ComponentBoundEvent_Widget) == 0x000040, "Member 'WBP_BoxPalList_Party_C_ExecuteUbergraph_WBP_BoxPalList_Party::K2Node_ComponentBoundEvent_Widget' has a wrong offset!");
static_assert(offsetof(WBP_BoxPalList_Party_C_ExecuteUbergraph_WBP_BoxPalList_Party, K2Node_ComponentBoundEvent_NowPage) == 0x000048, "Member 'WBP_BoxPalList_Party_C_ExecuteUbergraph_WBP_BoxPalList_Party::K2Node_ComponentBoundEvent_NowPage' has a wrong offset!");
static_assert(offsetof(WBP_BoxPalList_Party_C_ExecuteUbergraph_WBP_BoxPalList_Party, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x00004C, "Member 'WBP_BoxPalList_Party_C_ExecuteUbergraph_WBP_BoxPalList_Party::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");

// Function WBP_BoxPalList_Party.WBP_BoxPalList_Party_C.GetFirstFocusPartyButton
// 0x0008 (0x0008 - 0x0000)
struct WBP_BoxPalList_Party_C_GetFirstFocusPartyButton final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BoxPalList_Party_C_GetFirstFocusPartyButton) == 0x000008, "Wrong alignment on WBP_BoxPalList_Party_C_GetFirstFocusPartyButton");
static_assert(sizeof(WBP_BoxPalList_Party_C_GetFirstFocusPartyButton) == 0x000008, "Wrong size on WBP_BoxPalList_Party_C_GetFirstFocusPartyButton");
static_assert(offsetof(WBP_BoxPalList_Party_C_GetFirstFocusPartyButton, Widget) == 0x000000, "Member 'WBP_BoxPalList_Party_C_GetFirstFocusPartyButton::Widget' has a wrong offset!");

// Function WBP_BoxPalList_Party.WBP_BoxPalList_Party_C.GetPartySlots
// 0x0010 (0x0010 - 0x0000)
struct WBP_BoxPalList_Party_C_GetPartySlots final
{
public:
	TArray<class UWBP_PalCommonCharacterSlotButton_C*> Param_PartySlots;                                  // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_BoxPalList_Party_C_GetPartySlots) == 0x000008, "Wrong alignment on WBP_BoxPalList_Party_C_GetPartySlots");
static_assert(sizeof(WBP_BoxPalList_Party_C_GetPartySlots) == 0x000010, "Wrong size on WBP_BoxPalList_Party_C_GetPartySlots");
static_assert(offsetof(WBP_BoxPalList_Party_C_GetPartySlots, Param_PartySlots) == 0x000000, "Member 'WBP_BoxPalList_Party_C_GetPartySlots::Param_PartySlots' has a wrong offset!");

// Function WBP_BoxPalList_Party.WBP_BoxPalList_Party_C.OnCreatedNewSlot__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_BoxPalList_Party_C_OnCreatedNewSlot__DelegateSignature final
{
public:
	class UWBP_PalCharacterSlotButtonBase_C*      Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BoxPalList_Party_C_OnCreatedNewSlot__DelegateSignature) == 0x000008, "Wrong alignment on WBP_BoxPalList_Party_C_OnCreatedNewSlot__DelegateSignature");
static_assert(sizeof(WBP_BoxPalList_Party_C_OnCreatedNewSlot__DelegateSignature) == 0x000008, "Wrong size on WBP_BoxPalList_Party_C_OnCreatedNewSlot__DelegateSignature");
static_assert(offsetof(WBP_BoxPalList_Party_C_OnCreatedNewSlot__DelegateSignature, Param_Slot) == 0x000000, "Member 'WBP_BoxPalList_Party_C_OnCreatedNewSlot__DelegateSignature::Param_Slot' has a wrong offset!");

// Function WBP_BoxPalList_Party.WBP_BoxPalList_Party_C.OnHoverSlot__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_BoxPalList_Party_C_OnHoverSlot__DelegateSignature final
{
public:
	class UWBP_PalCharacterSlotButtonBase_C*      Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BoxPalList_Party_C_OnHoverSlot__DelegateSignature) == 0x000008, "Wrong alignment on WBP_BoxPalList_Party_C_OnHoverSlot__DelegateSignature");
static_assert(sizeof(WBP_BoxPalList_Party_C_OnHoverSlot__DelegateSignature) == 0x000008, "Wrong size on WBP_BoxPalList_Party_C_OnHoverSlot__DelegateSignature");
static_assert(offsetof(WBP_BoxPalList_Party_C_OnHoverSlot__DelegateSignature, Param_Slot) == 0x000000, "Member 'WBP_BoxPalList_Party_C_OnHoverSlot__DelegateSignature::Param_Slot' has a wrong offset!");

// Function WBP_BoxPalList_Party.WBP_BoxPalList_Party_C.OnLeftClickedSlot__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_BoxPalList_Party_C_OnLeftClickedSlot__DelegateSignature final
{
public:
	class UWBP_PalCharacterSlotButtonBase_C*      Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EPalItemSlotPressType                         PressType;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BoxPalList_Party_C_OnLeftClickedSlot__DelegateSignature) == 0x000008, "Wrong alignment on WBP_BoxPalList_Party_C_OnLeftClickedSlot__DelegateSignature");
static_assert(sizeof(WBP_BoxPalList_Party_C_OnLeftClickedSlot__DelegateSignature) == 0x000010, "Wrong size on WBP_BoxPalList_Party_C_OnLeftClickedSlot__DelegateSignature");
static_assert(offsetof(WBP_BoxPalList_Party_C_OnLeftClickedSlot__DelegateSignature, Param_Slot) == 0x000000, "Member 'WBP_BoxPalList_Party_C_OnLeftClickedSlot__DelegateSignature::Param_Slot' has a wrong offset!");
static_assert(offsetof(WBP_BoxPalList_Party_C_OnLeftClickedSlot__DelegateSignature, PressType) == 0x000008, "Member 'WBP_BoxPalList_Party_C_OnLeftClickedSlot__DelegateSignature::PressType' has a wrong offset!");

// Function WBP_BoxPalList_Party.WBP_BoxPalList_Party_C.OnPageUpdated__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_BoxPalList_Party_C_OnPageUpdated__DelegateSignature final
{
public:
	int32                                         Page;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BoxPalList_Party_C_OnPageUpdated__DelegateSignature) == 0x000004, "Wrong alignment on WBP_BoxPalList_Party_C_OnPageUpdated__DelegateSignature");
static_assert(sizeof(WBP_BoxPalList_Party_C_OnPageUpdated__DelegateSignature) == 0x000004, "Wrong size on WBP_BoxPalList_Party_C_OnPageUpdated__DelegateSignature");
static_assert(offsetof(WBP_BoxPalList_Party_C_OnPageUpdated__DelegateSignature, Page) == 0x000000, "Member 'WBP_BoxPalList_Party_C_OnPageUpdated__DelegateSignature::Page' has a wrong offset!");

// Function WBP_BoxPalList_Party.WBP_BoxPalList_Party_C.OnRightClickedSlot__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_BoxPalList_Party_C_OnRightClickedSlot__DelegateSignature final
{
public:
	class UWBP_PalCharacterSlotButtonBase_C*      Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BoxPalList_Party_C_OnRightClickedSlot__DelegateSignature) == 0x000008, "Wrong alignment on WBP_BoxPalList_Party_C_OnRightClickedSlot__DelegateSignature");
static_assert(sizeof(WBP_BoxPalList_Party_C_OnRightClickedSlot__DelegateSignature) == 0x000008, "Wrong size on WBP_BoxPalList_Party_C_OnRightClickedSlot__DelegateSignature");
static_assert(offsetof(WBP_BoxPalList_Party_C_OnRightClickedSlot__DelegateSignature, Param_Slot) == 0x000000, "Member 'WBP_BoxPalList_Party_C_OnRightClickedSlot__DelegateSignature::Param_Slot' has a wrong offset!");

// Function WBP_BoxPalList_Party.WBP_BoxPalList_Party_C.OnUnhoverSlot__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_BoxPalList_Party_C_OnUnhoverSlot__DelegateSignature final
{
public:
	class UWBP_PalCharacterSlotButtonBase_C*      Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BoxPalList_Party_C_OnUnhoverSlot__DelegateSignature) == 0x000008, "Wrong alignment on WBP_BoxPalList_Party_C_OnUnhoverSlot__DelegateSignature");
static_assert(sizeof(WBP_BoxPalList_Party_C_OnUnhoverSlot__DelegateSignature) == 0x000008, "Wrong size on WBP_BoxPalList_Party_C_OnUnhoverSlot__DelegateSignature");
static_assert(offsetof(WBP_BoxPalList_Party_C_OnUnhoverSlot__DelegateSignature, Param_Slot) == 0x000000, "Member 'WBP_BoxPalList_Party_C_OnUnhoverSlot__DelegateSignature::Param_Slot' has a wrong offset!");

// Function WBP_BoxPalList_Party.WBP_BoxPalList_Party_C.SelectSlot
// 0x0010 (0x0010 - 0x0000)
struct WBP_BoxPalList_Party_C_SelectSlot final
{
public:
	class UPalIndividualCharacterSlot*            Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPalItemSlotPressType                         PressType;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BoxPalList_Party_C_SelectSlot) == 0x000008, "Wrong alignment on WBP_BoxPalList_Party_C_SelectSlot");
static_assert(sizeof(WBP_BoxPalList_Party_C_SelectSlot) == 0x000010, "Wrong size on WBP_BoxPalList_Party_C_SelectSlot");
static_assert(offsetof(WBP_BoxPalList_Party_C_SelectSlot, Param_Slot) == 0x000000, "Member 'WBP_BoxPalList_Party_C_SelectSlot::Param_Slot' has a wrong offset!");
static_assert(offsetof(WBP_BoxPalList_Party_C_SelectSlot, PressType) == 0x000008, "Member 'WBP_BoxPalList_Party_C_SelectSlot::PressType' has a wrong offset!");

// Function WBP_BoxPalList_Party.WBP_BoxPalList_Party_C.TryMoveToBox
// 0x0008 (0x0008 - 0x0000)
struct WBP_BoxPalList_Party_C_TryMoveToBox final
{
public:
	class UPalIndividualCharacterSlot*            Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BoxPalList_Party_C_TryMoveToBox) == 0x000008, "Wrong alignment on WBP_BoxPalList_Party_C_TryMoveToBox");
static_assert(sizeof(WBP_BoxPalList_Party_C_TryMoveToBox) == 0x000008, "Wrong size on WBP_BoxPalList_Party_C_TryMoveToBox");
static_assert(offsetof(WBP_BoxPalList_Party_C_TryMoveToBox, Param_Slot) == 0x000000, "Member 'WBP_BoxPalList_Party_C_TryMoveToBox::Param_Slot' has a wrong offset!");

}

