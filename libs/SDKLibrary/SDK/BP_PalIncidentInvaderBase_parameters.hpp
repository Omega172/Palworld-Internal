#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PalIncidentInvaderBase

#include "Basic.hpp"

#include "Pal_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_PalIncidentInvaderBase.BP_PalIncidentInvaderBase_C.CalcSpawnLocation
// 0x0068 (0x0068 - 0x0000)
struct BP_PalIncidentInvaderBase_C_CalcSpawnLocation final
{
public:
	struct FVector                                SpawnCenter;                                       // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rot;                                               // 0x0018(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	int32                                         Param_Index;                                       // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A51[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ReturnValue;                                       // 0x0038(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomTransform_RandomPos;                // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentInvaderBase_C_CalcSpawnLocation) == 0x000008, "Wrong alignment on BP_PalIncidentInvaderBase_C_CalcSpawnLocation");
static_assert(sizeof(BP_PalIncidentInvaderBase_C_CalcSpawnLocation) == 0x000068, "Wrong size on BP_PalIncidentInvaderBase_C_CalcSpawnLocation");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_CalcSpawnLocation, SpawnCenter) == 0x000000, "Member 'BP_PalIncidentInvaderBase_C_CalcSpawnLocation::SpawnCenter' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_CalcSpawnLocation, Rot) == 0x000018, "Member 'BP_PalIncidentInvaderBase_C_CalcSpawnLocation::Rot' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_CalcSpawnLocation, Param_Index) == 0x000030, "Member 'BP_PalIncidentInvaderBase_C_CalcSpawnLocation::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_CalcSpawnLocation, ReturnValue) == 0x000038, "Member 'BP_PalIncidentInvaderBase_C_CalcSpawnLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_CalcSpawnLocation, CallFunc_RandomTransform_RandomPos) == 0x000050, "Member 'BP_PalIncidentInvaderBase_C_CalcSpawnLocation::CallFunc_RandomTransform_RandomPos' has a wrong offset!");

// Function BP_PalIncidentInvaderBase.BP_PalIncidentInvaderBase_C.DummyActorSetLoaction
// 0x0200 (0x0200 - 0x0000)
struct BP_PalIncidentInvaderBase_C_DummyActorSetLoaction final
{
public:
	struct FVector                                CallFunc_GetTargetBaseCampPosition_Location;       // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A52[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0020(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A53[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult_1;     // 0x0110(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue_1;        // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentInvaderBase_C_DummyActorSetLoaction) == 0x000008, "Wrong alignment on BP_PalIncidentInvaderBase_C_DummyActorSetLoaction");
static_assert(sizeof(BP_PalIncidentInvaderBase_C_DummyActorSetLoaction) == 0x000200, "Wrong size on BP_PalIncidentInvaderBase_C_DummyActorSetLoaction");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_DummyActorSetLoaction, CallFunc_GetTargetBaseCampPosition_Location) == 0x000000, "Member 'BP_PalIncidentInvaderBase_C_DummyActorSetLoaction::CallFunc_GetTargetBaseCampPosition_Location' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_DummyActorSetLoaction, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_PalIncidentInvaderBase_C_DummyActorSetLoaction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_DummyActorSetLoaction, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_PalIncidentInvaderBase_C_DummyActorSetLoaction::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_DummyActorSetLoaction, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000020, "Member 'BP_PalIncidentInvaderBase_C_DummyActorSetLoaction::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_DummyActorSetLoaction, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000108, "Member 'BP_PalIncidentInvaderBase_C_DummyActorSetLoaction::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_DummyActorSetLoaction, CallFunc_K2_SetActorLocation_SweepHitResult_1) == 0x000110, "Member 'BP_PalIncidentInvaderBase_C_DummyActorSetLoaction::CallFunc_K2_SetActorLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_DummyActorSetLoaction, CallFunc_K2_SetActorLocation_ReturnValue_1) == 0x0001F8, "Member 'BP_PalIncidentInvaderBase_C_DummyActorSetLoaction::CallFunc_K2_SetActorLocation_ReturnValue_1' has a wrong offset!");

// Function BP_PalIncidentInvaderBase.BP_PalIncidentInvaderBase_C.ExecuteUbergraph_BP_PalIncidentInvaderBase
// 0x0018 (0x0018 - 0x0000)
struct BP_PalIncidentInvaderBase_C_ExecuteUbergraph_BP_PalIncidentInvaderBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A54[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DummyNavigationInvoker_C*           CallFunc_SpawnDummyNavInvoker_DummyNav;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_DummyNavigationInvoker_C*           CallFunc_SpawnDummyNavInvoker_DummyNav_1;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentInvaderBase_C_ExecuteUbergraph_BP_PalIncidentInvaderBase) == 0x000008, "Wrong alignment on BP_PalIncidentInvaderBase_C_ExecuteUbergraph_BP_PalIncidentInvaderBase");
static_assert(sizeof(BP_PalIncidentInvaderBase_C_ExecuteUbergraph_BP_PalIncidentInvaderBase) == 0x000018, "Wrong size on BP_PalIncidentInvaderBase_C_ExecuteUbergraph_BP_PalIncidentInvaderBase");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_ExecuteUbergraph_BP_PalIncidentInvaderBase, EntryPoint) == 0x000000, "Member 'BP_PalIncidentInvaderBase_C_ExecuteUbergraph_BP_PalIncidentInvaderBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_ExecuteUbergraph_BP_PalIncidentInvaderBase, CallFunc_SpawnDummyNavInvoker_DummyNav) == 0x000008, "Member 'BP_PalIncidentInvaderBase_C_ExecuteUbergraph_BP_PalIncidentInvaderBase::CallFunc_SpawnDummyNavInvoker_DummyNav' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_ExecuteUbergraph_BP_PalIncidentInvaderBase, CallFunc_SpawnDummyNavInvoker_DummyNav_1) == 0x000010, "Member 'BP_PalIncidentInvaderBase_C_ExecuteUbergraph_BP_PalIncidentInvaderBase::CallFunc_SpawnDummyNavInvoker_DummyNav_1' has a wrong offset!");

// Function BP_PalIncidentInvaderBase.BP_PalIncidentInvaderBase_C.FindIndividualHandle
// 0x0090 (0x0090 - 0x0000)
struct BP_PalIncidentInvaderBase_C_FindIndividualHandle final
{
public:
	struct FPalInstanceID                         ID;                                                // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UPalIndividualCharacterHandle*          Handle;                                            // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalIndividualCharacterHandle*          CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A55[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalInstanceID                         CallFunc_GetIndividualID_ReturnValue;              // 0x0058(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_PalInstanceIDPalInstanceID_ReturnValue; // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentInvaderBase_C_FindIndividualHandle) == 0x000008, "Wrong alignment on BP_PalIncidentInvaderBase_C_FindIndividualHandle");
static_assert(sizeof(BP_PalIncidentInvaderBase_C_FindIndividualHandle) == 0x000090, "Wrong size on BP_PalIncidentInvaderBase_C_FindIndividualHandle");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_FindIndividualHandle, ID) == 0x000000, "Member 'BP_PalIncidentInvaderBase_C_FindIndividualHandle::ID' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_FindIndividualHandle, Handle) == 0x000030, "Member 'BP_PalIncidentInvaderBase_C_FindIndividualHandle::Handle' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_FindIndividualHandle, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_PalIncidentInvaderBase_C_FindIndividualHandle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_FindIndividualHandle, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_PalIncidentInvaderBase_C_FindIndividualHandle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_FindIndividualHandle, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_PalIncidentInvaderBase_C_FindIndividualHandle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_FindIndividualHandle, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_PalIncidentInvaderBase_C_FindIndividualHandle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_FindIndividualHandle, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_PalIncidentInvaderBase_C_FindIndividualHandle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_FindIndividualHandle, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_PalIncidentInvaderBase_C_FindIndividualHandle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_FindIndividualHandle, CallFunc_GetIndividualID_ReturnValue) == 0x000058, "Member 'BP_PalIncidentInvaderBase_C_FindIndividualHandle::CallFunc_GetIndividualID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_FindIndividualHandle, CallFunc_EqualEqual_PalInstanceIDPalInstanceID_ReturnValue) == 0x000088, "Member 'BP_PalIncidentInvaderBase_C_FindIndividualHandle::CallFunc_EqualEqual_PalInstanceIDPalInstanceID_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentInvaderBase.BP_PalIncidentInvaderBase_C.Get Character Location Type
// 0x0001 (0x0001 - 0x0000)
struct BP_PalIncidentInvaderBase_C_Get_Character_Location_Type final
{
public:
	EPalCharacterLocationType                     CharacterLocationType;                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentInvaderBase_C_Get_Character_Location_Type) == 0x000001, "Wrong alignment on BP_PalIncidentInvaderBase_C_Get_Character_Location_Type");
static_assert(sizeof(BP_PalIncidentInvaderBase_C_Get_Character_Location_Type) == 0x000001, "Wrong size on BP_PalIncidentInvaderBase_C_Get_Character_Location_Type");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_Get_Character_Location_Type, CharacterLocationType) == 0x000000, "Member 'BP_PalIncidentInvaderBase_C_Get_Character_Location_Type::CharacterLocationType' has a wrong offset!");

// Function BP_PalIncidentInvaderBase.BP_PalIncidentInvaderBase_C.GetIndividualHandleIndex
// 0x0010 (0x0010 - 0x0000)
struct BP_PalIncidentInvaderBase_C_GetIndividualHandleIndex final
{
public:
	class UPalIndividualCharacterHandle*          IndividualHandle;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentInvaderBase_C_GetIndividualHandleIndex) == 0x000008, "Wrong alignment on BP_PalIncidentInvaderBase_C_GetIndividualHandleIndex");
static_assert(sizeof(BP_PalIncidentInvaderBase_C_GetIndividualHandleIndex) == 0x000010, "Wrong size on BP_PalIncidentInvaderBase_C_GetIndividualHandleIndex");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetIndividualHandleIndex, IndividualHandle) == 0x000000, "Member 'BP_PalIncidentInvaderBase_C_GetIndividualHandleIndex::IndividualHandle' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetIndividualHandleIndex, Param_Index) == 0x000008, "Member 'BP_PalIncidentInvaderBase_C_GetIndividualHandleIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetIndividualHandleIndex, CallFunc_Array_Find_ReturnValue) == 0x00000C, "Member 'BP_PalIncidentInvaderBase_C_GetIndividualHandleIndex::CallFunc_Array_Find_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentInvaderBase.BP_PalIncidentInvaderBase_C.GetStartLocation
// 0x0018 (0x0018 - 0x0000)
struct BP_PalIncidentInvaderBase_C_GetStartLocation final
{
public:
	struct FVector                                StartLocation;                                     // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentInvaderBase_C_GetStartLocation) == 0x000008, "Wrong alignment on BP_PalIncidentInvaderBase_C_GetStartLocation");
static_assert(sizeof(BP_PalIncidentInvaderBase_C_GetStartLocation) == 0x000018, "Wrong size on BP_PalIncidentInvaderBase_C_GetStartLocation");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetStartLocation, StartLocation) == 0x000000, "Member 'BP_PalIncidentInvaderBase_C_GetStartLocation::StartLocation' has a wrong offset!");

// Function BP_PalIncidentInvaderBase.BP_PalIncidentInvaderBase_C.GetTargetBaseCampPosition
// 0x0300 (0x0300 - 0x0000)
struct BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0018(0x0010)(ConstParm, ReferenceParm)
	class UPalBaseCampModel*                      CallFunc_GetTargetCampModel_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A56[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0138(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A57[0x1];                                     // 0x0223(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A58[0x4];                                     // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x02A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A59[0x4];                                     // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition) == 0x000010, "Wrong alignment on BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition");
static_assert(sizeof(BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition) == 0x000300, "Wrong size on BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition, Location) == 0x000000, "Member 'BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition::Location' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition, Temp_object_Variable) == 0x000018, "Member 'BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition, CallFunc_GetTargetCampModel_ReturnValue) == 0x000028, "Member 'BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition::CallFunc_GetTargetCampModel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition, CallFunc_BreakTransform_Location) == 0x000098, "Member 'BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition, CallFunc_BreakTransform_Rotation) == 0x0000B0, "Member 'BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition, CallFunc_BreakTransform_Scale) == 0x0000C8, "Member 'BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition, CallFunc_BreakVector_X) == 0x0000E0, "Member 'BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition, CallFunc_BreakVector_Y) == 0x0000E8, "Member 'BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition, CallFunc_BreakVector_Z) == 0x0000F0, "Member 'BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000F8, "Member 'BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000100, "Member 'BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition, CallFunc_MakeVector_ReturnValue) == 0x000108, "Member 'BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition, CallFunc_MakeVector_ReturnValue_1) == 0x000120, "Member 'BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition, CallFunc_LineTraceSingle_OutHit) == 0x000138, "Member 'BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition, CallFunc_LineTraceSingle_ReturnValue) == 0x000220, "Member 'BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition, CallFunc_BreakHitResult_bBlockingHit) == 0x000221, "Member 'BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition, CallFunc_BreakHitResult_bInitialOverlap) == 0x000222, "Member 'BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition, CallFunc_BreakHitResult_Time) == 0x000224, "Member 'BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition, CallFunc_BreakHitResult_Distance) == 0x000228, "Member 'BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition, CallFunc_BreakHitResult_Location) == 0x000230, "Member 'BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition, CallFunc_BreakHitResult_ImpactPoint) == 0x000248, "Member 'BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition, CallFunc_BreakHitResult_Normal) == 0x000260, "Member 'BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition, CallFunc_BreakHitResult_ImpactNormal) == 0x000278, "Member 'BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition, CallFunc_BreakHitResult_PhysMat) == 0x000290, "Member 'BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition, CallFunc_BreakHitResult_HitActor) == 0x000298, "Member 'BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition, CallFunc_BreakHitResult_HitComponent) == 0x0002A0, "Member 'BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition, CallFunc_BreakHitResult_HitBoneName) == 0x0002A8, "Member 'BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition, CallFunc_BreakHitResult_BoneName) == 0x0002B0, "Member 'BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition, CallFunc_BreakHitResult_HitItem) == 0x0002B8, "Member 'BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition, CallFunc_BreakHitResult_ElementIndex) == 0x0002BC, "Member 'BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition, CallFunc_BreakHitResult_FaceIndex) == 0x0002C0, "Member 'BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition, CallFunc_BreakHitResult_TraceStart) == 0x0002C8, "Member 'BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition, CallFunc_BreakHitResult_TraceEnd) == 0x0002E0, "Member 'BP_PalIncidentInvaderBase_C_GetTargetBaseCampPosition::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function BP_PalIncidentInvaderBase.BP_PalIncidentInvaderBase_C.GoalPointPerAgent
// 0x0360 (0x0360 - 0x0000)
struct BP_PalIncidentInvaderBase_C_GoalPointPerAgent final
{
public:
	int32                                         SpawnedIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A5A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                GoalPosition;                                      // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempPos;                                           // 0x0020(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Sign;                                              // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SideInterval;                                      // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RightVector;                                       // 0x0048(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0060(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetBaseCampPosition_Location;       // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00B8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A5B[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetTargetBaseCampPosition_Location_1;     // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A5C[0x2];                                     // 0x01C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A5D[0x4];                                     // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0240(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A5E[0x4];                                     // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A5F[0x3];                                     // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x02B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x02D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A60[0x4];                                     // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Vector_Normal2D_ReturnValue;              // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0340(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent) == 0x000008, "Wrong alignment on BP_PalIncidentInvaderBase_C_GoalPointPerAgent");
static_assert(sizeof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent) == 0x000360, "Wrong size on BP_PalIncidentInvaderBase_C_GoalPointPerAgent");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, SpawnedIndex) == 0x000000, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::SpawnedIndex' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, GoalPosition) == 0x000008, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::GoalPosition' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, TempPos) == 0x000020, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::TempPos' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, Sign) == 0x000038, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::Sign' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, SideInterval) == 0x000040, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::SideInterval' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, RightVector) == 0x000048, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::RightVector' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, Temp_object_Variable) == 0x000060, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_Add_VectorVector_ReturnValue) == 0x000070, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000088, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_GetTargetBaseCampPosition_Location) == 0x0000A0, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_GetTargetBaseCampPosition_Location' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_LineTraceSingle_OutHit) == 0x0000B8, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_LineTraceSingle_ReturnValue) == 0x0001A0, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_GetTargetBaseCampPosition_Location_1) == 0x0001A8, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_GetTargetBaseCampPosition_Location_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_BreakHitResult_bBlockingHit) == 0x0001C0, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001C1, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_BreakHitResult_Time) == 0x0001C4, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_BreakHitResult_Distance) == 0x0001C8, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_BreakHitResult_Location) == 0x0001D0, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_BreakHitResult_ImpactPoint) == 0x0001E8, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_BreakHitResult_Normal) == 0x000200, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_BreakHitResult_ImpactNormal) == 0x000218, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_BreakHitResult_PhysMat) == 0x000230, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_BreakHitResult_HitActor) == 0x000238, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_BreakHitResult_HitComponent) == 0x000240, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_BreakHitResult_HitBoneName) == 0x000248, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_BreakHitResult_BoneName) == 0x000250, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_BreakHitResult_HitItem) == 0x000258, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_BreakHitResult_ElementIndex) == 0x00025C, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_BreakHitResult_FaceIndex) == 0x000260, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_BreakHitResult_TraceStart) == 0x000268, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_BreakHitResult_TraceEnd) == 0x000280, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_Add_IntInt_ReturnValue) == 0x000298, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_Percent_IntInt_ReturnValue) == 0x00029C, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_Divide_IntInt_ReturnValue) == 0x0002A0, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0002A4, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0002A8, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0002B0, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_GetUpVector_ReturnValue) == 0x0002B8, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0002D0, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0002E8, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_Vector_Normal2D_ReturnValue) == 0x0002F0, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_Vector_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000308, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_Cross_VectorVector_ReturnValue) == 0x000310, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000328, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000340, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GoalPointPerAgent, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000358, "Member 'BP_PalIncidentInvaderBase_C_GoalPointPerAgent::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_PalIncidentInvaderBase.BP_PalIncidentInvaderBase_C.IsSquad
// 0x0001 (0x0001 - 0x0000)
struct BP_PalIncidentInvaderBase_C_IsSquad final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentInvaderBase_C_IsSquad) == 0x000001, "Wrong alignment on BP_PalIncidentInvaderBase_C_IsSquad");
static_assert(sizeof(BP_PalIncidentInvaderBase_C_IsSquad) == 0x000001, "Wrong size on BP_PalIncidentInvaderBase_C_IsSquad");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_IsSquad, Result) == 0x000000, "Member 'BP_PalIncidentInvaderBase_C_IsSquad::Result' has a wrong offset!");

// Function BP_PalIncidentInvaderBase.BP_PalIncidentInvaderBase_C.IsUniqueNPCID
// 0x0028 (0x0028 - 0x0000)
struct BP_PalIncidentInvaderBase_C_IsUniqueNPCID final
{
public:
	class FName                                   CharacterID;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUnique;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A61[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalNPCManager*                         CallFunc_GetNPCManager_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetCharacterIDFromUniqueNPCID_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentInvaderBase_C_IsUniqueNPCID) == 0x000008, "Wrong alignment on BP_PalIncidentInvaderBase_C_IsUniqueNPCID");
static_assert(sizeof(BP_PalIncidentInvaderBase_C_IsUniqueNPCID) == 0x000028, "Wrong size on BP_PalIncidentInvaderBase_C_IsUniqueNPCID");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_IsUniqueNPCID, CharacterID) == 0x000000, "Member 'BP_PalIncidentInvaderBase_C_IsUniqueNPCID::CharacterID' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_IsUniqueNPCID, IsUnique) == 0x000008, "Member 'BP_PalIncidentInvaderBase_C_IsUniqueNPCID::IsUnique' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_IsUniqueNPCID, CallFunc_GetNPCManager_ReturnValue) == 0x000010, "Member 'BP_PalIncidentInvaderBase_C_IsUniqueNPCID::CallFunc_GetNPCManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_IsUniqueNPCID, CallFunc_GetCharacterIDFromUniqueNPCID_ReturnValue) == 0x000018, "Member 'BP_PalIncidentInvaderBase_C_IsUniqueNPCID::CallFunc_GetCharacterIDFromUniqueNPCID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_IsUniqueNPCID, CallFunc_NotEqual_NameName_ReturnValue) == 0x000020, "Member 'BP_PalIncidentInvaderBase_C_IsUniqueNPCID::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentInvaderBase.BP_PalIncidentInvaderBase_C.OnAllCharacterSpawned
// 0x0010 (0x0010 - 0x0000)
struct BP_PalIncidentInvaderBase_C_OnAllCharacterSpawned final
{
public:
	TArray<class APalAIController*>               Param_MemberController;                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_PalIncidentInvaderBase_C_OnAllCharacterSpawned) == 0x000008, "Wrong alignment on BP_PalIncidentInvaderBase_C_OnAllCharacterSpawned");
static_assert(sizeof(BP_PalIncidentInvaderBase_C_OnAllCharacterSpawned) == 0x000010, "Wrong size on BP_PalIncidentInvaderBase_C_OnAllCharacterSpawned");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_OnAllCharacterSpawned, Param_MemberController) == 0x000000, "Member 'BP_PalIncidentInvaderBase_C_OnAllCharacterSpawned::Param_MemberController' has a wrong offset!");

// Function BP_PalIncidentInvaderBase.BP_PalIncidentInvaderBase_C.OnCharacterSpawned
// 0x0050 (0x0050 - 0x0000)
struct BP_PalIncidentInvaderBase_C_OnCharacterSpawned final
{
public:
	class APalCharacter*                          SpawnedCharacter;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   OtomoName;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalAIController*                       K2Node_DynamicCast_AsPal_AIController;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A62[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NPCAIController_C*                  K2Node_DynamicCast_AsBP_NPCAIController;           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A63[0x1];                                     // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSquad_Result;                           // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentInvaderBase_C_OnCharacterSpawned) == 0x000008, "Wrong alignment on BP_PalIncidentInvaderBase_C_OnCharacterSpawned");
static_assert(sizeof(BP_PalIncidentInvaderBase_C_OnCharacterSpawned) == 0x000050, "Wrong size on BP_PalIncidentInvaderBase_C_OnCharacterSpawned");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_OnCharacterSpawned, SpawnedCharacter) == 0x000000, "Member 'BP_PalIncidentInvaderBase_C_OnCharacterSpawned::SpawnedCharacter' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_OnCharacterSpawned, OtomoName) == 0x000008, "Member 'BP_PalIncidentInvaderBase_C_OnCharacterSpawned::OtomoName' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_OnCharacterSpawned, Temp_name_Variable) == 0x000010, "Member 'BP_PalIncidentInvaderBase_C_OnCharacterSpawned::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_OnCharacterSpawned, CallFunc_GetController_ReturnValue) == 0x000018, "Member 'BP_PalIncidentInvaderBase_C_OnCharacterSpawned::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_OnCharacterSpawned, K2Node_DynamicCast_AsPal_AIController) == 0x000020, "Member 'BP_PalIncidentInvaderBase_C_OnCharacterSpawned::K2Node_DynamicCast_AsPal_AIController' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_OnCharacterSpawned, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_PalIncidentInvaderBase_C_OnCharacterSpawned::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_OnCharacterSpawned, K2Node_DynamicCast_AsBP_NPCAIController) == 0x000030, "Member 'BP_PalIncidentInvaderBase_C_OnCharacterSpawned::K2Node_DynamicCast_AsBP_NPCAIController' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_OnCharacterSpawned, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_PalIncidentInvaderBase_C_OnCharacterSpawned::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_OnCharacterSpawned, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000039, "Member 'BP_PalIncidentInvaderBase_C_OnCharacterSpawned::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_OnCharacterSpawned, Temp_bool_Variable) == 0x00003A, "Member 'BP_PalIncidentInvaderBase_C_OnCharacterSpawned::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_OnCharacterSpawned, CallFunc_Array_Get_Item) == 0x00003C, "Member 'BP_PalIncidentInvaderBase_C_OnCharacterSpawned::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_OnCharacterSpawned, K2Node_Select_Default) == 0x000044, "Member 'BP_PalIncidentInvaderBase_C_OnCharacterSpawned::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_OnCharacterSpawned, CallFunc_IsSquad_Result) == 0x00004C, "Member 'BP_PalIncidentInvaderBase_C_OnCharacterSpawned::CallFunc_IsSquad_Result' has a wrong offset!");

// Function BP_PalIncidentInvaderBase.BP_PalIncidentInvaderBase_C.OnDespawnOtomoByTerminate
// 0x0030 (0x0030 - 0x0000)
struct BP_PalIncidentInvaderBase_C_OnDespawnOtomoByTerminate final
{
public:
	struct FPalInstanceID                         ID;                                                // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentInvaderBase_C_OnDespawnOtomoByTerminate) == 0x000008, "Wrong alignment on BP_PalIncidentInvaderBase_C_OnDespawnOtomoByTerminate");
static_assert(sizeof(BP_PalIncidentInvaderBase_C_OnDespawnOtomoByTerminate) == 0x000030, "Wrong size on BP_PalIncidentInvaderBase_C_OnDespawnOtomoByTerminate");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_OnDespawnOtomoByTerminate, ID) == 0x000000, "Member 'BP_PalIncidentInvaderBase_C_OnDespawnOtomoByTerminate::ID' has a wrong offset!");

// Function BP_PalIncidentInvaderBase.BP_PalIncidentInvaderBase_C.OnDestroyActor
// 0x0018 (0x0018 - 0x0000)
struct BP_PalIncidentInvaderBase_C_OnDestroyActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          K2Node_DynamicCast_AsPal_Character;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentInvaderBase_C_OnDestroyActor) == 0x000008, "Wrong alignment on BP_PalIncidentInvaderBase_C_OnDestroyActor");
static_assert(sizeof(BP_PalIncidentInvaderBase_C_OnDestroyActor) == 0x000018, "Wrong size on BP_PalIncidentInvaderBase_C_OnDestroyActor");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_OnDestroyActor, Actor) == 0x000000, "Member 'BP_PalIncidentInvaderBase_C_OnDestroyActor::Actor' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_OnDestroyActor, K2Node_DynamicCast_AsPal_Character) == 0x000008, "Member 'BP_PalIncidentInvaderBase_C_OnDestroyActor::K2Node_DynamicCast_AsPal_Character' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_OnDestroyActor, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_PalIncidentInvaderBase_C_OnDestroyActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_PalIncidentInvaderBase.BP_PalIncidentInvaderBase_C.OnOtomoSpawned
// 0x0030 (0x0030 - 0x0000)
struct BP_PalIncidentInvaderBase_C_OnOtomoSpawned final
{
public:
	class AController*                            HolderController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          OtomoPal;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalIndividualCharacterHandle*          CallFunc_GetIndividualCharacterHandleByActor_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentInvaderBase_C_OnOtomoSpawned) == 0x000008, "Wrong alignment on BP_PalIncidentInvaderBase_C_OnOtomoSpawned");
static_assert(sizeof(BP_PalIncidentInvaderBase_C_OnOtomoSpawned) == 0x000030, "Wrong size on BP_PalIncidentInvaderBase_C_OnOtomoSpawned");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_OnOtomoSpawned, HolderController) == 0x000000, "Member 'BP_PalIncidentInvaderBase_C_OnOtomoSpawned::HolderController' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_OnOtomoSpawned, OtomoPal) == 0x000008, "Member 'BP_PalIncidentInvaderBase_C_OnOtomoSpawned::OtomoPal' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_OnOtomoSpawned, CallFunc_GetIndividualCharacterHandleByActor_ReturnValue) == 0x000010, "Member 'BP_PalIncidentInvaderBase_C_OnOtomoSpawned::CallFunc_GetIndividualCharacterHandleByActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_OnOtomoSpawned, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'BP_PalIncidentInvaderBase_C_OnOtomoSpawned::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_OnOtomoSpawned, CallFunc_Array_Add_ReturnValue) == 0x000028, "Member 'BP_PalIncidentInvaderBase_C_OnOtomoSpawned::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentInvaderBase.BP_PalIncidentInvaderBase_C.RandomTransform
// 0x00D0 (0x00D0 - 0x0000)
struct BP_PalIncidentInvaderBase_C_RandomTransform final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A64[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RandomPos;                                         // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Radius;                                            // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Degree;                                            // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cos_ReturnValue;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sin_ReturnValue;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A65[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A66[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A67[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A68[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentInvaderBase_C_RandomTransform) == 0x000008, "Wrong alignment on BP_PalIncidentInvaderBase_C_RandomTransform");
static_assert(sizeof(BP_PalIncidentInvaderBase_C_RandomTransform) == 0x0000D0, "Wrong size on BP_PalIncidentInvaderBase_C_RandomTransform");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_RandomTransform, Param_Index) == 0x000000, "Member 'BP_PalIncidentInvaderBase_C_RandomTransform::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_RandomTransform, RandomPos) == 0x000008, "Member 'BP_PalIncidentInvaderBase_C_RandomTransform::RandomPos' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_RandomTransform, Radius) == 0x000020, "Member 'BP_PalIncidentInvaderBase_C_RandomTransform::Radius' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_RandomTransform, Degree) == 0x000028, "Member 'BP_PalIncidentInvaderBase_C_RandomTransform::Degree' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_RandomTransform, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000030, "Member 'BP_PalIncidentInvaderBase_C_RandomTransform::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_RandomTransform, CallFunc_Cos_ReturnValue) == 0x000048, "Member 'BP_PalIncidentInvaderBase_C_RandomTransform::CallFunc_Cos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_RandomTransform, CallFunc_Sin_ReturnValue) == 0x000050, "Member 'BP_PalIncidentInvaderBase_C_RandomTransform::CallFunc_Sin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_RandomTransform, CallFunc_Divide_IntInt_ReturnValue) == 0x000058, "Member 'BP_PalIncidentInvaderBase_C_RandomTransform::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_RandomTransform, CallFunc_MakeVector_ReturnValue) == 0x000060, "Member 'BP_PalIncidentInvaderBase_C_RandomTransform::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_RandomTransform, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'BP_PalIncidentInvaderBase_C_RandomTransform::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_RandomTransform, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000080, "Member 'BP_PalIncidentInvaderBase_C_RandomTransform::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_RandomTransform, CallFunc_Multiply_IntInt_ReturnValue) == 0x000098, "Member 'BP_PalIncidentInvaderBase_C_RandomTransform::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_RandomTransform, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0000A0, "Member 'BP_PalIncidentInvaderBase_C_RandomTransform::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_RandomTransform, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x0000A8, "Member 'BP_PalIncidentInvaderBase_C_RandomTransform::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_RandomTransform, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0000B0, "Member 'BP_PalIncidentInvaderBase_C_RandomTransform::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_RandomTransform, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B8, "Member 'BP_PalIncidentInvaderBase_C_RandomTransform::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentInvaderBase.BP_PalIncidentInvaderBase_C.RemoveHandleList
// 0x0010 (0x0010 - 0x0000)
struct BP_PalIncidentInvaderBase_C_RemoveHandleList final
{
public:
	class APalCharacter*                          Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         RemoveIndex;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentInvaderBase_C_RemoveHandleList) == 0x000008, "Wrong alignment on BP_PalIncidentInvaderBase_C_RemoveHandleList");
static_assert(sizeof(BP_PalIncidentInvaderBase_C_RemoveHandleList) == 0x000010, "Wrong size on BP_PalIncidentInvaderBase_C_RemoveHandleList");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_RemoveHandleList, Character) == 0x000000, "Member 'BP_PalIncidentInvaderBase_C_RemoveHandleList::Character' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_RemoveHandleList, RemoveIndex) == 0x000008, "Member 'BP_PalIncidentInvaderBase_C_RemoveHandleList::RemoveIndex' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_RemoveHandleList, CallFunc_Array_RemoveItem_ReturnValue) == 0x00000C, "Member 'BP_PalIncidentInvaderBase_C_RemoveHandleList::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentInvaderBase.BP_PalIncidentInvaderBase_C.SetNullHandleWhenDestoryOtomo
// 0x0018 (0x0018 - 0x0000)
struct BP_PalIncidentInvaderBase_C_SetNullHandleWhenDestoryOtomo final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalIndividualCharacterHandle*          CallFunc_GetIndividualCharacterHandleByActor_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentInvaderBase_C_SetNullHandleWhenDestoryOtomo) == 0x000008, "Wrong alignment on BP_PalIncidentInvaderBase_C_SetNullHandleWhenDestoryOtomo");
static_assert(sizeof(BP_PalIncidentInvaderBase_C_SetNullHandleWhenDestoryOtomo) == 0x000018, "Wrong size on BP_PalIncidentInvaderBase_C_SetNullHandleWhenDestoryOtomo");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SetNullHandleWhenDestoryOtomo, DestroyedActor) == 0x000000, "Member 'BP_PalIncidentInvaderBase_C_SetNullHandleWhenDestoryOtomo::DestroyedActor' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SetNullHandleWhenDestoryOtomo, CallFunc_GetIndividualCharacterHandleByActor_ReturnValue) == 0x000008, "Member 'BP_PalIncidentInvaderBase_C_SetNullHandleWhenDestoryOtomo::CallFunc_GetIndividualCharacterHandleByActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SetNullHandleWhenDestoryOtomo, CallFunc_Array_RemoveItem_ReturnValue) == 0x000010, "Member 'BP_PalIncidentInvaderBase_C_SetNullHandleWhenDestoryOtomo::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentInvaderBase.BP_PalIncidentInvaderBase_C.SpawnCharacter
// 0x0438 (0x0438 - 0x0000)
struct BP_PalIncidentInvaderBase_C_SpawnCharacter final
{
public:
	struct FPalInvaderSpawnCharacterParameter     SpawnParameter;                                    // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	int32                                         Param_Index;                                       // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A69[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               SpawnRot;                                          // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                 AIController;                                      // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FName                                   UniqueNPCID;                                       // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CharacterID;                                       // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class APalAIController>           CallFunc_GetNPCAIControllerClass_ReturnValue;      // 0x0050(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPalDatabaseCharacterParameter*         CallFunc_GetDatabaseCharacterParameter_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsPal_ReturnValue;                     // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A6A[0x6];                                     // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class APalAIController>           K2Node_Select_Default;                             // 0x0068(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsUniqueNPCID_IsUnique;                   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A6B[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CalcSpawnLocation_ReturnValue;            // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  K2Node_MakeStruct_Guid;                            // 0x0094(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FPalInstanceID& ID)> K2Node_CreateDelegate_OutputDelegate;              // 0x00A4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A6C[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalIndividualCharacterSaveParameter   CallFunc_GetInitializedCharacterSaveParemter_outParameter; // 0x00B8(0x02E0)()
	bool                                          CallFunc_GetInitializedCharacterSaveParemter_ReturnValue; // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A6D[0x7];                                     // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalCharacterManager*                   CallFunc_GetCharacterManager_ReturnValue;          // 0x03A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetLocalPlayerController_ReturnValue;     // 0x03A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FNetworkActorSpawnParameters           K2Node_MakeStruct_NetworkActorSpawnParameters;     // 0x03B0(0x0078)(NoDestructor)
	class UPalIndividualCharacterHandle*          CallFunc_SpawnNewCharacter_ReturnValue;            // 0x0428(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentInvaderBase_C_SpawnCharacter) == 0x000008, "Wrong alignment on BP_PalIncidentInvaderBase_C_SpawnCharacter");
static_assert(sizeof(BP_PalIncidentInvaderBase_C_SpawnCharacter) == 0x000438, "Wrong size on BP_PalIncidentInvaderBase_C_SpawnCharacter");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnCharacter, SpawnParameter) == 0x000000, "Member 'BP_PalIncidentInvaderBase_C_SpawnCharacter::SpawnParameter' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnCharacter, Param_Index) == 0x000018, "Member 'BP_PalIncidentInvaderBase_C_SpawnCharacter::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnCharacter, SpawnRot) == 0x000020, "Member 'BP_PalIncidentInvaderBase_C_SpawnCharacter::SpawnRot' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnCharacter, AIController) == 0x000038, "Member 'BP_PalIncidentInvaderBase_C_SpawnCharacter::AIController' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnCharacter, UniqueNPCID) == 0x000040, "Member 'BP_PalIncidentInvaderBase_C_SpawnCharacter::UniqueNPCID' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnCharacter, CharacterID) == 0x000048, "Member 'BP_PalIncidentInvaderBase_C_SpawnCharacter::CharacterID' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnCharacter, CallFunc_GetNPCAIControllerClass_ReturnValue) == 0x000050, "Member 'BP_PalIncidentInvaderBase_C_SpawnCharacter::CallFunc_GetNPCAIControllerClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnCharacter, CallFunc_GetDatabaseCharacterParameter_ReturnValue) == 0x000058, "Member 'BP_PalIncidentInvaderBase_C_SpawnCharacter::CallFunc_GetDatabaseCharacterParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnCharacter, Temp_bool_Variable) == 0x000060, "Member 'BP_PalIncidentInvaderBase_C_SpawnCharacter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnCharacter, CallFunc_GetIsPal_ReturnValue) == 0x000061, "Member 'BP_PalIncidentInvaderBase_C_SpawnCharacter::CallFunc_GetIsPal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnCharacter, K2Node_Select_Default) == 0x000068, "Member 'BP_PalIncidentInvaderBase_C_SpawnCharacter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnCharacter, CallFunc_IsUniqueNPCID_IsUnique) == 0x000070, "Member 'BP_PalIncidentInvaderBase_C_SpawnCharacter::CallFunc_IsUniqueNPCID_IsUnique' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnCharacter, CallFunc_CalcSpawnLocation_ReturnValue) == 0x000078, "Member 'BP_PalIncidentInvaderBase_C_SpawnCharacter::CallFunc_CalcSpawnLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnCharacter, CallFunc_Array_Add_ReturnValue) == 0x000090, "Member 'BP_PalIncidentInvaderBase_C_SpawnCharacter::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnCharacter, K2Node_MakeStruct_Guid) == 0x000094, "Member 'BP_PalIncidentInvaderBase_C_SpawnCharacter::K2Node_MakeStruct_Guid' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnCharacter, K2Node_CreateDelegate_OutputDelegate) == 0x0000A4, "Member 'BP_PalIncidentInvaderBase_C_SpawnCharacter::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnCharacter, CallFunc_GetInitializedCharacterSaveParemter_outParameter) == 0x0000B8, "Member 'BP_PalIncidentInvaderBase_C_SpawnCharacter::CallFunc_GetInitializedCharacterSaveParemter_outParameter' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnCharacter, CallFunc_GetInitializedCharacterSaveParemter_ReturnValue) == 0x000398, "Member 'BP_PalIncidentInvaderBase_C_SpawnCharacter::CallFunc_GetInitializedCharacterSaveParemter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnCharacter, CallFunc_GetCharacterManager_ReturnValue) == 0x0003A0, "Member 'BP_PalIncidentInvaderBase_C_SpawnCharacter::CallFunc_GetCharacterManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnCharacter, CallFunc_GetLocalPlayerController_ReturnValue) == 0x0003A8, "Member 'BP_PalIncidentInvaderBase_C_SpawnCharacter::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnCharacter, K2Node_MakeStruct_NetworkActorSpawnParameters) == 0x0003B0, "Member 'BP_PalIncidentInvaderBase_C_SpawnCharacter::K2Node_MakeStruct_NetworkActorSpawnParameters' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnCharacter, CallFunc_SpawnNewCharacter_ReturnValue) == 0x000428, "Member 'BP_PalIncidentInvaderBase_C_SpawnCharacter::CallFunc_SpawnNewCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnCharacter, CallFunc_Array_Add_ReturnValue_1) == 0x000430, "Member 'BP_PalIncidentInvaderBase_C_SpawnCharacter::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_PalIncidentInvaderBase.BP_PalIncidentInvaderBase_C.SpawnDelegate
// 0x0168 (0x0168 - 0x0000)
struct BP_PalIncidentInvaderBase_C_SpawnDelegate final
{
public:
	struct FPalInstanceID                         ID;                                                // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class APalCharacter*                          SpawnCaracter;                                     // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UPalIndividualCharacterHandle*          CallFunc_FindIndividualHandle_Handle;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A6E[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          CallFunc_TryGetIndividualActor_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A6F[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalNavigationInvokerComponent*         CallFunc_GetComponentByClass_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPalBaseCampModel*                      CallFunc_GetTargetCampModel_ReturnValue;           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetId_ReturnValue;                        // 0x0070(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalIndividualCharacterParameter*       CallFunc_GetIndividualCharacterParameterByActor_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_AIController_Interface_Invader_C> K2Node_DynamicCast_AsBP_AIController_Interface_Invader; // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A70[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00A4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AController* HolderController, class APalCharacter* OtomoPal)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00B4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A71[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalAIController*                       K2Node_DynamicCast_AsPal_AIController;             // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A72[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GetPalAIBlackboard_C> K2Node_DynamicCast_AsBPI_Get_Pal_AIBlackboard;     // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPalCharacterLocationType                     CallFunc_Get_Character_Location_Type_CharacterLocationType; // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A73[0x6];                                     // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PalAIBlackboard_Common_C*           CallFunc_GetMyBB_PalBrackboard;                    // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0118(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalIndividualCharacterHandle*          CallFunc_FindIndividualHandle_Handle_1;            // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A74[0x3];                                     // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_2;              // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalAIController*                       K2Node_DynamicCast_AsPal_AIController_1;           // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A75[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalOtomoHolderComponentBase*           CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A76[0x3];                                     // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_AdjustActorToFloor_ReturnValue;           // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentInvaderBase_C_SpawnDelegate) == 0x000008, "Wrong alignment on BP_PalIncidentInvaderBase_C_SpawnDelegate");
static_assert(sizeof(BP_PalIncidentInvaderBase_C_SpawnDelegate) == 0x000168, "Wrong size on BP_PalIncidentInvaderBase_C_SpawnDelegate");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDelegate, ID) == 0x000000, "Member 'BP_PalIncidentInvaderBase_C_SpawnDelegate::ID' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDelegate, SpawnCaracter) == 0x000030, "Member 'BP_PalIncidentInvaderBase_C_SpawnDelegate::SpawnCaracter' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDelegate, CallFunc_FindIndividualHandle_Handle) == 0x000038, "Member 'BP_PalIncidentInvaderBase_C_SpawnDelegate::CallFunc_FindIndividualHandle_Handle' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDelegate, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000040, "Member 'BP_PalIncidentInvaderBase_C_SpawnDelegate::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDelegate, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_PalIncidentInvaderBase_C_SpawnDelegate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDelegate, CallFunc_TryGetIndividualActor_ReturnValue) == 0x000050, "Member 'BP_PalIncidentInvaderBase_C_SpawnDelegate::CallFunc_TryGetIndividualActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDelegate, CallFunc_IsValid_ReturnValue_1) == 0x000058, "Member 'BP_PalIncidentInvaderBase_C_SpawnDelegate::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDelegate, CallFunc_GetComponentByClass_ReturnValue) == 0x000060, "Member 'BP_PalIncidentInvaderBase_C_SpawnDelegate::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDelegate, CallFunc_GetTargetCampModel_ReturnValue) == 0x000068, "Member 'BP_PalIncidentInvaderBase_C_SpawnDelegate::CallFunc_GetTargetCampModel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDelegate, CallFunc_GetId_ReturnValue) == 0x000070, "Member 'BP_PalIncidentInvaderBase_C_SpawnDelegate::CallFunc_GetId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDelegate, CallFunc_GetIndividualCharacterParameterByActor_ReturnValue) == 0x000080, "Member 'BP_PalIncidentInvaderBase_C_SpawnDelegate::CallFunc_GetIndividualCharacterParameterByActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDelegate, CallFunc_GetController_ReturnValue) == 0x000088, "Member 'BP_PalIncidentInvaderBase_C_SpawnDelegate::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDelegate, K2Node_DynamicCast_AsBP_AIController_Interface_Invader) == 0x000090, "Member 'BP_PalIncidentInvaderBase_C_SpawnDelegate::K2Node_DynamicCast_AsBP_AIController_Interface_Invader' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDelegate, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'BP_PalIncidentInvaderBase_C_SpawnDelegate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDelegate, K2Node_CreateDelegate_OutputDelegate) == 0x0000A4, "Member 'BP_PalIncidentInvaderBase_C_SpawnDelegate::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDelegate, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000B4, "Member 'BP_PalIncidentInvaderBase_C_SpawnDelegate::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDelegate, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000C8, "Member 'BP_PalIncidentInvaderBase_C_SpawnDelegate::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDelegate, CallFunc_GetController_ReturnValue_1) == 0x0000E0, "Member 'BP_PalIncidentInvaderBase_C_SpawnDelegate::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDelegate, K2Node_DynamicCast_AsPal_AIController) == 0x0000E8, "Member 'BP_PalIncidentInvaderBase_C_SpawnDelegate::K2Node_DynamicCast_AsPal_AIController' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDelegate, K2Node_DynamicCast_bSuccess_1) == 0x0000F0, "Member 'BP_PalIncidentInvaderBase_C_SpawnDelegate::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDelegate, K2Node_DynamicCast_AsBPI_Get_Pal_AIBlackboard) == 0x0000F8, "Member 'BP_PalIncidentInvaderBase_C_SpawnDelegate::K2Node_DynamicCast_AsBPI_Get_Pal_AIBlackboard' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDelegate, K2Node_DynamicCast_bSuccess_2) == 0x000108, "Member 'BP_PalIncidentInvaderBase_C_SpawnDelegate::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDelegate, CallFunc_Get_Character_Location_Type_CharacterLocationType) == 0x000109, "Member 'BP_PalIncidentInvaderBase_C_SpawnDelegate::CallFunc_Get_Character_Location_Type_CharacterLocationType' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDelegate, CallFunc_GetMyBB_PalBrackboard) == 0x000110, "Member 'BP_PalIncidentInvaderBase_C_SpawnDelegate::CallFunc_GetMyBB_PalBrackboard' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDelegate, K2Node_CreateDelegate_OutputDelegate_2) == 0x000118, "Member 'BP_PalIncidentInvaderBase_C_SpawnDelegate::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDelegate, CallFunc_FindIndividualHandle_Handle_1) == 0x000128, "Member 'BP_PalIncidentInvaderBase_C_SpawnDelegate::CallFunc_FindIndividualHandle_Handle_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDelegate, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000130, "Member 'BP_PalIncidentInvaderBase_C_SpawnDelegate::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDelegate, CallFunc_Add_IntInt_ReturnValue) == 0x000134, "Member 'BP_PalIncidentInvaderBase_C_SpawnDelegate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDelegate, CallFunc_GetController_ReturnValue_2) == 0x000138, "Member 'BP_PalIncidentInvaderBase_C_SpawnDelegate::CallFunc_GetController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDelegate, K2Node_DynamicCast_AsPal_AIController_1) == 0x000140, "Member 'BP_PalIncidentInvaderBase_C_SpawnDelegate::K2Node_DynamicCast_AsPal_AIController_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDelegate, K2Node_DynamicCast_bSuccess_3) == 0x000148, "Member 'BP_PalIncidentInvaderBase_C_SpawnDelegate::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDelegate, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000150, "Member 'BP_PalIncidentInvaderBase_C_SpawnDelegate::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDelegate, CallFunc_Array_Add_ReturnValue) == 0x000158, "Member 'BP_PalIncidentInvaderBase_C_SpawnDelegate::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDelegate, CallFunc_IsValid_ReturnValue_2) == 0x00015C, "Member 'BP_PalIncidentInvaderBase_C_SpawnDelegate::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDelegate, CallFunc_AdjustActorToFloor_ReturnValue) == 0x000160, "Member 'BP_PalIncidentInvaderBase_C_SpawnDelegate::CallFunc_AdjustActorToFloor_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentInvaderBase.BP_PalIncidentInvaderBase_C.SpawnDummyNavInvoker
// 0x00A0 (0x00A0 - 0x0000)
struct BP_PalIncidentInvaderBase_C_SpawnDummyNavInvoker final
{
public:
	class ABP_DummyNavigationInvoker_C*           DummyNav;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A77[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalInvaderManager*                     CallFunc_GetInvaderManager_ReturnValue;            // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_SpawnDummyNavInvoker_ReturnValue;         // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A78[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_DummyNavigationInvoker_C*           K2Node_DynamicCast_AsBP_Dummy_Navigation_Invoker;  // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentInvaderBase_C_SpawnDummyNavInvoker) == 0x000010, "Wrong alignment on BP_PalIncidentInvaderBase_C_SpawnDummyNavInvoker");
static_assert(sizeof(BP_PalIncidentInvaderBase_C_SpawnDummyNavInvoker) == 0x0000A0, "Wrong size on BP_PalIncidentInvaderBase_C_SpawnDummyNavInvoker");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDummyNavInvoker, DummyNav) == 0x000000, "Member 'BP_PalIncidentInvaderBase_C_SpawnDummyNavInvoker::DummyNav' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDummyNavInvoker, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'BP_PalIncidentInvaderBase_C_SpawnDummyNavInvoker::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDummyNavInvoker, CallFunc_GetInvaderManager_ReturnValue) == 0x000070, "Member 'BP_PalIncidentInvaderBase_C_SpawnDummyNavInvoker::CallFunc_GetInvaderManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDummyNavInvoker, CallFunc_SpawnDummyNavInvoker_ReturnValue) == 0x000078, "Member 'BP_PalIncidentInvaderBase_C_SpawnDummyNavInvoker::CallFunc_SpawnDummyNavInvoker_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDummyNavInvoker, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'BP_PalIncidentInvaderBase_C_SpawnDummyNavInvoker::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDummyNavInvoker, K2Node_DynamicCast_AsBP_Dummy_Navigation_Invoker) == 0x000088, "Member 'BP_PalIncidentInvaderBase_C_SpawnDummyNavInvoker::K2Node_DynamicCast_AsBP_Dummy_Navigation_Invoker' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnDummyNavInvoker, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'BP_PalIncidentInvaderBase_C_SpawnDummyNavInvoker::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_PalIncidentInvaderBase.BP_PalIncidentInvaderBase_C.SpawnMemberCharacters
// 0x00C8 (0x00C8 - 0x0000)
struct BP_PalIncidentInvaderBase_C_SpawnMemberCharacters final
{
public:
	struct FVector                                StartLocation;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               SpawnRot;                                          // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A79[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetTargetBaseCampPosition_Location;       // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPalInvaderSpawnCharacterParameter     CallFunc_Array_Get_Item;                           // 0x0070(0x0018)(NoDestructor)
	struct FVector                                CallFunc_Vector_Normal2D_ReturnValue;              // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A7A[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCanceled_ReturnValue;                   // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCompleted_ReturnValue;                  // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentInvaderBase_C_SpawnMemberCharacters) == 0x000008, "Wrong alignment on BP_PalIncidentInvaderBase_C_SpawnMemberCharacters");
static_assert(sizeof(BP_PalIncidentInvaderBase_C_SpawnMemberCharacters) == 0x0000C8, "Wrong size on BP_PalIncidentInvaderBase_C_SpawnMemberCharacters");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnMemberCharacters, StartLocation) == 0x000000, "Member 'BP_PalIncidentInvaderBase_C_SpawnMemberCharacters::StartLocation' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnMemberCharacters, SpawnRot) == 0x000018, "Member 'BP_PalIncidentInvaderBase_C_SpawnMemberCharacters::SpawnRot' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnMemberCharacters, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_PalIncidentInvaderBase_C_SpawnMemberCharacters::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnMemberCharacters, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_PalIncidentInvaderBase_C_SpawnMemberCharacters::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnMemberCharacters, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_PalIncidentInvaderBase_C_SpawnMemberCharacters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnMemberCharacters, CallFunc_GetTargetBaseCampPosition_Location) == 0x000040, "Member 'BP_PalIncidentInvaderBase_C_SpawnMemberCharacters::CallFunc_GetTargetBaseCampPosition_Location' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnMemberCharacters, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000058, "Member 'BP_PalIncidentInvaderBase_C_SpawnMemberCharacters::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnMemberCharacters, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_PalIncidentInvaderBase_C_SpawnMemberCharacters::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnMemberCharacters, CallFunc_Vector_Normal2D_ReturnValue) == 0x000088, "Member 'BP_PalIncidentInvaderBase_C_SpawnMemberCharacters::CallFunc_Vector_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnMemberCharacters, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x0000A0, "Member 'BP_PalIncidentInvaderBase_C_SpawnMemberCharacters::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnMemberCharacters, CallFunc_Array_Length_ReturnValue) == 0x0000B8, "Member 'BP_PalIncidentInvaderBase_C_SpawnMemberCharacters::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnMemberCharacters, CallFunc_Less_IntInt_ReturnValue) == 0x0000BC, "Member 'BP_PalIncidentInvaderBase_C_SpawnMemberCharacters::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnMemberCharacters, CallFunc_Array_Length_ReturnValue_1) == 0x0000C0, "Member 'BP_PalIncidentInvaderBase_C_SpawnMemberCharacters::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnMemberCharacters, CallFunc_IsCanceled_ReturnValue) == 0x0000C4, "Member 'BP_PalIncidentInvaderBase_C_SpawnMemberCharacters::CallFunc_IsCanceled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnMemberCharacters, CallFunc_IsCompleted_ReturnValue) == 0x0000C5, "Member 'BP_PalIncidentInvaderBase_C_SpawnMemberCharacters::CallFunc_IsCompleted_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnMemberCharacters, CallFunc_BooleanOR_ReturnValue) == 0x0000C6, "Member 'BP_PalIncidentInvaderBase_C_SpawnMemberCharacters::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_SpawnMemberCharacters, CallFunc_Not_PreBool_ReturnValue) == 0x0000C7, "Member 'BP_PalIncidentInvaderBase_C_SpawnMemberCharacters::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentInvaderBase.BP_PalIncidentInvaderBase_C.TerminateProc
// 0x0048 (0x0048 - 0x0000)
struct BP_PalIncidentInvaderBase_C_TerminateProc final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FPalInstanceID& ID)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A7B[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalCharacterManager*                   CallFunc_GetCharacterManager_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalIndividualCharacterHandle*          CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A7C[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          CallFunc_TryGetIndividualActor_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentInvaderBase_C_TerminateProc) == 0x000008, "Wrong alignment on BP_PalIncidentInvaderBase_C_TerminateProc");
static_assert(sizeof(BP_PalIncidentInvaderBase_C_TerminateProc) == 0x000048, "Wrong size on BP_PalIncidentInvaderBase_C_TerminateProc");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_TerminateProc, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_PalIncidentInvaderBase_C_TerminateProc::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_TerminateProc, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_PalIncidentInvaderBase_C_TerminateProc::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_TerminateProc, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_PalIncidentInvaderBase_C_TerminateProc::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_TerminateProc, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_PalIncidentInvaderBase_C_TerminateProc::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_TerminateProc, CallFunc_GetCharacterManager_ReturnValue) == 0x000020, "Member 'BP_PalIncidentInvaderBase_C_TerminateProc::CallFunc_GetCharacterManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_TerminateProc, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_PalIncidentInvaderBase_C_TerminateProc::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_TerminateProc, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_PalIncidentInvaderBase_C_TerminateProc::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_TerminateProc, CallFunc_TryGetIndividualActor_ReturnValue) == 0x000038, "Member 'BP_PalIncidentInvaderBase_C_TerminateProc::CallFunc_TryGetIndividualActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_TerminateProc, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_PalIncidentInvaderBase_C_TerminateProc::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_TerminateProc, CallFunc_IsValid_ReturnValue_1) == 0x000044, "Member 'BP_PalIncidentInvaderBase_C_TerminateProc::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_TerminateProc, CallFunc_Less_IntInt_ReturnValue) == 0x000045, "Member 'BP_PalIncidentInvaderBase_C_TerminateProc::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_TerminateProc, CallFunc_IsValid_ReturnValue_2) == 0x000046, "Member 'BP_PalIncidentInvaderBase_C_TerminateProc::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_PalIncidentInvaderBase.BP_PalIncidentInvaderBase_C.GetNPCAIControllerClass
// 0x0020 (0x0020 - 0x0000)
struct BP_PalIncidentInvaderBase_C_GetNPCAIControllerClass final
{
public:
	struct FPalInvaderSpawnCharacterParameter     SpawnParameter;                                    // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	TSubclassOf<class APalAIController>           ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentInvaderBase_C_GetNPCAIControllerClass) == 0x000008, "Wrong alignment on BP_PalIncidentInvaderBase_C_GetNPCAIControllerClass");
static_assert(sizeof(BP_PalIncidentInvaderBase_C_GetNPCAIControllerClass) == 0x000020, "Wrong size on BP_PalIncidentInvaderBase_C_GetNPCAIControllerClass");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetNPCAIControllerClass, SpawnParameter) == 0x000000, "Member 'BP_PalIncidentInvaderBase_C_GetNPCAIControllerClass::SpawnParameter' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentInvaderBase_C_GetNPCAIControllerClass, ReturnValue) == 0x000018, "Member 'BP_PalIncidentInvaderBase_C_GetNPCAIControllerClass::ReturnValue' has a wrong offset!");

}

