#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ActionAirDashBase

#include "Basic.hpp"

#include "BP_ActionAirDashBase_classes.hpp"
#include "BP_ActionAirDashBase_parameters.hpp"


namespace SDK
{

// Function BP_ActionAirDashBase.BP_ActionAirDashBase_C.CanGainSP
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_ActionAirDashBase_C::CanGainSP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionAirDashBase_C", "CanGainSP");

	Params::BP_ActionAirDashBase_C_CanGainSP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ActionAirDashBase.BP_ActionAirDashBase_C.CanNextActionCancel
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_ActionAirDashBase_C::CanNextActionCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionAirDashBase_C", "CanNextActionCancel");

	Params::BP_ActionAirDashBase_C_CanNextActionCancel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ActionAirDashBase.BP_ActionAirDashBase_C.CheckEndAction
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ActionAirDashBase_C::CheckEndAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionAirDashBase_C", "CheckEndAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ActionAirDashBase.BP_ActionAirDashBase_C.CheckFrontHight
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CanThrough                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ActionAirDashBase_C::CheckFrontHight(double DeltaTime, bool* CanThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionAirDashBase_C", "CheckFrontHight");

	Params::BP_ActionAirDashBase_C_CheckFrontHight Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);

	if (CanThrough != nullptr)
		*CanThrough = Parms.CanThrough;
}


// Function BP_ActionAirDashBase.BP_ActionAirDashBase_C.CheckOtherCharacter
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          NextPlayerPos                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsStop                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ActionAirDashBase_C::CheckOtherCharacter(const struct FVector& NextPlayerPos, bool* IsStop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionAirDashBase_C", "CheckOtherCharacter");

	Params::BP_ActionAirDashBase_C_CheckOtherCharacter Parms{};

	Parms.NextPlayerPos = std::move(NextPlayerPos);

	UObject::ProcessEvent(Func, &Parms);

	if (IsStop != nullptr)
		*IsStop = Parms.IsStop;
}


// Function BP_ActionAirDashBase.BP_ActionAirDashBase_C.DisableMovement
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Disable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ActionAirDashBase_C::DisableMovement(bool Disable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionAirDashBase_C", "DisableMovement");

	Params::BP_ActionAirDashBase_C_DisableMovement Parms{};

	Parms.Disable = Disable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ActionAirDashBase.BP_ActionAirDashBase_C.DisableShooter
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Disable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ActionAirDashBase_C::DisableShooter(bool Disable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionAirDashBase_C", "DisableShooter");

	Params::BP_ActionAirDashBase_C_DisableShooter Parms{};

	Parms.Disable = Disable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ActionAirDashBase.BP_ActionAirDashBase_C.EndStep
// (BlueprintCallable, BlueprintEvent)

void UBP_ActionAirDashBase_C::EndStep()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionAirDashBase_C", "EndStep");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ActionAirDashBase.BP_ActionAirDashBase_C.ExecuteUbergraph_BP_ActionAirDashBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ActionAirDashBase_C::ExecuteUbergraph_BP_ActionAirDashBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionAirDashBase_C", "ExecuteUbergraph_BP_ActionAirDashBase");

	Params::BP_ActionAirDashBase_C_ExecuteUbergraph_BP_ActionAirDashBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ActionAirDashBase.BP_ActionAirDashBase_C.LayCheck_ForSweepMove
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          DesiredPos                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ResultActorPos                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsHit                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ActionAirDashBase_C::LayCheck_ForSweepMove(const struct FVector& DesiredPos, struct FVector* ResultActorPos, bool* IsHit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionAirDashBase_C", "LayCheck_ForSweepMove");

	Params::BP_ActionAirDashBase_C_LayCheck_ForSweepMove Parms{};

	Parms.DesiredPos = std::move(DesiredPos);

	UObject::ProcessEvent(Func, &Parms);

	if (ResultActorPos != nullptr)
		*ResultActorPos = std::move(Parms.ResultActorPos);

	if (IsHit != nullptr)
		*IsHit = Parms.IsHit;
}


// Function BP_ActionAirDashBase.BP_ActionAirDashBase_C.OnBeginAction
// (Event, Public, BlueprintEvent)

void UBP_ActionAirDashBase_C::OnBeginAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionAirDashBase_C", "OnBeginAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ActionAirDashBase.BP_ActionAirDashBase_C.OnEndAction
// (Event, Public, BlueprintEvent)

void UBP_ActionAirDashBase_C::OnEndAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionAirDashBase_C", "OnEndAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ActionAirDashBase.BP_ActionAirDashBase_C.OnEndStepWhenCrouch
// (BlueprintCallable, BlueprintEvent)

void UBP_ActionAirDashBase_C::OnEndStepWhenCrouch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionAirDashBase_C", "OnEndStepWhenCrouch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ActionAirDashBase.BP_ActionAirDashBase_C.OnMovementModeChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EMovementMode                           PrevMovementMode                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   PreviousCustomMode                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ActionAirDashBase_C::OnMovementModeChanged(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionAirDashBase_C", "OnMovementModeChanged");

	Params::BP_ActionAirDashBase_C_OnMovementModeChanged Parms{};

	Parms.Character = Character;
	Parms.PrevMovementMode = PrevMovementMode;
	Parms.PreviousCustomMode = PreviousCustomMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ActionAirDashBase.BP_ActionAirDashBase_C.StepMove_Location
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ActionAirDashBase_C::StepMove_Location(double DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionAirDashBase_C", "StepMove_Location");

	Params::BP_ActionAirDashBase_C_StepMove_Location Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ActionAirDashBase.BP_ActionAirDashBase_C.TickAction
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ActionAirDashBase_C::TickAction(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionAirDashBase_C", "TickAction");

	Params::BP_ActionAirDashBase_C_TickAction Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ActionAirDashBase.BP_ActionAirDashBase_C.UpdateCapsuleHeight
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DetaTime                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ActionAirDashBase_C::UpdateCapsuleHeight(double DetaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionAirDashBase_C", "UpdateCapsuleHeight");

	Params::BP_ActionAirDashBase_C_UpdateCapsuleHeight Parms{};

	Parms.DetaTime = DetaTime;

	UObject::ProcessEvent(Func, &Parms);
}

}

