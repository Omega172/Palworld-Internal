#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Trading_Item_List

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Trading_Item_List.WBP_Trading_Item_List_C
// 0x00C8 (0x0340 - 0x0278)
class UWBP_Trading_Item_List_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anm_NormalToSoldout;                               // 0x0280(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_Empty;                                      // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_Select;                                     // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_TradeInfo;                             // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame_Focus_Flare;                                 // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_Stock;                                        // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Menu_btn_C*                        WBP_Menu_btn;                                      // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalCommonCharacterSlotButton_C*    WBP_PalCommonCharacterSlotButton;                  // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalInGameMenuItemSlotButton_C*     WBP_PalInGameMenuItemSlotButton_Cost;              // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalInGameMenuItemSlotButton_C*     WBP_PalInGameMenuItemSlotButton_Product;           // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalInvisibleButton_C*              WBP_PalInvisibleButton;                            // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnEmptySlotClicked;                                // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         Index_WBP_Trading_Item_List_C;                     // 0x02E8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E43[0x4];                                     // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnClickedRemoveButton;                             // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsEmpty;                                           // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E44[0x7];                                     // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnTradeSelect;                                     // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnTradeInfoHovered;                                // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnTradeInfoUnhovered;                              // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          NowSoldOut;                                        // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnmEvent_Normal();
	void AnmEvent_SoldOut();
	void BndEvt__WBP_Trading_Item_List_WBP_Menu_btn_K2Node_ComponentBoundEvent_0_OnButtonClicked__DelegateSignature();
	void BndEvt__WBP_Trading_Item_List_WBP_PalInvisibleButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_Trading_Item_List_WBP_PalInvisibleButton_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_Trading_Item_List_WBP_PalInvisibleButton_K2Node_ComponentBoundEvent_3_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void Construct();
	void ExecuteUbergraph_WBP_Trading_Item_List(int32 EntryPoint);
	void OnClickedRemoveButton__DelegateSignature(int32 TradeIndex);
	void OnEmptySlotClicked__DelegateSignature();
	void OnTradeInfoHovered__DelegateSignature(int32 Param_Index);
	void OnTradeInfoUnhovered__DelegateSignature(int32 Param_Index);
	void OnTradeSelect__DelegateSignature(int32 Param_Index);
	void SetEmpty();
	void Setup_Item_Trade_Info(const struct FPalItemBoothTradeInfo& TradeInfo, bool RemoveButtonVisible);
	void Setup_Pal_Trade_Info(const struct FPalPalBoothTradeInfo& TradeInfo, bool RemoveButtonVisible);
	void ToggleSelect(bool Selected);
	void UpdateStock(int32 StockCount);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Trading_Item_List_C">();
	}
	static class UWBP_Trading_Item_List_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Trading_Item_List_C>();
	}
};
static_assert(alignof(UWBP_Trading_Item_List_C) == 0x000008, "Wrong alignment on UWBP_Trading_Item_List_C");
static_assert(sizeof(UWBP_Trading_Item_List_C) == 0x000340, "Wrong size on UWBP_Trading_Item_List_C");
static_assert(offsetof(UWBP_Trading_Item_List_C, UberGraphFrame) == 0x000278, "Member 'UWBP_Trading_Item_List_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_List_C, Anm_NormalToSoldout) == 0x000280, "Member 'UWBP_Trading_Item_List_C::Anm_NormalToSoldout' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_List_C, Canvas_Empty) == 0x000288, "Member 'UWBP_Trading_Item_List_C::Canvas_Empty' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_List_C, Canvas_Select) == 0x000290, "Member 'UWBP_Trading_Item_List_C::Canvas_Select' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_List_C, CanvasPanel_TradeInfo) == 0x000298, "Member 'UWBP_Trading_Item_List_C::CanvasPanel_TradeInfo' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_List_C, Frame_Focus_Flare) == 0x0002A0, "Member 'UWBP_Trading_Item_List_C::Frame_Focus_Flare' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_List_C, Text_Stock) == 0x0002A8, "Member 'UWBP_Trading_Item_List_C::Text_Stock' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_List_C, WBP_Menu_btn) == 0x0002B0, "Member 'UWBP_Trading_Item_List_C::WBP_Menu_btn' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_List_C, WBP_PalCommonCharacterSlotButton) == 0x0002B8, "Member 'UWBP_Trading_Item_List_C::WBP_PalCommonCharacterSlotButton' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_List_C, WBP_PalInGameMenuItemSlotButton_Cost) == 0x0002C0, "Member 'UWBP_Trading_Item_List_C::WBP_PalInGameMenuItemSlotButton_Cost' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_List_C, WBP_PalInGameMenuItemSlotButton_Product) == 0x0002C8, "Member 'UWBP_Trading_Item_List_C::WBP_PalInGameMenuItemSlotButton_Product' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_List_C, WBP_PalInvisibleButton) == 0x0002D0, "Member 'UWBP_Trading_Item_List_C::WBP_PalInvisibleButton' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_List_C, OnEmptySlotClicked) == 0x0002D8, "Member 'UWBP_Trading_Item_List_C::OnEmptySlotClicked' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_List_C, Index_WBP_Trading_Item_List_C) == 0x0002E8, "Member 'UWBP_Trading_Item_List_C::Index_WBP_Trading_Item_List_C' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_List_C, OnClickedRemoveButton) == 0x0002F0, "Member 'UWBP_Trading_Item_List_C::OnClickedRemoveButton' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_List_C, IsEmpty) == 0x000300, "Member 'UWBP_Trading_Item_List_C::IsEmpty' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_List_C, OnTradeSelect) == 0x000308, "Member 'UWBP_Trading_Item_List_C::OnTradeSelect' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_List_C, OnTradeInfoHovered) == 0x000318, "Member 'UWBP_Trading_Item_List_C::OnTradeInfoHovered' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_List_C, OnTradeInfoUnhovered) == 0x000328, "Member 'UWBP_Trading_Item_List_C::OnTradeInfoUnhovered' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_List_C, NowSoldOut) == 0x000338, "Member 'UWBP_Trading_Item_List_C::NowSoldOut' has a wrong offset!");

}

