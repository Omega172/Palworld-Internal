#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AIActionCombatHeli_BattleMode

#include "Basic.hpp"

#include "Pal_structs.hpp"
#include "Engine_structs.hpp"
#include "BP_AIActionCombatHeliBase_classes.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AIActionCombatHeli_BattleMode.BP_AIActionCombatHeli_BattleMode_C
// 0x00B0 (0x0210 - 0x0160)
class UBP_AIActionCombatHeli_BattleMode_C final : public UBP_AIActionCombatHeliBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AIActionCombatHeli_BattleMode_C; // 0x0160(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AActor*                                 CurrentTarget;                                     // 0x0168(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Const_BattleDistanceMin;                           // 0x0170(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Const_BattleDistanceMax;                           // 0x0178(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Const_BattleHeight;                                // 0x0180(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Const_SideMovePower;                               // 0x0188(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CombatHeliRpidWeaponComponent_FrontMG_C* GunComponent;                                      // 0x0190(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CombatHeliRpidWeaponComponent_WingMiso_C* MisoComponent;                                     // 0x0198(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBomberMode;                                      // 0x01A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_1815[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CombatHeliRpidWeaponComponent_Bomber_C* BomberComponent;                                   // 0x01A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        MoveDirectionRight;                                // 0x01B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	double                                        TempDeltaTime;                                     // 0x01B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	double                                        Const_BombShootStartDistance;                      // 0x01C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Const_DefaultMoveSpeedRate;                        // 0x01C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Const_BombMoveSpeedRate;                           // 0x01D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPalOilrigCombatHeliRandomWeaponInfo> Const_WeaponRandomInfo;                            // 0x01D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsStop;                                            // 0x01E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_1816[0x7];                                     // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Const_HeightMoveSpeedRate;                         // 0x01F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPalOilrigCombatHeliWeaponType                CurrentWeaponType;                                 // 0x01F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_1817[0x7];                                     // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CombatHeliRpidWeaponComponent_C*    CurrentWeaponComponent;                            // 0x0200(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FTimerHandle                           PlayerCheckTimerHandle;                            // 0x0208(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ActionAbort(class APawn* ControlledPawn);
	void ActionFinished(class APawn* ControlledPawn, EPawnActionResult WithResult);
	void ActionPause(class APawn* ControlledPawn);
	void ActionResume(class APawn* ControlledPawn);
	void ActionStart(class APawn* ControlledPawn);
	void ActionTick(class APawn* ControlledPawn, float DeltaSeconds);
	void AttackProcess();
	void ChangeAimTarget();
	void ChangeMoveDirection();
	void ChangeNextWeapon();
	void CheckPlayerDistanceForBGM();
	void ExecuteUbergraph_BP_AIActionCombatHeli_BattleMode(int32 EntryPoint);
	void Is_Valid_Current_Target(bool* Valid);
	void IsNearTarget2D(double Distance, bool* Near);
	void OnChildActionFinished(class UPawnAction* Action, EPawnActionResult WithResult);
	void RayCheckToTarget(bool* Success);
	void ReleaseTriggerAllWeapn();
	void RemoveAllPlayerTarget();
	void RotateToTarget(double DeltaTime);
	void SetMoveVelocity();
	void SetupComponent();
	void TickBP();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AIActionCombatHeli_BattleMode_C">();
	}
	static class UBP_AIActionCombatHeli_BattleMode_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AIActionCombatHeli_BattleMode_C>();
	}
};
static_assert(alignof(UBP_AIActionCombatHeli_BattleMode_C) == 0x000008, "Wrong alignment on UBP_AIActionCombatHeli_BattleMode_C");
static_assert(sizeof(UBP_AIActionCombatHeli_BattleMode_C) == 0x000210, "Wrong size on UBP_AIActionCombatHeli_BattleMode_C");
static_assert(offsetof(UBP_AIActionCombatHeli_BattleMode_C, UberGraphFrame_BP_AIActionCombatHeli_BattleMode_C) == 0x000160, "Member 'UBP_AIActionCombatHeli_BattleMode_C::UberGraphFrame_BP_AIActionCombatHeli_BattleMode_C' has a wrong offset!");
static_assert(offsetof(UBP_AIActionCombatHeli_BattleMode_C, CurrentTarget) == 0x000168, "Member 'UBP_AIActionCombatHeli_BattleMode_C::CurrentTarget' has a wrong offset!");
static_assert(offsetof(UBP_AIActionCombatHeli_BattleMode_C, Const_BattleDistanceMin) == 0x000170, "Member 'UBP_AIActionCombatHeli_BattleMode_C::Const_BattleDistanceMin' has a wrong offset!");
static_assert(offsetof(UBP_AIActionCombatHeli_BattleMode_C, Const_BattleDistanceMax) == 0x000178, "Member 'UBP_AIActionCombatHeli_BattleMode_C::Const_BattleDistanceMax' has a wrong offset!");
static_assert(offsetof(UBP_AIActionCombatHeli_BattleMode_C, Const_BattleHeight) == 0x000180, "Member 'UBP_AIActionCombatHeli_BattleMode_C::Const_BattleHeight' has a wrong offset!");
static_assert(offsetof(UBP_AIActionCombatHeli_BattleMode_C, Const_SideMovePower) == 0x000188, "Member 'UBP_AIActionCombatHeli_BattleMode_C::Const_SideMovePower' has a wrong offset!");
static_assert(offsetof(UBP_AIActionCombatHeli_BattleMode_C, GunComponent) == 0x000190, "Member 'UBP_AIActionCombatHeli_BattleMode_C::GunComponent' has a wrong offset!");
static_assert(offsetof(UBP_AIActionCombatHeli_BattleMode_C, MisoComponent) == 0x000198, "Member 'UBP_AIActionCombatHeli_BattleMode_C::MisoComponent' has a wrong offset!");
static_assert(offsetof(UBP_AIActionCombatHeli_BattleMode_C, IsBomberMode) == 0x0001A0, "Member 'UBP_AIActionCombatHeli_BattleMode_C::IsBomberMode' has a wrong offset!");
static_assert(offsetof(UBP_AIActionCombatHeli_BattleMode_C, BomberComponent) == 0x0001A8, "Member 'UBP_AIActionCombatHeli_BattleMode_C::BomberComponent' has a wrong offset!");
static_assert(offsetof(UBP_AIActionCombatHeli_BattleMode_C, MoveDirectionRight) == 0x0001B0, "Member 'UBP_AIActionCombatHeli_BattleMode_C::MoveDirectionRight' has a wrong offset!");
static_assert(offsetof(UBP_AIActionCombatHeli_BattleMode_C, TempDeltaTime) == 0x0001B8, "Member 'UBP_AIActionCombatHeli_BattleMode_C::TempDeltaTime' has a wrong offset!");
static_assert(offsetof(UBP_AIActionCombatHeli_BattleMode_C, Const_BombShootStartDistance) == 0x0001C0, "Member 'UBP_AIActionCombatHeli_BattleMode_C::Const_BombShootStartDistance' has a wrong offset!");
static_assert(offsetof(UBP_AIActionCombatHeli_BattleMode_C, Const_DefaultMoveSpeedRate) == 0x0001C8, "Member 'UBP_AIActionCombatHeli_BattleMode_C::Const_DefaultMoveSpeedRate' has a wrong offset!");
static_assert(offsetof(UBP_AIActionCombatHeli_BattleMode_C, Const_BombMoveSpeedRate) == 0x0001D0, "Member 'UBP_AIActionCombatHeli_BattleMode_C::Const_BombMoveSpeedRate' has a wrong offset!");
static_assert(offsetof(UBP_AIActionCombatHeli_BattleMode_C, Const_WeaponRandomInfo) == 0x0001D8, "Member 'UBP_AIActionCombatHeli_BattleMode_C::Const_WeaponRandomInfo' has a wrong offset!");
static_assert(offsetof(UBP_AIActionCombatHeli_BattleMode_C, IsStop) == 0x0001E8, "Member 'UBP_AIActionCombatHeli_BattleMode_C::IsStop' has a wrong offset!");
static_assert(offsetof(UBP_AIActionCombatHeli_BattleMode_C, Const_HeightMoveSpeedRate) == 0x0001F0, "Member 'UBP_AIActionCombatHeli_BattleMode_C::Const_HeightMoveSpeedRate' has a wrong offset!");
static_assert(offsetof(UBP_AIActionCombatHeli_BattleMode_C, CurrentWeaponType) == 0x0001F8, "Member 'UBP_AIActionCombatHeli_BattleMode_C::CurrentWeaponType' has a wrong offset!");
static_assert(offsetof(UBP_AIActionCombatHeli_BattleMode_C, CurrentWeaponComponent) == 0x000200, "Member 'UBP_AIActionCombatHeli_BattleMode_C::CurrentWeaponComponent' has a wrong offset!");
static_assert(offsetof(UBP_AIActionCombatHeli_BattleMode_C, PlayerCheckTimerHandle) == 0x000208, "Member 'UBP_AIActionCombatHeli_BattleMode_C::PlayerCheckTimerHandle' has a wrong offset!");

}

