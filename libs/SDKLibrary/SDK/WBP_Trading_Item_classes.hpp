#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Trading_Item

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Pal_structs.hpp"
#include "Pal_classes.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Trading_Item.WBP_Trading_Item_C
// 0x01F8 (0x0628 - 0x0430)
class UWBP_Trading_Item_C final : public UPalUserWidgetOverlayUI
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0430(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCanvasPanel*                           Canvas_Caution;                                    // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_InventoryStorage;                           // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_Sell;                                       // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_SellList;                                   // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_SellSetting;                                // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              CheckBox;                                          // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_ItemStocknum;                        // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ItemSlot_Add_Cost;                           // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ItemSlot_Add_Product;                        // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_StoreHover;                                  // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPalEditableTextBox*                    PalEditableTextBox_CostNum;                        // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPalEditableTextBox*                    PalEditableTextBox_ProductNum;                     // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_ItemStockNum;                                 // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_StoreManage;                                  // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CommonButton_1_C*                  WBP_CommonButton_Cancel;                           // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CommonButton_C*                    WBP_CommonButton_Confirm;                          // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_IngameMenu_Chest_C*                WBP_IngameMenu_Chest;                              // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ItemInfo_ForItemBooth_C*           WBP_ItemInfo_ForItemBooth;                         // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalInGameMenuItemSlotButton_C*     WBP_ItemSlot_Cost;                                 // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalInGameMenuItemSlotButton_C*     WBP_ItemSlot_Product;                              // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Menu_btn_C*                        WBP_Menu_btn;                                      // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalInvisibleButton_C*              WBP_PalInvisibleButton_Lock_CheckBox;              // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalInvisibleButton_C*              WBP_PalInvisibleButton_Minus;                      // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalInvisibleButton_C*              WBP_PalInvisibleButton_Minus_1;                    // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalInvisibleButton_C*              WBP_PalInvisibleButton_Plus;                       // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalInvisibleButton_C*              WBP_PalInvisibleButton_Plus_1;                     // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalInvisibleButton_C*              WBP_PalInvisibleButton_Sort_TargetContainer;       // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalItemScrollList_C*               WBP_PalItemScrollList;                             // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Trading_Item_List_C*               WBP_Trading_Item_List;                             // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Trading_Item_List_C*               WBP_Trading_Item_List_1;                           // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Trading_Item_List_C*               WBP_Trading_Item_List_2;                           // 0x0528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Trading_Item_List_C*               WBP_Trading_Item_List_3;                           // 0x0530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Trading_Item_List_C*               WBP_Trading_Item_List_4;                           // 0x0538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPalMapObjectItemBoothModel*            ItemBoothModel;                                    // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UBP_PalInventoryModel_C*                InventoryModel;                                    // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TArray<class UWBP_Trading_Item_List_C*>       TradingList;                                       // 0x0550(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          Confirmable;                                       // 0x0560(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F54[0x3];                                     // 0x0561(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalItemBoothTradeInfo                 CurrentTradeInfo;                                  // 0x0564(0x0068)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	uint8                                         Pad_4F55[0x4];                                     // 0x05CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   LastProductNum;                                    // 0x05D0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   LastCostNum;                                       // 0x05E8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FPalUIActionBindData>           StoreContainerActionBindings;                      // 0x0600(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          LastFocusInInventory;                              // 0x0610(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F56[0x3];                                     // 0x0611(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EditingIndex;                                      // 0x0614(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SelectingProduct;                                  // 0x0618(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F57[0x7];                                     // 0x0619(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           DelayUnhoverTimer;                                 // 0x0620(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AllGet();
	void BndEvt__WBP_Trading_Item_PalEditableTextBox_CostNum_K2Node_ComponentBoundEvent_12_OnEditableTextBoxChangedEvent__DelegateSignature(const class FText& Text);
	void BndEvt__WBP_Trading_Item_PalEditableTextBox_CostNum_K2Node_ComponentBoundEvent_13_OnEditableTextBoxCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__WBP_Trading_Item_PalEditableTextBox_ProductNum_K2Node_ComponentBoundEvent_8_OnEditableTextBoxCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__WBP_Trading_Item_PalEditableTextBox_ProductNum_K2Node_ComponentBoundEvent_9_OnEditableTextBoxChangedEvent__DelegateSignature(const class FText& Text);
	void BndEvt__WBP_Trading_Item_WBP_CommonButton__K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature();
	void BndEvt__WBP_Trading_Item_WBP_CommonButton_Cancel_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature();
	void BndEvt__WBP_Trading_Item_WBP_IngameMenu_Chest_K2Node_ComponentBoundEvent_16_OnClickedTargetContainerSortButton__DelegateSignature();
	void BndEvt__WBP_Trading_Item_WBP_IngameMenu_Chest_K2Node_ComponentBoundEvent_17_OnClickedCloseButton__DelegateSignature();
	void BndEvt__WBP_Trading_Item_WBP_IngameMenu_Chest_K2Node_ComponentBoundEvent_20_OnHoveredInventorySlot__DelegateSignature(class UWBP_PalItemSlotButtonBase_C* SlotButton);
	void BndEvt__WBP_Trading_Item_WBP_IngameMenu_Chest_K2Node_ComponentBoundEvent_21_OnHoveredTargetContainerSlot__DelegateSignature(class UWBP_PalItemSlotButtonBase_C* SlotButton);
	void BndEvt__WBP_Trading_Item_WBP_IngameMenu_Chest_K2Node_ComponentBoundEvent_6_OnClickedInventorySortButton__DelegateSignature();
	void BndEvt__WBP_Trading_Item_WBP_IngameMenu_Chest_K2Node_ComponentBoundEvent_7_OnClickedQuickMoveButton__DelegateSignature();
	void BndEvt__WBP_Trading_Item_WBP_ItemSlot_Cost_K2Node_ComponentBoundEvent_5_OnClickedButton__DelegateSignature(class UWBP_PalItemSlotButtonBase_C* Widget, EPalItemSlotPressType PressType);
	void BndEvt__WBP_Trading_Item_WBP_ItemSlot_Product_K2Node_ComponentBoundEvent_2_OnClickedButton__DelegateSignature(class UWBP_PalItemSlotButtonBase_C* Widget, EPalItemSlotPressType PressType);
	void BndEvt__WBP_Trading_Item_WBP_Menu_btn_K2Node_ComponentBoundEvent_18_OnButtonClicked__DelegateSignature();
	void BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Lock_CheckBox_K2Node_ComponentBoundEvent_19_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Minus_1_K2Node_ComponentBoundEvent_10_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Minus_K2Node_ComponentBoundEvent_7_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Plus_1_K2Node_ComponentBoundEvent_11_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Plus_K2Node_ComponentBoundEvent_6_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_Trading_Item_WBP_PalInvisibleButton_Sort_TargetContainer_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void Construct();
	void DelayUnhoverStorePanel();
	void Enable_Cost_Select();
	void Enable_Product_Select(bool Enable);
	void ExecuteUbergraph_WBP_Trading_Item(int32 EntryPoint);
	void FocusLeft();
	void FocusRight();
	void FocusToStoreManage();
	void On_Store_Content_Updated(class UPalItemContainer* ItemContainer);
	void OnCancelAction();
	void OnClickedAnyProductSlot(class UWBP_PalItemSlotButtonBase_C* Param_Slot, EPalItemSlotPressType PressType);
	void OnClickedCostSelectSlot(class FName StaticItemId);
	void OnClickedRemoveTradeButton(int32 TradeIndex);
	void OnInitialized();
	void OnPrivateLockChanged(const struct FGuid& LockPlayerUId);
	void OnSetup();
	void OnStoreSlotHovered(class UWBP_PalItemSlotButtonBase_C* Widget);
	void OnStoreSlotUnhovered(class UWBP_PalItemSlotButtonBase_C* Widget);
	void OnTradeEdit(int32 Param_Index);
	void OnTradeHovered(int32 TradeIndex);
	void OnTradeUnhovered(int32 TradeIndex);
	void Refill();
	void SetCostSettingNum(int32 NewNum);
	void SetProductSettingNum(int32 NewNum);
	void Setup();
	void Sort();
	void SwitchSellPanel(bool ToSellList);
	void SwitchSlotPanelHoverDisplay(bool IsHover);
	void SwitchStoragePanelVisibility(bool Visible);
	void Toggle_Private_Lock();
	void ToSellListPanel();
	void ToSetSellPanel();
	void Update_Sell_List();
	void ValidateCurrentTradeInfo();

	class UWidget* BP_GetDesiredFocusTarget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Trading_Item_C">();
	}
	static class UWBP_Trading_Item_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Trading_Item_C>();
	}
};
static_assert(alignof(UWBP_Trading_Item_C) == 0x000008, "Wrong alignment on UWBP_Trading_Item_C");
static_assert(sizeof(UWBP_Trading_Item_C) == 0x000628, "Wrong size on UWBP_Trading_Item_C");
static_assert(offsetof(UWBP_Trading_Item_C, UberGraphFrame) == 0x000430, "Member 'UWBP_Trading_Item_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, Canvas_Caution) == 0x000438, "Member 'UWBP_Trading_Item_C::Canvas_Caution' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, Canvas_InventoryStorage) == 0x000440, "Member 'UWBP_Trading_Item_C::Canvas_InventoryStorage' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, Canvas_Sell) == 0x000448, "Member 'UWBP_Trading_Item_C::Canvas_Sell' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, Canvas_SellList) == 0x000450, "Member 'UWBP_Trading_Item_C::Canvas_SellList' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, Canvas_SellSetting) == 0x000458, "Member 'UWBP_Trading_Item_C::Canvas_SellSetting' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, CheckBox) == 0x000460, "Member 'UWBP_Trading_Item_C::CheckBox' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, HorizontalBox_ItemStocknum) == 0x000468, "Member 'UWBP_Trading_Item_C::HorizontalBox_ItemStocknum' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, Image_ItemSlot_Add_Cost) == 0x000470, "Member 'UWBP_Trading_Item_C::Image_ItemSlot_Add_Cost' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, Image_ItemSlot_Add_Product) == 0x000478, "Member 'UWBP_Trading_Item_C::Image_ItemSlot_Add_Product' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, Image_StoreHover) == 0x000480, "Member 'UWBP_Trading_Item_C::Image_StoreHover' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, PalEditableTextBox_CostNum) == 0x000488, "Member 'UWBP_Trading_Item_C::PalEditableTextBox_CostNum' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, PalEditableTextBox_ProductNum) == 0x000490, "Member 'UWBP_Trading_Item_C::PalEditableTextBox_ProductNum' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, Text_ItemStockNum) == 0x000498, "Member 'UWBP_Trading_Item_C::Text_ItemStockNum' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, Text_StoreManage) == 0x0004A0, "Member 'UWBP_Trading_Item_C::Text_StoreManage' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, WBP_CommonButton_Cancel) == 0x0004A8, "Member 'UWBP_Trading_Item_C::WBP_CommonButton_Cancel' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, WBP_CommonButton_Confirm) == 0x0004B0, "Member 'UWBP_Trading_Item_C::WBP_CommonButton_Confirm' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, WBP_IngameMenu_Chest) == 0x0004B8, "Member 'UWBP_Trading_Item_C::WBP_IngameMenu_Chest' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, WBP_ItemInfo_ForItemBooth) == 0x0004C0, "Member 'UWBP_Trading_Item_C::WBP_ItemInfo_ForItemBooth' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, WBP_ItemSlot_Cost) == 0x0004C8, "Member 'UWBP_Trading_Item_C::WBP_ItemSlot_Cost' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, WBP_ItemSlot_Product) == 0x0004D0, "Member 'UWBP_Trading_Item_C::WBP_ItemSlot_Product' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, WBP_Menu_btn) == 0x0004D8, "Member 'UWBP_Trading_Item_C::WBP_Menu_btn' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, WBP_PalInvisibleButton_Lock_CheckBox) == 0x0004E0, "Member 'UWBP_Trading_Item_C::WBP_PalInvisibleButton_Lock_CheckBox' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, WBP_PalInvisibleButton_Minus) == 0x0004E8, "Member 'UWBP_Trading_Item_C::WBP_PalInvisibleButton_Minus' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, WBP_PalInvisibleButton_Minus_1) == 0x0004F0, "Member 'UWBP_Trading_Item_C::WBP_PalInvisibleButton_Minus_1' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, WBP_PalInvisibleButton_Plus) == 0x0004F8, "Member 'UWBP_Trading_Item_C::WBP_PalInvisibleButton_Plus' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, WBP_PalInvisibleButton_Plus_1) == 0x000500, "Member 'UWBP_Trading_Item_C::WBP_PalInvisibleButton_Plus_1' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, WBP_PalInvisibleButton_Sort_TargetContainer) == 0x000508, "Member 'UWBP_Trading_Item_C::WBP_PalInvisibleButton_Sort_TargetContainer' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, WBP_PalItemScrollList) == 0x000510, "Member 'UWBP_Trading_Item_C::WBP_PalItemScrollList' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, WBP_Trading_Item_List) == 0x000518, "Member 'UWBP_Trading_Item_C::WBP_Trading_Item_List' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, WBP_Trading_Item_List_1) == 0x000520, "Member 'UWBP_Trading_Item_C::WBP_Trading_Item_List_1' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, WBP_Trading_Item_List_2) == 0x000528, "Member 'UWBP_Trading_Item_C::WBP_Trading_Item_List_2' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, WBP_Trading_Item_List_3) == 0x000530, "Member 'UWBP_Trading_Item_C::WBP_Trading_Item_List_3' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, WBP_Trading_Item_List_4) == 0x000538, "Member 'UWBP_Trading_Item_C::WBP_Trading_Item_List_4' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, ItemBoothModel) == 0x000540, "Member 'UWBP_Trading_Item_C::ItemBoothModel' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, InventoryModel) == 0x000548, "Member 'UWBP_Trading_Item_C::InventoryModel' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, TradingList) == 0x000550, "Member 'UWBP_Trading_Item_C::TradingList' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, Confirmable) == 0x000560, "Member 'UWBP_Trading_Item_C::Confirmable' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, CurrentTradeInfo) == 0x000564, "Member 'UWBP_Trading_Item_C::CurrentTradeInfo' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, LastProductNum) == 0x0005D0, "Member 'UWBP_Trading_Item_C::LastProductNum' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, LastCostNum) == 0x0005E8, "Member 'UWBP_Trading_Item_C::LastCostNum' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, StoreContainerActionBindings) == 0x000600, "Member 'UWBP_Trading_Item_C::StoreContainerActionBindings' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, LastFocusInInventory) == 0x000610, "Member 'UWBP_Trading_Item_C::LastFocusInInventory' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, EditingIndex) == 0x000614, "Member 'UWBP_Trading_Item_C::EditingIndex' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, SelectingProduct) == 0x000618, "Member 'UWBP_Trading_Item_C::SelectingProduct' has a wrong offset!");
static_assert(offsetof(UWBP_Trading_Item_C, DelayUnhoverTimer) == 0x000620, "Member 'UWBP_Trading_Item_C::DelayUnhoverTimer' has a wrong offset!");

}

