#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_IngameMenu_Chest

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Pal_structs.hpp"


namespace SDK::Params
{

// Function WBP_IngameMenu_Chest.WBP_IngameMenu_Chest_C.BndEvt__WBP_IngameMenu_Chest_WBP_Common_Inventory_K2Node_ComponentBoundEvent_8_OnHoveredInventorySlot__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_IngameMenu_Chest_C_BndEvt__WBP_IngameMenu_Chest_WBP_Common_Inventory_K2Node_ComponentBoundEvent_8_OnHoveredInventorySlot__DelegateSignature final
{
public:
	class UWBP_PalItemSlotButtonBase_C*           SlotButton;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_IngameMenu_Chest_C_BndEvt__WBP_IngameMenu_Chest_WBP_Common_Inventory_K2Node_ComponentBoundEvent_8_OnHoveredInventorySlot__DelegateSignature) == 0x000008, "Wrong alignment on WBP_IngameMenu_Chest_C_BndEvt__WBP_IngameMenu_Chest_WBP_Common_Inventory_K2Node_ComponentBoundEvent_8_OnHoveredInventorySlot__DelegateSignature");
static_assert(sizeof(WBP_IngameMenu_Chest_C_BndEvt__WBP_IngameMenu_Chest_WBP_Common_Inventory_K2Node_ComponentBoundEvent_8_OnHoveredInventorySlot__DelegateSignature) == 0x000008, "Wrong size on WBP_IngameMenu_Chest_C_BndEvt__WBP_IngameMenu_Chest_WBP_Common_Inventory_K2Node_ComponentBoundEvent_8_OnHoveredInventorySlot__DelegateSignature");
static_assert(offsetof(WBP_IngameMenu_Chest_C_BndEvt__WBP_IngameMenu_Chest_WBP_Common_Inventory_K2Node_ComponentBoundEvent_8_OnHoveredInventorySlot__DelegateSignature, SlotButton) == 0x000000, "Member 'WBP_IngameMenu_Chest_C_BndEvt__WBP_IngameMenu_Chest_WBP_Common_Inventory_K2Node_ComponentBoundEvent_8_OnHoveredInventorySlot__DelegateSignature::SlotButton' has a wrong offset!");

// Function WBP_IngameMenu_Chest.WBP_IngameMenu_Chest_C.BndEvt__WBP_IngameMenu_Chest_WBP_PalInvisibleButton_QuickMove_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_IngameMenu_Chest_C_BndEvt__WBP_IngameMenu_Chest_WBP_PalInvisibleButton_QuickMove_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_IngameMenu_Chest_C_BndEvt__WBP_IngameMenu_Chest_WBP_PalInvisibleButton_QuickMove_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_IngameMenu_Chest_C_BndEvt__WBP_IngameMenu_Chest_WBP_PalInvisibleButton_QuickMove_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_IngameMenu_Chest_C_BndEvt__WBP_IngameMenu_Chest_WBP_PalInvisibleButton_QuickMove_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_IngameMenu_Chest_C_BndEvt__WBP_IngameMenu_Chest_WBP_PalInvisibleButton_QuickMove_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_IngameMenu_Chest_C_BndEvt__WBP_IngameMenu_Chest_WBP_PalInvisibleButton_QuickMove_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_IngameMenu_Chest_C_BndEvt__WBP_IngameMenu_Chest_WBP_PalInvisibleButton_QuickMove_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_IngameMenu_Chest.WBP_IngameMenu_Chest_C.BndEvt__WBP_IngameMenu_Chest_WBP_PalInvisibleButton_Sort_TargetContainer_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_IngameMenu_Chest_C_BndEvt__WBP_IngameMenu_Chest_WBP_PalInvisibleButton_Sort_TargetContainer_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_IngameMenu_Chest_C_BndEvt__WBP_IngameMenu_Chest_WBP_PalInvisibleButton_Sort_TargetContainer_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_IngameMenu_Chest_C_BndEvt__WBP_IngameMenu_Chest_WBP_PalInvisibleButton_Sort_TargetContainer_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_IngameMenu_Chest_C_BndEvt__WBP_IngameMenu_Chest_WBP_PalInvisibleButton_Sort_TargetContainer_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_IngameMenu_Chest_C_BndEvt__WBP_IngameMenu_Chest_WBP_PalInvisibleButton_Sort_TargetContainer_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_IngameMenu_Chest_C_BndEvt__WBP_IngameMenu_Chest_WBP_PalInvisibleButton_Sort_TargetContainer_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_IngameMenu_Chest_C_BndEvt__WBP_IngameMenu_Chest_WBP_PalInvisibleButton_Sort_TargetContainer_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_IngameMenu_Chest.WBP_IngameMenu_Chest_C.BndEvt__WBP_IngameMenu_Chest_WBP_PalItemScrollList_K2Node_ComponentBoundEvent_3_OnHoveredSlot__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_IngameMenu_Chest_C_BndEvt__WBP_IngameMenu_Chest_WBP_PalItemScrollList_K2Node_ComponentBoundEvent_3_OnHoveredSlot__DelegateSignature final
{
public:
	class UWBP_PalItemSlotButtonBase_C*           ButtonBase;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_IngameMenu_Chest_C_BndEvt__WBP_IngameMenu_Chest_WBP_PalItemScrollList_K2Node_ComponentBoundEvent_3_OnHoveredSlot__DelegateSignature) == 0x000008, "Wrong alignment on WBP_IngameMenu_Chest_C_BndEvt__WBP_IngameMenu_Chest_WBP_PalItemScrollList_K2Node_ComponentBoundEvent_3_OnHoveredSlot__DelegateSignature");
static_assert(sizeof(WBP_IngameMenu_Chest_C_BndEvt__WBP_IngameMenu_Chest_WBP_PalItemScrollList_K2Node_ComponentBoundEvent_3_OnHoveredSlot__DelegateSignature) == 0x000008, "Wrong size on WBP_IngameMenu_Chest_C_BndEvt__WBP_IngameMenu_Chest_WBP_PalItemScrollList_K2Node_ComponentBoundEvent_3_OnHoveredSlot__DelegateSignature");
static_assert(offsetof(WBP_IngameMenu_Chest_C_BndEvt__WBP_IngameMenu_Chest_WBP_PalItemScrollList_K2Node_ComponentBoundEvent_3_OnHoveredSlot__DelegateSignature, ButtonBase) == 0x000000, "Member 'WBP_IngameMenu_Chest_C_BndEvt__WBP_IngameMenu_Chest_WBP_PalItemScrollList_K2Node_ComponentBoundEvent_3_OnHoveredSlot__DelegateSignature::ButtonBase' has a wrong offset!");

// Function WBP_IngameMenu_Chest.WBP_IngameMenu_Chest_C.BndEvt__WBP_IngameMenu_Chest_WBP_PalItemScrollList_K2Node_ComponentBoundEvent_6_OnEndHoveredSlot__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_IngameMenu_Chest_C_BndEvt__WBP_IngameMenu_Chest_WBP_PalItemScrollList_K2Node_ComponentBoundEvent_6_OnEndHoveredSlot__DelegateSignature final
{
public:
	class UWBP_PalItemSlotButtonBase_C*           ButtonBase;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_IngameMenu_Chest_C_BndEvt__WBP_IngameMenu_Chest_WBP_PalItemScrollList_K2Node_ComponentBoundEvent_6_OnEndHoveredSlot__DelegateSignature) == 0x000008, "Wrong alignment on WBP_IngameMenu_Chest_C_BndEvt__WBP_IngameMenu_Chest_WBP_PalItemScrollList_K2Node_ComponentBoundEvent_6_OnEndHoveredSlot__DelegateSignature");
static_assert(sizeof(WBP_IngameMenu_Chest_C_BndEvt__WBP_IngameMenu_Chest_WBP_PalItemScrollList_K2Node_ComponentBoundEvent_6_OnEndHoveredSlot__DelegateSignature) == 0x000008, "Wrong size on WBP_IngameMenu_Chest_C_BndEvt__WBP_IngameMenu_Chest_WBP_PalItemScrollList_K2Node_ComponentBoundEvent_6_OnEndHoveredSlot__DelegateSignature");
static_assert(offsetof(WBP_IngameMenu_Chest_C_BndEvt__WBP_IngameMenu_Chest_WBP_PalItemScrollList_K2Node_ComponentBoundEvent_6_OnEndHoveredSlot__DelegateSignature, ButtonBase) == 0x000000, "Member 'WBP_IngameMenu_Chest_C_BndEvt__WBP_IngameMenu_Chest_WBP_PalItemScrollList_K2Node_ComponentBoundEvent_6_OnEndHoveredSlot__DelegateSignature::ButtonBase' has a wrong offset!");

// Function WBP_IngameMenu_Chest.WBP_IngameMenu_Chest_C.CustomNavi_ToCloseButton
// 0x0010 (0x0010 - 0x0000)
struct WBP_IngameMenu_Chest_C_CustomNavi_ToCloseButton final
{
public:
	EUINavigation                                 Param_Navigation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5677[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_IngameMenu_Chest_C_CustomNavi_ToCloseButton) == 0x000008, "Wrong alignment on WBP_IngameMenu_Chest_C_CustomNavi_ToCloseButton");
static_assert(sizeof(WBP_IngameMenu_Chest_C_CustomNavi_ToCloseButton) == 0x000010, "Wrong size on WBP_IngameMenu_Chest_C_CustomNavi_ToCloseButton");
static_assert(offsetof(WBP_IngameMenu_Chest_C_CustomNavi_ToCloseButton, Param_Navigation) == 0x000000, "Member 'WBP_IngameMenu_Chest_C_CustomNavi_ToCloseButton::Param_Navigation' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_C_CustomNavi_ToCloseButton, ReturnValue) == 0x000008, "Member 'WBP_IngameMenu_Chest_C_CustomNavi_ToCloseButton::ReturnValue' has a wrong offset!");

// Function WBP_IngameMenu_Chest.WBP_IngameMenu_Chest_C.CustomNavi_ToPreferenceOrCloseButton
// 0x0010 (0x0010 - 0x0000)
struct WBP_IngameMenu_Chest_C_CustomNavi_ToPreferenceOrCloseButton final
{
public:
	EUINavigation                                 Param_Navigation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5678[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_IngameMenu_Chest_C_CustomNavi_ToPreferenceOrCloseButton) == 0x000008, "Wrong alignment on WBP_IngameMenu_Chest_C_CustomNavi_ToPreferenceOrCloseButton");
static_assert(sizeof(WBP_IngameMenu_Chest_C_CustomNavi_ToPreferenceOrCloseButton) == 0x000010, "Wrong size on WBP_IngameMenu_Chest_C_CustomNavi_ToPreferenceOrCloseButton");
static_assert(offsetof(WBP_IngameMenu_Chest_C_CustomNavi_ToPreferenceOrCloseButton, Param_Navigation) == 0x000000, "Member 'WBP_IngameMenu_Chest_C_CustomNavi_ToPreferenceOrCloseButton::Param_Navigation' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_C_CustomNavi_ToPreferenceOrCloseButton, ReturnValue) == 0x000008, "Member 'WBP_IngameMenu_Chest_C_CustomNavi_ToPreferenceOrCloseButton::ReturnValue' has a wrong offset!");

// Function WBP_IngameMenu_Chest.WBP_IngameMenu_Chest_C.CustomNavi_ToTargetContainerSortButton
// 0x0010 (0x0010 - 0x0000)
struct WBP_IngameMenu_Chest_C_CustomNavi_ToTargetContainerSortButton final
{
public:
	EUINavigation                                 Param_Navigation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5679[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_IngameMenu_Chest_C_CustomNavi_ToTargetContainerSortButton) == 0x000008, "Wrong alignment on WBP_IngameMenu_Chest_C_CustomNavi_ToTargetContainerSortButton");
static_assert(sizeof(WBP_IngameMenu_Chest_C_CustomNavi_ToTargetContainerSortButton) == 0x000010, "Wrong size on WBP_IngameMenu_Chest_C_CustomNavi_ToTargetContainerSortButton");
static_assert(offsetof(WBP_IngameMenu_Chest_C_CustomNavi_ToTargetContainerSortButton, Param_Navigation) == 0x000000, "Member 'WBP_IngameMenu_Chest_C_CustomNavi_ToTargetContainerSortButton::Param_Navigation' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_C_CustomNavi_ToTargetContainerSortButton, ReturnValue) == 0x000008, "Member 'WBP_IngameMenu_Chest_C_CustomNavi_ToTargetContainerSortButton::ReturnValue' has a wrong offset!");

// Function WBP_IngameMenu_Chest.WBP_IngameMenu_Chest_C.ExecuteUbergraph_WBP_IngameMenu_Chest
// 0x0030 (0x0030 - 0x0000)
struct WBP_IngameMenu_Chest_C_ExecuteUbergraph_WBP_IngameMenu_Chest final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_567A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_1;               // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_PalItemSlotButtonBase_C*           K2Node_ComponentBoundEvent_buttonBase_1;           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_PalItemSlotButtonBase_C*           K2Node_ComponentBoundEvent_buttonBase;             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_PalItemSlotButtonBase_C*           K2Node_ComponentBoundEvent_SlotButton;             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_IngameMenu_Chest_C_ExecuteUbergraph_WBP_IngameMenu_Chest) == 0x000008, "Wrong alignment on WBP_IngameMenu_Chest_C_ExecuteUbergraph_WBP_IngameMenu_Chest");
static_assert(sizeof(WBP_IngameMenu_Chest_C_ExecuteUbergraph_WBP_IngameMenu_Chest) == 0x000030, "Wrong size on WBP_IngameMenu_Chest_C_ExecuteUbergraph_WBP_IngameMenu_Chest");
static_assert(offsetof(WBP_IngameMenu_Chest_C_ExecuteUbergraph_WBP_IngameMenu_Chest, EntryPoint) == 0x000000, "Member 'WBP_IngameMenu_Chest_C_ExecuteUbergraph_WBP_IngameMenu_Chest::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_C_ExecuteUbergraph_WBP_IngameMenu_Chest, K2Node_ComponentBoundEvent_Button_1) == 0x000008, "Member 'WBP_IngameMenu_Chest_C_ExecuteUbergraph_WBP_IngameMenu_Chest::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_C_ExecuteUbergraph_WBP_IngameMenu_Chest, K2Node_ComponentBoundEvent_Button) == 0x000010, "Member 'WBP_IngameMenu_Chest_C_ExecuteUbergraph_WBP_IngameMenu_Chest::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_C_ExecuteUbergraph_WBP_IngameMenu_Chest, K2Node_ComponentBoundEvent_buttonBase_1) == 0x000018, "Member 'WBP_IngameMenu_Chest_C_ExecuteUbergraph_WBP_IngameMenu_Chest::K2Node_ComponentBoundEvent_buttonBase_1' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_C_ExecuteUbergraph_WBP_IngameMenu_Chest, K2Node_ComponentBoundEvent_buttonBase) == 0x000020, "Member 'WBP_IngameMenu_Chest_C_ExecuteUbergraph_WBP_IngameMenu_Chest::K2Node_ComponentBoundEvent_buttonBase' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_C_ExecuteUbergraph_WBP_IngameMenu_Chest, K2Node_ComponentBoundEvent_SlotButton) == 0x000028, "Member 'WBP_IngameMenu_Chest_C_ExecuteUbergraph_WBP_IngameMenu_Chest::K2Node_ComponentBoundEvent_SlotButton' has a wrong offset!");

// Function WBP_IngameMenu_Chest.WBP_IngameMenu_Chest_C.Filtering Inventory by Inventory Type
// 0x0010 (0x0010 - 0x0000)
struct WBP_IngameMenu_Chest_C_Filtering_Inventory_by_Inventory_Type final
{
public:
	TArray<EPalPlayerInventoryType>               InventoryType;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_IngameMenu_Chest_C_Filtering_Inventory_by_Inventory_Type) == 0x000008, "Wrong alignment on WBP_IngameMenu_Chest_C_Filtering_Inventory_by_Inventory_Type");
static_assert(sizeof(WBP_IngameMenu_Chest_C_Filtering_Inventory_by_Inventory_Type) == 0x000010, "Wrong size on WBP_IngameMenu_Chest_C_Filtering_Inventory_by_Inventory_Type");
static_assert(offsetof(WBP_IngameMenu_Chest_C_Filtering_Inventory_by_Inventory_Type, InventoryType) == 0x000000, "Member 'WBP_IngameMenu_Chest_C_Filtering_Inventory_by_Inventory_Type::InventoryType' has a wrong offset!");

// Function WBP_IngameMenu_Chest.WBP_IngameMenu_Chest_C.Get Inventory Top Focust Target
// 0x0010 (0x0010 - 0x0000)
struct WBP_IngameMenu_Chest_C_Get_Inventory_Top_Focust_Target final
{
public:
	class UWidget*                                FocusTarget;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetInventoryTopFocustTarget_FocusTarget;  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_IngameMenu_Chest_C_Get_Inventory_Top_Focust_Target) == 0x000008, "Wrong alignment on WBP_IngameMenu_Chest_C_Get_Inventory_Top_Focust_Target");
static_assert(sizeof(WBP_IngameMenu_Chest_C_Get_Inventory_Top_Focust_Target) == 0x000010, "Wrong size on WBP_IngameMenu_Chest_C_Get_Inventory_Top_Focust_Target");
static_assert(offsetof(WBP_IngameMenu_Chest_C_Get_Inventory_Top_Focust_Target, FocusTarget) == 0x000000, "Member 'WBP_IngameMenu_Chest_C_Get_Inventory_Top_Focust_Target::FocusTarget' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_C_Get_Inventory_Top_Focust_Target, CallFunc_GetInventoryTopFocustTarget_FocusTarget) == 0x000008, "Member 'WBP_IngameMenu_Chest_C_Get_Inventory_Top_Focust_Target::CallFunc_GetInventoryTopFocustTarget_FocusTarget' has a wrong offset!");

// Function WBP_IngameMenu_Chest.WBP_IngameMenu_Chest_C.GetInventoryLastHoveredFocusTarget
// 0x0010 (0x0010 - 0x0000)
struct WBP_IngameMenu_Chest_C_GetInventoryLastHoveredFocusTarget final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetInventoryLastHoveredFocusTarget_Widget; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_IngameMenu_Chest_C_GetInventoryLastHoveredFocusTarget) == 0x000008, "Wrong alignment on WBP_IngameMenu_Chest_C_GetInventoryLastHoveredFocusTarget");
static_assert(sizeof(WBP_IngameMenu_Chest_C_GetInventoryLastHoveredFocusTarget) == 0x000010, "Wrong size on WBP_IngameMenu_Chest_C_GetInventoryLastHoveredFocusTarget");
static_assert(offsetof(WBP_IngameMenu_Chest_C_GetInventoryLastHoveredFocusTarget, Widget) == 0x000000, "Member 'WBP_IngameMenu_Chest_C_GetInventoryLastHoveredFocusTarget::Widget' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_C_GetInventoryLastHoveredFocusTarget, CallFunc_GetInventoryLastHoveredFocusTarget_Widget) == 0x000008, "Member 'WBP_IngameMenu_Chest_C_GetInventoryLastHoveredFocusTarget::CallFunc_GetInventoryLastHoveredFocusTarget_Widget' has a wrong offset!");

// Function WBP_IngameMenu_Chest.WBP_IngameMenu_Chest_C.GetTargetContainerLastHoveredFocusTarget
// 0x0018 (0x0018 - 0x0000)
struct WBP_IngameMenu_Chest_C_GetTargetContainerLastHoveredFocusTarget final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_PalItemSlotButtonBase_C*           CallFunc_GetLastHoveredSlotButton_SlotButton;      // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_IngameMenu_Chest_C_GetTargetContainerLastHoveredFocusTarget) == 0x000008, "Wrong alignment on WBP_IngameMenu_Chest_C_GetTargetContainerLastHoveredFocusTarget");
static_assert(sizeof(WBP_IngameMenu_Chest_C_GetTargetContainerLastHoveredFocusTarget) == 0x000018, "Wrong size on WBP_IngameMenu_Chest_C_GetTargetContainerLastHoveredFocusTarget");
static_assert(offsetof(WBP_IngameMenu_Chest_C_GetTargetContainerLastHoveredFocusTarget, Widget) == 0x000000, "Member 'WBP_IngameMenu_Chest_C_GetTargetContainerLastHoveredFocusTarget::Widget' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_C_GetTargetContainerLastHoveredFocusTarget, CallFunc_GetLastHoveredSlotButton_SlotButton) == 0x000008, "Member 'WBP_IngameMenu_Chest_C_GetTargetContainerLastHoveredFocusTarget::CallFunc_GetLastHoveredSlotButton_SlotButton' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_C_GetTargetContainerLastHoveredFocusTarget, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_IngameMenu_Chest_C_GetTargetContainerLastHoveredFocusTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_IngameMenu_Chest.WBP_IngameMenu_Chest_C.GetTargetContainerTopFocustTarget
// 0x0010 (0x0010 - 0x0000)
struct WBP_IngameMenu_Chest_C_GetTargetContainerTopFocustTarget final
{
public:
	class UWidget*                                FocusTarget;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetFocusTarget_target;                    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_IngameMenu_Chest_C_GetTargetContainerTopFocustTarget) == 0x000008, "Wrong alignment on WBP_IngameMenu_Chest_C_GetTargetContainerTopFocustTarget");
static_assert(sizeof(WBP_IngameMenu_Chest_C_GetTargetContainerTopFocustTarget) == 0x000010, "Wrong size on WBP_IngameMenu_Chest_C_GetTargetContainerTopFocustTarget");
static_assert(offsetof(WBP_IngameMenu_Chest_C_GetTargetContainerTopFocustTarget, FocusTarget) == 0x000000, "Member 'WBP_IngameMenu_Chest_C_GetTargetContainerTopFocustTarget::FocusTarget' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_C_GetTargetContainerTopFocustTarget, CallFunc_GetFocusTarget_target) == 0x000008, "Member 'WBP_IngameMenu_Chest_C_GetTargetContainerTopFocustTarget::CallFunc_GetFocusTarget_target' has a wrong offset!");

// Function WBP_IngameMenu_Chest.WBP_IngameMenu_Chest_C.OnHoveredInventorySlot__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_IngameMenu_Chest_C_OnHoveredInventorySlot__DelegateSignature final
{
public:
	class UWBP_PalItemSlotButtonBase_C*           SlotButton;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_IngameMenu_Chest_C_OnHoveredInventorySlot__DelegateSignature) == 0x000008, "Wrong alignment on WBP_IngameMenu_Chest_C_OnHoveredInventorySlot__DelegateSignature");
static_assert(sizeof(WBP_IngameMenu_Chest_C_OnHoveredInventorySlot__DelegateSignature) == 0x000008, "Wrong size on WBP_IngameMenu_Chest_C_OnHoveredInventorySlot__DelegateSignature");
static_assert(offsetof(WBP_IngameMenu_Chest_C_OnHoveredInventorySlot__DelegateSignature, SlotButton) == 0x000000, "Member 'WBP_IngameMenu_Chest_C_OnHoveredInventorySlot__DelegateSignature::SlotButton' has a wrong offset!");

// Function WBP_IngameMenu_Chest.WBP_IngameMenu_Chest_C.OnHoveredTargetContainerSlot__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_IngameMenu_Chest_C_OnHoveredTargetContainerSlot__DelegateSignature final
{
public:
	class UWBP_PalItemSlotButtonBase_C*           SlotButton;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_IngameMenu_Chest_C_OnHoveredTargetContainerSlot__DelegateSignature) == 0x000008, "Wrong alignment on WBP_IngameMenu_Chest_C_OnHoveredTargetContainerSlot__DelegateSignature");
static_assert(sizeof(WBP_IngameMenu_Chest_C_OnHoveredTargetContainerSlot__DelegateSignature) == 0x000008, "Wrong size on WBP_IngameMenu_Chest_C_OnHoveredTargetContainerSlot__DelegateSignature");
static_assert(offsetof(WBP_IngameMenu_Chest_C_OnHoveredTargetContainerSlot__DelegateSignature, SlotButton) == 0x000000, "Member 'WBP_IngameMenu_Chest_C_OnHoveredTargetContainerSlot__DelegateSignature::SlotButton' has a wrong offset!");

// Function WBP_IngameMenu_Chest.WBP_IngameMenu_Chest_C.OnLeftClickedTargetContainerSlot
// 0x0030 (0x0030 - 0x0000)
struct WBP_IngameMenu_Chest_C_OnLeftClickedTargetContainerSlot final
{
public:
	class UWBP_PalItemSlotButtonBase_C*           ButtonBase;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EPalItemSlotPressType                         PressType;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_567B[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalItemSlot*                           CallFunc_GetTargetSlot_targetSlot;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPalItemSlotId                         CallFunc_GetSlotId_ReturnValue;                    // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_IngameMenu_Chest_C_OnLeftClickedTargetContainerSlot) == 0x000008, "Wrong alignment on WBP_IngameMenu_Chest_C_OnLeftClickedTargetContainerSlot");
static_assert(sizeof(WBP_IngameMenu_Chest_C_OnLeftClickedTargetContainerSlot) == 0x000030, "Wrong size on WBP_IngameMenu_Chest_C_OnLeftClickedTargetContainerSlot");
static_assert(offsetof(WBP_IngameMenu_Chest_C_OnLeftClickedTargetContainerSlot, ButtonBase) == 0x000000, "Member 'WBP_IngameMenu_Chest_C_OnLeftClickedTargetContainerSlot::ButtonBase' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_C_OnLeftClickedTargetContainerSlot, PressType) == 0x000008, "Member 'WBP_IngameMenu_Chest_C_OnLeftClickedTargetContainerSlot::PressType' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_C_OnLeftClickedTargetContainerSlot, CallFunc_GetTargetSlot_targetSlot) == 0x000010, "Member 'WBP_IngameMenu_Chest_C_OnLeftClickedTargetContainerSlot::CallFunc_GetTargetSlot_targetSlot' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_C_OnLeftClickedTargetContainerSlot, CallFunc_GetSlotId_ReturnValue) == 0x000018, "Member 'WBP_IngameMenu_Chest_C_OnLeftClickedTargetContainerSlot::CallFunc_GetSlotId_ReturnValue' has a wrong offset!");

// Function WBP_IngameMenu_Chest.WBP_IngameMenu_Chest_C.SetTagetContainerDisplayName
// 0x0018 (0x0018 - 0x0000)
struct WBP_IngameMenu_Chest_C_SetTagetContainerDisplayName final
{
public:
	class FText                                   TargetContainerName;                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_IngameMenu_Chest_C_SetTagetContainerDisplayName) == 0x000008, "Wrong alignment on WBP_IngameMenu_Chest_C_SetTagetContainerDisplayName");
static_assert(sizeof(WBP_IngameMenu_Chest_C_SetTagetContainerDisplayName) == 0x000018, "Wrong size on WBP_IngameMenu_Chest_C_SetTagetContainerDisplayName");
static_assert(offsetof(WBP_IngameMenu_Chest_C_SetTagetContainerDisplayName, TargetContainerName) == 0x000000, "Member 'WBP_IngameMenu_Chest_C_SetTagetContainerDisplayName::TargetContainerName' has a wrong offset!");

// Function WBP_IngameMenu_Chest.WBP_IngameMenu_Chest_C.Setup
// 0x0030 (0x0030 - 0x0000)
struct WBP_IngameMenu_Chest_C_Setup final
{
public:
	class UBP_PalInventoryModel_C*                Param_Model;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalItemContainer*                      TargetContainer;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_567C[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalPlayerInventoryData*                CallFunc_GetLocalInventoryData_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalItemContainer*                      CallFunc_TryGetContainerFromInventoryType_OutContainer; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetContainerFromInventoryType_ReturnValue; // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_IngameMenu_Chest_C_Setup) == 0x000008, "Wrong alignment on WBP_IngameMenu_Chest_C_Setup");
static_assert(sizeof(WBP_IngameMenu_Chest_C_Setup) == 0x000030, "Wrong size on WBP_IngameMenu_Chest_C_Setup");
static_assert(offsetof(WBP_IngameMenu_Chest_C_Setup, Param_Model) == 0x000000, "Member 'WBP_IngameMenu_Chest_C_Setup::Param_Model' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_C_Setup, TargetContainer) == 0x000008, "Member 'WBP_IngameMenu_Chest_C_Setup::TargetContainer' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_C_Setup, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_IngameMenu_Chest_C_Setup::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_C_Setup, CallFunc_GetLocalInventoryData_ReturnValue) == 0x000018, "Member 'WBP_IngameMenu_Chest_C_Setup::CallFunc_GetLocalInventoryData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_C_Setup, CallFunc_TryGetContainerFromInventoryType_OutContainer) == 0x000020, "Member 'WBP_IngameMenu_Chest_C_Setup::CallFunc_TryGetContainerFromInventoryType_OutContainer' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_C_Setup, CallFunc_TryGetContainerFromInventoryType_ReturnValue) == 0x000028, "Member 'WBP_IngameMenu_Chest_C_Setup::CallFunc_TryGetContainerFromInventoryType_ReturnValue' has a wrong offset!");

// Function WBP_IngameMenu_Chest.WBP_IngameMenu_Chest_C.SetupTargetItemContainer
// 0x0020 (0x0020 - 0x0000)
struct WBP_IngameMenu_Chest_C_SetupTargetItemContainer final
{
public:
	class UPalItemContainer*                      TargetContainer;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_PalItemSlotButtonBase_C* ButtonBase, EPalItemSlotPressType PressType)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_PalItemListBlock_C*                CallFunc_AddItemContainer_createdBlock;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_IngameMenu_Chest_C_SetupTargetItemContainer) == 0x000008, "Wrong alignment on WBP_IngameMenu_Chest_C_SetupTargetItemContainer");
static_assert(sizeof(WBP_IngameMenu_Chest_C_SetupTargetItemContainer) == 0x000020, "Wrong size on WBP_IngameMenu_Chest_C_SetupTargetItemContainer");
static_assert(offsetof(WBP_IngameMenu_Chest_C_SetupTargetItemContainer, TargetContainer) == 0x000000, "Member 'WBP_IngameMenu_Chest_C_SetupTargetItemContainer::TargetContainer' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_C_SetupTargetItemContainer, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_IngameMenu_Chest_C_SetupTargetItemContainer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_IngameMenu_Chest_C_SetupTargetItemContainer, CallFunc_AddItemContainer_createdBlock) == 0x000018, "Member 'WBP_IngameMenu_Chest_C_SetupTargetItemContainer::CallFunc_AddItemContainer_createdBlock' has a wrong offset!");

}

