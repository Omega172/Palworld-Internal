#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PalIncidentInvaderVisitorNPC

#include "Basic.hpp"

#include "BP_PalIncidentInvaderBase_classes.hpp"
#include "Pal_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PalIncidentInvaderVisitorNPC.BP_PalIncidentInvaderVisitorNPC_C
// 0x0020 (0x0370 - 0x0350)
class UBP_PalIncidentInvaderVisitorNPC_C final : public UBP_PalIncidentInvaderBase_C
{
public:
	class UClass*                                 GuardmanNPCAIControllerClass;                      // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Formation_Width;                                   // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FormationSpace_X;                                  // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FormationSpace_Y;                                  // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CalcFormationOffset(int32 Param_Index, int32 Row, struct FVector* Offset);
	void EndProc();
	void Get_Character_Location_Type(EPalCharacterLocationType* CharacterLocationType);
	void Get_Chosen_Row_Data(struct FPalVisitorNPCDatabaseRow* ChosenRowData);
	bool GetInvaderStartPoint(struct FVector* Result);
	void IsSquad(bool* Result);
	void OnAllCharacterSpawned(TArray<class APalAIController*>& Param_MemberController);
	void StartProc();

	TSubclassOf<class APalAIController> GetNPCAIControllerClass(const struct FPalInvaderSpawnCharacterParameter& SpawnParameter) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PalIncidentInvaderVisitorNPC_C">();
	}
	static class UBP_PalIncidentInvaderVisitorNPC_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_PalIncidentInvaderVisitorNPC_C>();
	}
};
static_assert(alignof(UBP_PalIncidentInvaderVisitorNPC_C) == 0x000010, "Wrong alignment on UBP_PalIncidentInvaderVisitorNPC_C");
static_assert(sizeof(UBP_PalIncidentInvaderVisitorNPC_C) == 0x000370, "Wrong size on UBP_PalIncidentInvaderVisitorNPC_C");
static_assert(offsetof(UBP_PalIncidentInvaderVisitorNPC_C, GuardmanNPCAIControllerClass) == 0x000348, "Member 'UBP_PalIncidentInvaderVisitorNPC_C::GuardmanNPCAIControllerClass' has a wrong offset!");
static_assert(offsetof(UBP_PalIncidentInvaderVisitorNPC_C, Formation_Width) == 0x000350, "Member 'UBP_PalIncidentInvaderVisitorNPC_C::Formation_Width' has a wrong offset!");
static_assert(offsetof(UBP_PalIncidentInvaderVisitorNPC_C, FormationSpace_X) == 0x000358, "Member 'UBP_PalIncidentInvaderVisitorNPC_C::FormationSpace_X' has a wrong offset!");
static_assert(offsetof(UBP_PalIncidentInvaderVisitorNPC_C, FormationSpace_Y) == 0x000360, "Member 'UBP_PalIncidentInvaderVisitorNPC_C::FormationSpace_Y' has a wrong offset!");

}

