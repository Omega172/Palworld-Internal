#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPCCampSpawnerAntiAirBase

#include "Basic.hpp"

#include "F_NPCCampPreset_structs.hpp"
#include "Engine_structs.hpp"
#include "Pal_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_NPCCampSpawnerAntiAirBase.BP_NPCCampSpawnerAntiAirBase_C
// 0x0088 (0x0338 - 0x02B0)
class ABP_NPCCampSpawnerAntiAirBase_C final : public APalNPCCampSpawnerBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPalLimitVolumeSphereComponent*         PalLimitVolumeSphere;                              // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DebugMesh;                                         // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        Probability;                                       // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_NPCCampPresetBase_C*                CampObject;                                        // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class FName                                   RewardName;                                        // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RespawnTime_RealMinutes;                           // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           TimerHand;                                         // 0x02E8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          SpawnPossible;                                     // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_1EE3[0x7];                                     // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RespawnDistance_FromPlayer;                        // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DisableDistance_FromBaseCamp;                      // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_NPCCampPreset                       Preset;                                            // 0x0308(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UPalIndividualCharacterHandle*>  CampEnemys;                                        // 0x0318(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, AdvancedDisplay)
	bool                                          LoadCamp;                                          // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_1EE4[0x7];                                     // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 PresetClass;                                       // 0x0330(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void CheckWorldLoadComplete(bool* Loaded);
	void CREATEDELEGATE_PROXYFUNCTION_0(class UPalIndividualCharacterHandle* NewParam);
	void ExecuteUbergraph_BP_NPCCampSpawnerAntiAirBase(int32 EntryPoint);
	class FName GetRewardName();
	void OnEnemyDead(const struct FPalDeadInfo& DeadInfo);
	void OnEnemySpawned(class UPalIndividualCharacterHandle*& SpawnHandle);
	void OnReceivedReward();
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveTick(float DeltaSeconds);
	void ResetCamp();
	void SetSpawnAble();
	void SetupCampStatus();
	void Start_Reset_Timer(double RespawnTime);
	void TryCampSpawn();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_NPCCampSpawnerAntiAirBase_C">();
	}
	static class ABP_NPCCampSpawnerAntiAirBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_NPCCampSpawnerAntiAirBase_C>();
	}
};
static_assert(alignof(ABP_NPCCampSpawnerAntiAirBase_C) == 0x000008, "Wrong alignment on ABP_NPCCampSpawnerAntiAirBase_C");
static_assert(sizeof(ABP_NPCCampSpawnerAntiAirBase_C) == 0x000338, "Wrong size on ABP_NPCCampSpawnerAntiAirBase_C");
static_assert(offsetof(ABP_NPCCampSpawnerAntiAirBase_C, UberGraphFrame) == 0x0002B0, "Member 'ABP_NPCCampSpawnerAntiAirBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_NPCCampSpawnerAntiAirBase_C, PalLimitVolumeSphere) == 0x0002B8, "Member 'ABP_NPCCampSpawnerAntiAirBase_C::PalLimitVolumeSphere' has a wrong offset!");
static_assert(offsetof(ABP_NPCCampSpawnerAntiAirBase_C, DebugMesh) == 0x0002C0, "Member 'ABP_NPCCampSpawnerAntiAirBase_C::DebugMesh' has a wrong offset!");
static_assert(offsetof(ABP_NPCCampSpawnerAntiAirBase_C, Probability) == 0x0002C8, "Member 'ABP_NPCCampSpawnerAntiAirBase_C::Probability' has a wrong offset!");
static_assert(offsetof(ABP_NPCCampSpawnerAntiAirBase_C, CampObject) == 0x0002D0, "Member 'ABP_NPCCampSpawnerAntiAirBase_C::CampObject' has a wrong offset!");
static_assert(offsetof(ABP_NPCCampSpawnerAntiAirBase_C, RewardName) == 0x0002D8, "Member 'ABP_NPCCampSpawnerAntiAirBase_C::RewardName' has a wrong offset!");
static_assert(offsetof(ABP_NPCCampSpawnerAntiAirBase_C, RespawnTime_RealMinutes) == 0x0002E0, "Member 'ABP_NPCCampSpawnerAntiAirBase_C::RespawnTime_RealMinutes' has a wrong offset!");
static_assert(offsetof(ABP_NPCCampSpawnerAntiAirBase_C, TimerHand) == 0x0002E8, "Member 'ABP_NPCCampSpawnerAntiAirBase_C::TimerHand' has a wrong offset!");
static_assert(offsetof(ABP_NPCCampSpawnerAntiAirBase_C, SpawnPossible) == 0x0002F0, "Member 'ABP_NPCCampSpawnerAntiAirBase_C::SpawnPossible' has a wrong offset!");
static_assert(offsetof(ABP_NPCCampSpawnerAntiAirBase_C, RespawnDistance_FromPlayer) == 0x0002F8, "Member 'ABP_NPCCampSpawnerAntiAirBase_C::RespawnDistance_FromPlayer' has a wrong offset!");
static_assert(offsetof(ABP_NPCCampSpawnerAntiAirBase_C, DisableDistance_FromBaseCamp) == 0x000300, "Member 'ABP_NPCCampSpawnerAntiAirBase_C::DisableDistance_FromBaseCamp' has a wrong offset!");
static_assert(offsetof(ABP_NPCCampSpawnerAntiAirBase_C, Preset) == 0x000308, "Member 'ABP_NPCCampSpawnerAntiAirBase_C::Preset' has a wrong offset!");
static_assert(offsetof(ABP_NPCCampSpawnerAntiAirBase_C, CampEnemys) == 0x000318, "Member 'ABP_NPCCampSpawnerAntiAirBase_C::CampEnemys' has a wrong offset!");
static_assert(offsetof(ABP_NPCCampSpawnerAntiAirBase_C, LoadCamp) == 0x000328, "Member 'ABP_NPCCampSpawnerAntiAirBase_C::LoadCamp' has a wrong offset!");
static_assert(offsetof(ABP_NPCCampSpawnerAntiAirBase_C, PresetClass) == 0x000330, "Member 'ABP_NPCCampSpawnerAntiAirBase_C::PresetClass' has a wrong offset!");

}

