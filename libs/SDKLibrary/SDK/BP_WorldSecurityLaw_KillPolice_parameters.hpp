#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WorldSecurityLaw_KillPolice

#include "Basic.hpp"

#include "Pal_structs.hpp"


namespace SDK::Params
{

// Function BP_WorldSecurityLaw_KillPolice.BP_WorldSecurityLaw_KillPolice_C.Condition
// 0x00A8 (0x00A8 - 0x0000)
struct BP_WorldSecurityLaw_KillPolice_C_Condition final
{
public:
	struct FPalDeadInfo                           DeadInfo;                                          // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	class UPalIndividualCharacterHandle*          CriminalHandle;                                    // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D84[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalCharacterParameterComponent*        AttackerCharacterParameter;                        // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPalCharacterParameterComponent*        DefenderCharacterParameter;                        // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCharacterActor_bValid;             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D85[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalCharacterParameterComponent*        CallFunc_IsValidCharacterActor_CharacterParameter; // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCharacterActor_bValid_1;           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D86[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalCharacterParameterComponent*        CallFunc_IsValidCharacterActor_CharacterParameter_1; // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWildNPC_ReturnValue;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPalMonster_ReturnValue;                 // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D87[0x6];                                     // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalRideMarkerComponent*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRiding_ReturnValue;                     // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOtomo_ReturnValue;                      // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWildNPC_ReturnValue_1;                  // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPalOrganizationType                          CallFunc_GetOrganizationTypeByIndividualHandle_ReturnValue; // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPolice_bCitizen;                        // 0x00A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WorldSecurityLaw_KillPolice_C_Condition) == 0x000008, "Wrong alignment on BP_WorldSecurityLaw_KillPolice_C_Condition");
static_assert(sizeof(BP_WorldSecurityLaw_KillPolice_C_Condition) == 0x0000A8, "Wrong size on BP_WorldSecurityLaw_KillPolice_C_Condition");
static_assert(offsetof(BP_WorldSecurityLaw_KillPolice_C_Condition, DeadInfo) == 0x000000, "Member 'BP_WorldSecurityLaw_KillPolice_C_Condition::DeadInfo' has a wrong offset!");
static_assert(offsetof(BP_WorldSecurityLaw_KillPolice_C_Condition, CriminalHandle) == 0x000050, "Member 'BP_WorldSecurityLaw_KillPolice_C_Condition::CriminalHandle' has a wrong offset!");
static_assert(offsetof(BP_WorldSecurityLaw_KillPolice_C_Condition, ReturnValue) == 0x000058, "Member 'BP_WorldSecurityLaw_KillPolice_C_Condition::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldSecurityLaw_KillPolice_C_Condition, AttackerCharacterParameter) == 0x000060, "Member 'BP_WorldSecurityLaw_KillPolice_C_Condition::AttackerCharacterParameter' has a wrong offset!");
static_assert(offsetof(BP_WorldSecurityLaw_KillPolice_C_Condition, DefenderCharacterParameter) == 0x000068, "Member 'BP_WorldSecurityLaw_KillPolice_C_Condition::DefenderCharacterParameter' has a wrong offset!");
static_assert(offsetof(BP_WorldSecurityLaw_KillPolice_C_Condition, CallFunc_IsValidCharacterActor_bValid) == 0x000070, "Member 'BP_WorldSecurityLaw_KillPolice_C_Condition::CallFunc_IsValidCharacterActor_bValid' has a wrong offset!");
static_assert(offsetof(BP_WorldSecurityLaw_KillPolice_C_Condition, CallFunc_IsValidCharacterActor_CharacterParameter) == 0x000078, "Member 'BP_WorldSecurityLaw_KillPolice_C_Condition::CallFunc_IsValidCharacterActor_CharacterParameter' has a wrong offset!");
static_assert(offsetof(BP_WorldSecurityLaw_KillPolice_C_Condition, CallFunc_IsValidCharacterActor_bValid_1) == 0x000080, "Member 'BP_WorldSecurityLaw_KillPolice_C_Condition::CallFunc_IsValidCharacterActor_bValid_1' has a wrong offset!");
static_assert(offsetof(BP_WorldSecurityLaw_KillPolice_C_Condition, CallFunc_IsValidCharacterActor_CharacterParameter_1) == 0x000088, "Member 'BP_WorldSecurityLaw_KillPolice_C_Condition::CallFunc_IsValidCharacterActor_CharacterParameter_1' has a wrong offset!");
static_assert(offsetof(BP_WorldSecurityLaw_KillPolice_C_Condition, CallFunc_IsWildNPC_ReturnValue) == 0x000090, "Member 'BP_WorldSecurityLaw_KillPolice_C_Condition::CallFunc_IsWildNPC_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldSecurityLaw_KillPolice_C_Condition, CallFunc_IsPalMonster_ReturnValue) == 0x000091, "Member 'BP_WorldSecurityLaw_KillPolice_C_Condition::CallFunc_IsPalMonster_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldSecurityLaw_KillPolice_C_Condition, CallFunc_GetComponentByClass_ReturnValue) == 0x000098, "Member 'BP_WorldSecurityLaw_KillPolice_C_Condition::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldSecurityLaw_KillPolice_C_Condition, CallFunc_Not_PreBool_ReturnValue) == 0x0000A0, "Member 'BP_WorldSecurityLaw_KillPolice_C_Condition::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldSecurityLaw_KillPolice_C_Condition, CallFunc_IsRiding_ReturnValue) == 0x0000A1, "Member 'BP_WorldSecurityLaw_KillPolice_C_Condition::CallFunc_IsRiding_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldSecurityLaw_KillPolice_C_Condition, CallFunc_BooleanAND_ReturnValue) == 0x0000A2, "Member 'BP_WorldSecurityLaw_KillPolice_C_Condition::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldSecurityLaw_KillPolice_C_Condition, CallFunc_IsValid_ReturnValue) == 0x0000A3, "Member 'BP_WorldSecurityLaw_KillPolice_C_Condition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldSecurityLaw_KillPolice_C_Condition, CallFunc_IsOtomo_ReturnValue) == 0x0000A4, "Member 'BP_WorldSecurityLaw_KillPolice_C_Condition::CallFunc_IsOtomo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldSecurityLaw_KillPolice_C_Condition, CallFunc_IsWildNPC_ReturnValue_1) == 0x0000A5, "Member 'BP_WorldSecurityLaw_KillPolice_C_Condition::CallFunc_IsWildNPC_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WorldSecurityLaw_KillPolice_C_Condition, CallFunc_GetOrganizationTypeByIndividualHandle_ReturnValue) == 0x0000A6, "Member 'BP_WorldSecurityLaw_KillPolice_C_Condition::CallFunc_GetOrganizationTypeByIndividualHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldSecurityLaw_KillPolice_C_Condition, CallFunc_IsPolice_bCitizen) == 0x0000A7, "Member 'BP_WorldSecurityLaw_KillPolice_C_Condition::CallFunc_IsPolice_bCitizen' has a wrong offset!");

// Function BP_WorldSecurityLaw_KillPolice.BP_WorldSecurityLaw_KillPolice_C.IsPolice
// 0x0004 (0x0004 - 0x0000)
struct BP_WorldSecurityLaw_KillPolice_C_IsPolice final
{
public:
	EPalOrganizationType                          OrganizationType;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCitizen;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WorldSecurityLaw_KillPolice_C_IsPolice) == 0x000001, "Wrong alignment on BP_WorldSecurityLaw_KillPolice_C_IsPolice");
static_assert(sizeof(BP_WorldSecurityLaw_KillPolice_C_IsPolice) == 0x000004, "Wrong size on BP_WorldSecurityLaw_KillPolice_C_IsPolice");
static_assert(offsetof(BP_WorldSecurityLaw_KillPolice_C_IsPolice, OrganizationType) == 0x000000, "Member 'BP_WorldSecurityLaw_KillPolice_C_IsPolice::OrganizationType' has a wrong offset!");
static_assert(offsetof(BP_WorldSecurityLaw_KillPolice_C_IsPolice, bCitizen) == 0x000001, "Member 'BP_WorldSecurityLaw_KillPolice_C_IsPolice::bCitizen' has a wrong offset!");
static_assert(offsetof(BP_WorldSecurityLaw_KillPolice_C_IsPolice, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_WorldSecurityLaw_KillPolice_C_IsPolice::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldSecurityLaw_KillPolice_C_IsPolice, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000003, "Member 'BP_WorldSecurityLaw_KillPolice_C_IsPolice::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function BP_WorldSecurityLaw_KillPolice.BP_WorldSecurityLaw_KillPolice_C.IsValidCharacterActor
// 0x0038 (0x0038 - 0x0000)
struct BP_WorldSecurityLaw_KillPolice_C_IsValidCharacterActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bValid;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D88[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalCharacterParameterComponent*        CharacterParameter;                                // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPalCharacterParameterComponent*        Parameter;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D89[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalCharacterParameterComponent*        CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WorldSecurityLaw_KillPolice_C_IsValidCharacterActor) == 0x000008, "Wrong alignment on BP_WorldSecurityLaw_KillPolice_C_IsValidCharacterActor");
static_assert(sizeof(BP_WorldSecurityLaw_KillPolice_C_IsValidCharacterActor) == 0x000038, "Wrong size on BP_WorldSecurityLaw_KillPolice_C_IsValidCharacterActor");
static_assert(offsetof(BP_WorldSecurityLaw_KillPolice_C_IsValidCharacterActor, Actor) == 0x000000, "Member 'BP_WorldSecurityLaw_KillPolice_C_IsValidCharacterActor::Actor' has a wrong offset!");
static_assert(offsetof(BP_WorldSecurityLaw_KillPolice_C_IsValidCharacterActor, bValid) == 0x000008, "Member 'BP_WorldSecurityLaw_KillPolice_C_IsValidCharacterActor::bValid' has a wrong offset!");
static_assert(offsetof(BP_WorldSecurityLaw_KillPolice_C_IsValidCharacterActor, CharacterParameter) == 0x000010, "Member 'BP_WorldSecurityLaw_KillPolice_C_IsValidCharacterActor::CharacterParameter' has a wrong offset!");
static_assert(offsetof(BP_WorldSecurityLaw_KillPolice_C_IsValidCharacterActor, Parameter) == 0x000018, "Member 'BP_WorldSecurityLaw_KillPolice_C_IsValidCharacterActor::Parameter' has a wrong offset!");
static_assert(offsetof(BP_WorldSecurityLaw_KillPolice_C_IsValidCharacterActor, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_WorldSecurityLaw_KillPolice_C_IsValidCharacterActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldSecurityLaw_KillPolice_C_IsValidCharacterActor, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'BP_WorldSecurityLaw_KillPolice_C_IsValidCharacterActor::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WorldSecurityLaw_KillPolice_C_IsValidCharacterActor, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'BP_WorldSecurityLaw_KillPolice_C_IsValidCharacterActor::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WorldSecurityLaw_KillPolice_C_IsValidCharacterActor, CallFunc_IsValid_ReturnValue_2) == 0x000031, "Member 'BP_WorldSecurityLaw_KillPolice_C_IsValidCharacterActor::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

}

