#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ItemInfo_ForItemBooth

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ItemInfo_ForItemBooth.WBP_ItemInfo_ForItemBooth_C
// 0x0018 (0x0290 - 0x0278)
class UWBP_ItemInfo_ForItemBooth_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWBP_InventoryEquipment_ItemInfo_C*     WBP_InventoryEquipment_ItemInfo_Cost;              // 0x0280(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_InventoryEquipment_ItemInfo_C*     WBP_InventoryEquipment_ItemInfo_Product;           // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_ItemInfo_ForItemBooth(int32 EntryPoint);
	void SetItemPairInfo(const struct FPalItemAndNum& Product, const struct FPalItemAndNum& Cost);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ItemInfo_ForItemBooth_C">();
	}
	static class UWBP_ItemInfo_ForItemBooth_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ItemInfo_ForItemBooth_C>();
	}
};
static_assert(alignof(UWBP_ItemInfo_ForItemBooth_C) == 0x000008, "Wrong alignment on UWBP_ItemInfo_ForItemBooth_C");
static_assert(sizeof(UWBP_ItemInfo_ForItemBooth_C) == 0x000290, "Wrong size on UWBP_ItemInfo_ForItemBooth_C");
static_assert(offsetof(UWBP_ItemInfo_ForItemBooth_C, UberGraphFrame) == 0x000278, "Member 'UWBP_ItemInfo_ForItemBooth_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ItemInfo_ForItemBooth_C, WBP_InventoryEquipment_ItemInfo_Cost) == 0x000280, "Member 'UWBP_ItemInfo_ForItemBooth_C::WBP_InventoryEquipment_ItemInfo_Cost' has a wrong offset!");
static_assert(offsetof(UWBP_ItemInfo_ForItemBooth_C, WBP_InventoryEquipment_ItemInfo_Product) == 0x000288, "Member 'UWBP_ItemInfo_ForItemBooth_C::WBP_InventoryEquipment_ItemInfo_Product' has a wrong offset!");

}

