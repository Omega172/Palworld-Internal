#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Trading_Pal_Buy

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "Pal_structs.hpp"


namespace SDK::Params
{

// Function WBP_Trading_Pal_Buy.WBP_Trading_Pal_Buy_C.CheckTradeable
// 0x0090 (0x0090 - 0x0000)
struct WBP_Trading_Pal_Buy_C_CheckTradeable final
{
public:
	class UPalPlayerInventoryData*                CallFunc_GetLocalInventoryData_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPalPalBoothTradeInfo>          CallFunc_GetTradeInfos_OutTradeInfo;               // 0x0008(0x0010)(ReferenceParm)
	struct FPalPalBoothTradeInfo                  CallFunc_Array_Get_Item;                           // 0x0018(0x0070)()
	int32                                         CallFunc_CountItemNum_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Pal_Buy_C_CheckTradeable) == 0x000008, "Wrong alignment on WBP_Trading_Pal_Buy_C_CheckTradeable");
static_assert(sizeof(WBP_Trading_Pal_Buy_C_CheckTradeable) == 0x000090, "Wrong size on WBP_Trading_Pal_Buy_C_CheckTradeable");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_CheckTradeable, CallFunc_GetLocalInventoryData_ReturnValue) == 0x000000, "Member 'WBP_Trading_Pal_Buy_C_CheckTradeable::CallFunc_GetLocalInventoryData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_CheckTradeable, CallFunc_GetTradeInfos_OutTradeInfo) == 0x000008, "Member 'WBP_Trading_Pal_Buy_C_CheckTradeable::CallFunc_GetTradeInfos_OutTradeInfo' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_CheckTradeable, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_Trading_Pal_Buy_C_CheckTradeable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_CheckTradeable, CallFunc_CountItemNum_ReturnValue) == 0x000088, "Member 'WBP_Trading_Pal_Buy_C_CheckTradeable::CallFunc_CountItemNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_CheckTradeable, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00008C, "Member 'WBP_Trading_Pal_Buy_C_CheckTradeable::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_CheckTradeable, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00008D, "Member 'WBP_Trading_Pal_Buy_C_CheckTradeable::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function WBP_Trading_Pal_Buy.WBP_Trading_Pal_Buy_C.ExecuteUbergraph_WBP_Trading_Pal_Buy
// 0x00F0 (0x00F0 - 0x0000)
struct WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPalIndividualCharacterSlot* Slot, class UPalIndividualCharacterHandle* LastHandle)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 Index)>                  K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_656B[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_Trading_Item_List_C*>       K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference)
	TDelegate<void(int32 Index)>                  K2Node_CreateDelegate_OutputDelegate_2;            // 0x0048(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 Index)>                  K2Node_CreateDelegate_OutputDelegate_3;            // 0x0058(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_Trading_Item_List_C*               CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_656C[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalHUDDispatchParameterBase*           CallFunc_GetParam_ReturnValue;                     // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalHUDDispatchParameter_MapObject*     K2Node_DynamicCast_AsPal_HUDDispatch_Parameter_Map_Object; // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_656D[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalMapObjectPalBoothModel*             K2Node_DynamicCast_AsPal_Map_Object_Pal_Booth_Model; // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_656E[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalMapObjectCharacterContainerModule*  CallFunc_GetCharacterContainerModule_ReturnValue;  // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_656F[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIndividualCharacterContainer*       CallFunc_TryGetContainer_OutContainer;             // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetContainer_ReturnValue;              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6570[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPalIndividualCharacterSlot*>    CallFunc_GetSlots_ReturnValue;                     // 0x00C0(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6571[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIndividualCharacterSlot*            CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy) == 0x000008, "Wrong alignment on WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy");
static_assert(sizeof(WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy) == 0x0000F0, "Wrong size on WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy, EntryPoint) == 0x000000, "Member 'WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy, Temp_int_Array_Index_Variable) == 0x000014, "Member 'WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy, K2Node_MakeArray_Array) == 0x000038, "Member 'WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy, K2Node_CreateDelegate_OutputDelegate_2) == 0x000048, "Member 'WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy, K2Node_CreateDelegate_OutputDelegate_3) == 0x000058, "Member 'WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy, CallFunc_Array_Get_Item) == 0x000068, "Member 'WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy, CallFunc_GetParam_ReturnValue) == 0x000078, "Member 'WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy::CallFunc_GetParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy, K2Node_DynamicCast_AsPal_HUDDispatch_Parameter_Map_Object) == 0x000080, "Member 'WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy::K2Node_DynamicCast_AsPal_HUDDispatch_Parameter_Map_Object' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy, K2Node_DynamicCast_AsPal_Map_Object_Pal_Booth_Model) == 0x000090, "Member 'WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy::K2Node_DynamicCast_AsPal_Map_Object_Pal_Booth_Model' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy, Temp_int_Loop_Counter_Variable_1) == 0x00009C, "Member 'WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy, CallFunc_GetCharacterContainerModule_ReturnValue) == 0x0000A0, "Member 'WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy::CallFunc_GetCharacterContainerModule_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy, CallFunc_IsValid_ReturnValue) == 0x0000A8, "Member 'WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy, CallFunc_TryGetContainer_OutContainer) == 0x0000B0, "Member 'WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy::CallFunc_TryGetContainer_OutContainer' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy, CallFunc_TryGetContainer_ReturnValue) == 0x0000B8, "Member 'WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy::CallFunc_TryGetContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy, CallFunc_GetSlots_ReturnValue) == 0x0000C0, "Member 'WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy::CallFunc_GetSlots_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy, CallFunc_Less_IntInt_ReturnValue) == 0x0000D0, "Member 'WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy, CallFunc_Array_Length_ReturnValue_1) == 0x0000E0, "Member 'WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000E4, "Member 'WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E8, "Member 'WBP_Trading_Pal_Buy_C_ExecuteUbergraph_WBP_Trading_Pal_Buy::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function WBP_Trading_Pal_Buy.WBP_Trading_Pal_Buy_C.On Character Container Update
// 0x0008 (0x0008 - 0x0000)
struct WBP_Trading_Pal_Buy_C_On_Character_Container_Update final
{
public:
	class UPalIndividualCharacterContainer*       CharacterContainer;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Pal_Buy_C_On_Character_Container_Update) == 0x000008, "Wrong alignment on WBP_Trading_Pal_Buy_C_On_Character_Container_Update");
static_assert(sizeof(WBP_Trading_Pal_Buy_C_On_Character_Container_Update) == 0x000008, "Wrong size on WBP_Trading_Pal_Buy_C_On_Character_Container_Update");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_On_Character_Container_Update, CharacterContainer) == 0x000000, "Member 'WBP_Trading_Pal_Buy_C_On_Character_Container_Update::CharacterContainer' has a wrong offset!");

// Function WBP_Trading_Pal_Buy.WBP_Trading_Pal_Buy_C.OnCancelAction
// 0x0020 (0x0020 - 0x0000)
struct WBP_Trading_Pal_Buy_C_OnCancelAction final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6572[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Trading_Item_List_C*               CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Pal_Buy_C_OnCancelAction) == 0x000008, "Wrong alignment on WBP_Trading_Pal_Buy_C_OnCancelAction");
static_assert(sizeof(WBP_Trading_Pal_Buy_C_OnCancelAction) == 0x000020, "Wrong size on WBP_Trading_Pal_Buy_C_OnCancelAction");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_OnCancelAction, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_Trading_Pal_Buy_C_OnCancelAction::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_OnCancelAction, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_Trading_Pal_Buy_C_OnCancelAction::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_OnCancelAction, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_Trading_Pal_Buy_C_OnCancelAction::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_OnCancelAction, CallFunc_IsVisible_ReturnValue) == 0x00000C, "Member 'WBP_Trading_Pal_Buy_C_OnCancelAction::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_OnCancelAction, CallFunc_Array_Get_Item) == 0x000010, "Member 'WBP_Trading_Pal_Buy_C_OnCancelAction::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_OnCancelAction, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'WBP_Trading_Pal_Buy_C_OnCancelAction::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_OnCancelAction, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'WBP_Trading_Pal_Buy_C_OnCancelAction::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_Trading_Pal_Buy.WBP_Trading_Pal_Buy_C.OnStoreSlotUpdate
// 0x0010 (0x0010 - 0x0000)
struct WBP_Trading_Pal_Buy_C_OnStoreSlotUpdate final
{
public:
	class UPalIndividualCharacterSlot*            Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalIndividualCharacterHandle*          LastHandle;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Pal_Buy_C_OnStoreSlotUpdate) == 0x000008, "Wrong alignment on WBP_Trading_Pal_Buy_C_OnStoreSlotUpdate");
static_assert(sizeof(WBP_Trading_Pal_Buy_C_OnStoreSlotUpdate) == 0x000010, "Wrong size on WBP_Trading_Pal_Buy_C_OnStoreSlotUpdate");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_OnStoreSlotUpdate, Param_Slot) == 0x000000, "Member 'WBP_Trading_Pal_Buy_C_OnStoreSlotUpdate::Param_Slot' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_OnStoreSlotUpdate, LastHandle) == 0x000008, "Member 'WBP_Trading_Pal_Buy_C_OnStoreSlotUpdate::LastHandle' has a wrong offset!");

// Function WBP_Trading_Pal_Buy.WBP_Trading_Pal_Buy_C.OnTradeComplete
// 0x0010 (0x0010 - 0x0000)
struct WBP_Trading_Pal_Buy_C_OnTradeComplete final
{
public:
	class APalPlayerState*                        PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_Trading_Item_List_C*               CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Pal_Buy_C_OnTradeComplete) == 0x000008, "Wrong alignment on WBP_Trading_Pal_Buy_C_OnTradeComplete");
static_assert(sizeof(WBP_Trading_Pal_Buy_C_OnTradeComplete) == 0x000010, "Wrong size on WBP_Trading_Pal_Buy_C_OnTradeComplete");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_OnTradeComplete, PlayerState) == 0x000000, "Member 'WBP_Trading_Pal_Buy_C_OnTradeComplete::PlayerState' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_OnTradeComplete, CallFunc_Array_Get_Item) == 0x000008, "Member 'WBP_Trading_Pal_Buy_C_OnTradeComplete::CallFunc_Array_Get_Item' has a wrong offset!");

// Function WBP_Trading_Pal_Buy.WBP_Trading_Pal_Buy_C.OnTradeHovered
// 0x01A0 (0x01A0 - 0x0000)
struct WBP_Trading_Pal_Buy_C_OnTradeHovered final
{
public:
	int32                                         TradeIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6573[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLocalizedText_ReturnValue;             // 0x0008(0x0018)()
	class UPalCharacterManager*                   CallFunc_GetCharacterManager_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Vector2D_One_ReturnValue;                 // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalHUDService*                         CallFunc_GetHUDService_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPalPalBoothTradeInfo>          CallFunc_GetTradeInfos_OutTradeInfo;               // 0x0040(0x0010)(ReferenceParm)
	class UWBP_Trading_Item_List_C*               CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FPalPalBoothTradeInfo                  CallFunc_Array_Get_Item_1;                         // 0x0058(0x0070)()
	class UPalIndividualCharacterParameter*       CallFunc_GetIndividualCharacterParameterByIstanceID_ReturnValue; // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPalUICommonItemInfoDisplayData        K2Node_MakeStruct_PalUICommonItemInfoDisplayData;  // 0x00D0(0x00C8)(ContainsInstancedReference)
	class UPalIndividualCharacterHandle*          CallFunc_GetIndividualHandleFromCharacterParameter_ReturnValue; // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Pal_Buy_C_OnTradeHovered) == 0x000008, "Wrong alignment on WBP_Trading_Pal_Buy_C_OnTradeHovered");
static_assert(sizeof(WBP_Trading_Pal_Buy_C_OnTradeHovered) == 0x0001A0, "Wrong size on WBP_Trading_Pal_Buy_C_OnTradeHovered");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_OnTradeHovered, TradeIndex) == 0x000000, "Member 'WBP_Trading_Pal_Buy_C_OnTradeHovered::TradeIndex' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_OnTradeHovered, CallFunc_GetLocalizedText_ReturnValue) == 0x000008, "Member 'WBP_Trading_Pal_Buy_C_OnTradeHovered::CallFunc_GetLocalizedText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_OnTradeHovered, CallFunc_GetCharacterManager_ReturnValue) == 0x000020, "Member 'WBP_Trading_Pal_Buy_C_OnTradeHovered::CallFunc_GetCharacterManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_OnTradeHovered, CallFunc_Vector2D_One_ReturnValue) == 0x000028, "Member 'WBP_Trading_Pal_Buy_C_OnTradeHovered::CallFunc_Vector2D_One_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_OnTradeHovered, CallFunc_GetHUDService_ReturnValue) == 0x000038, "Member 'WBP_Trading_Pal_Buy_C_OnTradeHovered::CallFunc_GetHUDService_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_OnTradeHovered, CallFunc_GetTradeInfos_OutTradeInfo) == 0x000040, "Member 'WBP_Trading_Pal_Buy_C_OnTradeHovered::CallFunc_GetTradeInfos_OutTradeInfo' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_OnTradeHovered, CallFunc_Array_Get_Item) == 0x000050, "Member 'WBP_Trading_Pal_Buy_C_OnTradeHovered::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_OnTradeHovered, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'WBP_Trading_Pal_Buy_C_OnTradeHovered::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_OnTradeHovered, CallFunc_GetIndividualCharacterParameterByIstanceID_ReturnValue) == 0x0000C8, "Member 'WBP_Trading_Pal_Buy_C_OnTradeHovered::CallFunc_GetIndividualCharacterParameterByIstanceID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_OnTradeHovered, K2Node_MakeStruct_PalUICommonItemInfoDisplayData) == 0x0000D0, "Member 'WBP_Trading_Pal_Buy_C_OnTradeHovered::K2Node_MakeStruct_PalUICommonItemInfoDisplayData' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_OnTradeHovered, CallFunc_GetIndividualHandleFromCharacterParameter_ReturnValue) == 0x000198, "Member 'WBP_Trading_Pal_Buy_C_OnTradeHovered::CallFunc_GetIndividualHandleFromCharacterParameter_ReturnValue' has a wrong offset!");

// Function WBP_Trading_Pal_Buy.WBP_Trading_Pal_Buy_C.OnTradeSelected
// 0x0038 (0x0038 - 0x0000)
struct WBP_Trading_Pal_Buy_C_OnTradeSelected final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6574[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Trading_Item_List_C*               CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6575[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Trading_Item_List_C*               CallFunc_Array_Get_Item_1;                         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Pal_Buy_C_OnTradeSelected) == 0x000008, "Wrong alignment on WBP_Trading_Pal_Buy_C_OnTradeSelected");
static_assert(sizeof(WBP_Trading_Pal_Buy_C_OnTradeSelected) == 0x000038, "Wrong size on WBP_Trading_Pal_Buy_C_OnTradeSelected");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_OnTradeSelected, Param_Index) == 0x000000, "Member 'WBP_Trading_Pal_Buy_C_OnTradeSelected::Param_Index' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_OnTradeSelected, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_Trading_Pal_Buy_C_OnTradeSelected::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_OnTradeSelected, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WBP_Trading_Pal_Buy_C_OnTradeSelected::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_OnTradeSelected, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_Trading_Pal_Buy_C_OnTradeSelected::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_OnTradeSelected, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'WBP_Trading_Pal_Buy_C_OnTradeSelected::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_OnTradeSelected, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_Trading_Pal_Buy_C_OnTradeSelected::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_OnTradeSelected, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000020, "Member 'WBP_Trading_Pal_Buy_C_OnTradeSelected::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_OnTradeSelected, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'WBP_Trading_Pal_Buy_C_OnTradeSelected::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_OnTradeSelected, CallFunc_Array_Get_Item_1) == 0x000028, "Member 'WBP_Trading_Pal_Buy_C_OnTradeSelected::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_OnTradeSelected, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'WBP_Trading_Pal_Buy_C_OnTradeSelected::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_Trading_Pal_Buy.WBP_Trading_Pal_Buy_C.OnTradeUnhovered
// 0x0010 (0x0010 - 0x0000)
struct WBP_Trading_Pal_Buy_C_OnTradeUnhovered final
{
public:
	int32                                         TradeIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6576[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalHUDService*                         CallFunc_GetHUDService_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Pal_Buy_C_OnTradeUnhovered) == 0x000008, "Wrong alignment on WBP_Trading_Pal_Buy_C_OnTradeUnhovered");
static_assert(sizeof(WBP_Trading_Pal_Buy_C_OnTradeUnhovered) == 0x000010, "Wrong size on WBP_Trading_Pal_Buy_C_OnTradeUnhovered");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_OnTradeUnhovered, TradeIndex) == 0x000000, "Member 'WBP_Trading_Pal_Buy_C_OnTradeUnhovered::TradeIndex' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_OnTradeUnhovered, CallFunc_GetHUDService_ReturnValue) == 0x000008, "Member 'WBP_Trading_Pal_Buy_C_OnTradeUnhovered::CallFunc_GetHUDService_ReturnValue' has a wrong offset!");

// Function WBP_Trading_Pal_Buy.WBP_Trading_Pal_Buy_C.OnViewDetailInput
// 0x0010 (0x0010 - 0x0000)
struct WBP_Trading_Pal_Buy_C_OnViewDetailInput final
{
public:
	class UPalHUDDispatchParameter_MonsterDetail* CallFunc_CreateDispatchParameterForK2Node_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Pal_Buy_C_OnViewDetailInput) == 0x000008, "Wrong alignment on WBP_Trading_Pal_Buy_C_OnViewDetailInput");
static_assert(sizeof(WBP_Trading_Pal_Buy_C_OnViewDetailInput) == 0x000010, "Wrong size on WBP_Trading_Pal_Buy_C_OnViewDetailInput");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_OnViewDetailInput, CallFunc_CreateDispatchParameterForK2Node_ReturnValue) == 0x000000, "Member 'WBP_Trading_Pal_Buy_C_OnViewDetailInput::CallFunc_CreateDispatchParameterForK2Node_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_OnViewDetailInput, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_Trading_Pal_Buy_C_OnViewDetailInput::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_Trading_Pal_Buy.WBP_Trading_Pal_Buy_C.SetDetailEnable
// 0x0024 (0x0024 - 0x0000)
struct WBP_Trading_Pal_Buy_C_SetDetailEnable final
{
public:
	bool                                          IsEnable;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6577[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPalUIActionBindData                   CallFunc_RegisterActionBinding_ReturnValue;        // 0x0020(0x0004)(NoDestructor)
};
static_assert(alignof(WBP_Trading_Pal_Buy_C_SetDetailEnable) == 0x000004, "Wrong alignment on WBP_Trading_Pal_Buy_C_SetDetailEnable");
static_assert(sizeof(WBP_Trading_Pal_Buy_C_SetDetailEnable) == 0x000024, "Wrong size on WBP_Trading_Pal_Buy_C_SetDetailEnable");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_SetDetailEnable, IsEnable) == 0x000000, "Member 'WBP_Trading_Pal_Buy_C_SetDetailEnable::IsEnable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_SetDetailEnable, Temp_bool_Variable) == 0x000001, "Member 'WBP_Trading_Pal_Buy_C_SetDetailEnable::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_SetDetailEnable, Temp_byte_Variable) == 0x000002, "Member 'WBP_Trading_Pal_Buy_C_SetDetailEnable::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_SetDetailEnable, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_Trading_Pal_Buy_C_SetDetailEnable::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_SetDetailEnable, K2Node_Select_Default) == 0x000004, "Member 'WBP_Trading_Pal_Buy_C_SetDetailEnable::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_SetDetailEnable, CallFunc_MakeLiteralName_ReturnValue) == 0x000008, "Member 'WBP_Trading_Pal_Buy_C_SetDetailEnable::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_SetDetailEnable, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WBP_Trading_Pal_Buy_C_SetDetailEnable::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_SetDetailEnable, CallFunc_RegisterActionBinding_ReturnValue) == 0x000020, "Member 'WBP_Trading_Pal_Buy_C_SetDetailEnable::CallFunc_RegisterActionBinding_ReturnValue' has a wrong offset!");

// Function WBP_Trading_Pal_Buy.WBP_Trading_Pal_Buy_C.Setup
// 0x0098 (0x0098 - 0x0000)
struct WBP_Trading_Pal_Buy_C_Setup final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPalIndividualCharacterSlot* Slot, class UPalIndividualCharacterHandle* LastHandle)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APalPlayerState* PlayerState)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6578[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalMapObjectCharacterContainerModule*  CallFunc_GetCharacterContainerModule_ReturnValue;  // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalPlayerState*                        CallFunc_GetLocalPlayerState_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6579[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIndividualCharacterContainer*       CallFunc_TryGetContainer_OutContainer;             // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetContainer_ReturnValue;              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_657A[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPalIndividualCharacterSlot*>    CallFunc_GetSlots_ReturnValue;                     // 0x0058(0x0010)(ReferenceParm)
	class UPalIndividualCharacterSlot*            CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_657B[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0078(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Pal_Buy_C_Setup) == 0x000008, "Wrong alignment on WBP_Trading_Pal_Buy_C_Setup");
static_assert(sizeof(WBP_Trading_Pal_Buy_C_Setup) == 0x000098, "Wrong size on WBP_Trading_Pal_Buy_C_Setup");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_Setup, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_Trading_Pal_Buy_C_Setup::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_Setup, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_Trading_Pal_Buy_C_Setup::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_Setup, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WBP_Trading_Pal_Buy_C_Setup::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_Setup, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WBP_Trading_Pal_Buy_C_Setup::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_Setup, K2Node_CreateDelegate_OutputDelegate_1) == 0x00001C, "Member 'WBP_Trading_Pal_Buy_C_Setup::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_Setup, CallFunc_GetCharacterContainerModule_ReturnValue) == 0x000030, "Member 'WBP_Trading_Pal_Buy_C_Setup::CallFunc_GetCharacterContainerModule_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_Setup, CallFunc_GetLocalPlayerState_ReturnValue) == 0x000038, "Member 'WBP_Trading_Pal_Buy_C_Setup::CallFunc_GetLocalPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_Setup, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'WBP_Trading_Pal_Buy_C_Setup::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_Setup, CallFunc_TryGetContainer_OutContainer) == 0x000048, "Member 'WBP_Trading_Pal_Buy_C_Setup::CallFunc_TryGetContainer_OutContainer' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_Setup, CallFunc_TryGetContainer_ReturnValue) == 0x000050, "Member 'WBP_Trading_Pal_Buy_C_Setup::CallFunc_TryGetContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_Setup, CallFunc_GetSlots_ReturnValue) == 0x000058, "Member 'WBP_Trading_Pal_Buy_C_Setup::CallFunc_GetSlots_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_Setup, CallFunc_Array_Get_Item) == 0x000068, "Member 'WBP_Trading_Pal_Buy_C_Setup::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_Setup, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'WBP_Trading_Pal_Buy_C_Setup::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_Setup, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'WBP_Trading_Pal_Buy_C_Setup::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_Setup, K2Node_CreateDelegate_OutputDelegate_2) == 0x000078, "Member 'WBP_Trading_Pal_Buy_C_Setup::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_Setup, K2Node_CreateDelegate_OutputDelegate_3) == 0x000088, "Member 'WBP_Trading_Pal_Buy_C_Setup::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");

// Function WBP_Trading_Pal_Buy.WBP_Trading_Pal_Buy_C.Switch Trading Panel
// 0x0168 (0x0168 - 0x0000)
struct WBP_Trading_Pal_Buy_C_Switch_Trading_Panel final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_657C[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalPalBoothTradeInfo                  TempTradeInfo;                                     // 0x0008(0x0070)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_657D[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPalPalBoothTradeInfo>          CallFunc_GetTradeInfos_OutTradeInfo;               // 0x0080(0x0010)(ReferenceParm)
	class UPalIndividualCharacterParameter*       CallFunc_GetIndividualCharacterParameterByIstanceID_ReturnValue; // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_657E[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetNickName_outName;                      // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00B0(0x0018)()
	int32                                         CallFunc_GetLevel_ReturnValue;                     // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_657F[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00D0(0x0018)()
	class FName                                   CallFunc_GetCharacterID_ReturnValue;               // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetDesiredFocusTarget_ReturnValue;        // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FPalPalBoothTradeInfo                  CallFunc_Array_Get_Item;                           // 0x00F8(0x0070)()
};
static_assert(alignof(WBP_Trading_Pal_Buy_C_Switch_Trading_Panel) == 0x000008, "Wrong alignment on WBP_Trading_Pal_Buy_C_Switch_Trading_Panel");
static_assert(sizeof(WBP_Trading_Pal_Buy_C_Switch_Trading_Panel) == 0x000168, "Wrong size on WBP_Trading_Pal_Buy_C_Switch_Trading_Panel");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_Switch_Trading_Panel, Visible) == 0x000000, "Member 'WBP_Trading_Pal_Buy_C_Switch_Trading_Panel::Visible' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_Switch_Trading_Panel, TempTradeInfo) == 0x000008, "Member 'WBP_Trading_Pal_Buy_C_Switch_Trading_Panel::TempTradeInfo' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_Switch_Trading_Panel, Temp_bool_Variable) == 0x000078, "Member 'WBP_Trading_Pal_Buy_C_Switch_Trading_Panel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_Switch_Trading_Panel, Temp_byte_Variable) == 0x000079, "Member 'WBP_Trading_Pal_Buy_C_Switch_Trading_Panel::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_Switch_Trading_Panel, Temp_byte_Variable_1) == 0x00007A, "Member 'WBP_Trading_Pal_Buy_C_Switch_Trading_Panel::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_Switch_Trading_Panel, K2Node_Select_Default) == 0x00007B, "Member 'WBP_Trading_Pal_Buy_C_Switch_Trading_Panel::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_Switch_Trading_Panel, CallFunc_GetTradeInfos_OutTradeInfo) == 0x000080, "Member 'WBP_Trading_Pal_Buy_C_Switch_Trading_Panel::CallFunc_GetTradeInfos_OutTradeInfo' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_Switch_Trading_Panel, CallFunc_GetIndividualCharacterParameterByIstanceID_ReturnValue) == 0x000090, "Member 'WBP_Trading_Pal_Buy_C_Switch_Trading_Panel::CallFunc_GetIndividualCharacterParameterByIstanceID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_Switch_Trading_Panel, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'WBP_Trading_Pal_Buy_C_Switch_Trading_Panel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_Switch_Trading_Panel, CallFunc_GetNickName_outName) == 0x0000A0, "Member 'WBP_Trading_Pal_Buy_C_Switch_Trading_Panel::CallFunc_GetNickName_outName' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_Switch_Trading_Panel, CallFunc_Conv_StringToText_ReturnValue) == 0x0000B0, "Member 'WBP_Trading_Pal_Buy_C_Switch_Trading_Panel::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_Switch_Trading_Panel, CallFunc_GetLevel_ReturnValue) == 0x0000C8, "Member 'WBP_Trading_Pal_Buy_C_Switch_Trading_Panel::CallFunc_GetLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_Switch_Trading_Panel, CallFunc_Conv_IntToText_ReturnValue) == 0x0000D0, "Member 'WBP_Trading_Pal_Buy_C_Switch_Trading_Panel::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_Switch_Trading_Panel, CallFunc_GetCharacterID_ReturnValue) == 0x0000E8, "Member 'WBP_Trading_Pal_Buy_C_Switch_Trading_Panel::CallFunc_GetCharacterID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_Switch_Trading_Panel, CallFunc_GetDesiredFocusTarget_ReturnValue) == 0x0000F0, "Member 'WBP_Trading_Pal_Buy_C_Switch_Trading_Panel::CallFunc_GetDesiredFocusTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_Switch_Trading_Panel, CallFunc_Array_Get_Item) == 0x0000F8, "Member 'WBP_Trading_Pal_Buy_C_Switch_Trading_Panel::CallFunc_Array_Get_Item' has a wrong offset!");

// Function WBP_Trading_Pal_Buy.WBP_Trading_Pal_Buy_C.UpdateSellList
// 0x00D0 (0x00D0 - 0x0000)
struct WBP_Trading_Pal_Buy_C_UpdateSellList final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6580[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Trading_Item_List_C*               CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6581[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPalPalBoothTradeInfo>          CallFunc_GetTradeInfos_OutTradeInfo;               // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6582[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalPalBoothTradeInfo                  CallFunc_Array_Get_Item_1;                         // 0x0040(0x0070)()
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6583[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIndividualCharacterSlot*            CallFunc_GetBoothPalByIndividualId_ReturnValue;    // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6584[0x2];                                     // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Pal_Buy_C_UpdateSellList) == 0x000008, "Wrong alignment on WBP_Trading_Pal_Buy_C_UpdateSellList");
static_assert(sizeof(WBP_Trading_Pal_Buy_C_UpdateSellList) == 0x0000D0, "Wrong size on WBP_Trading_Pal_Buy_C_UpdateSellList");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_UpdateSellList, Temp_byte_Variable) == 0x000000, "Member 'WBP_Trading_Pal_Buy_C_UpdateSellList::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_UpdateSellList, Temp_bool_Variable) == 0x000001, "Member 'WBP_Trading_Pal_Buy_C_UpdateSellList::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_UpdateSellList, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_Trading_Pal_Buy_C_UpdateSellList::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_UpdateSellList, Temp_byte_Variable_2) == 0x000003, "Member 'WBP_Trading_Pal_Buy_C_UpdateSellList::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_UpdateSellList, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_Trading_Pal_Buy_C_UpdateSellList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_UpdateSellList, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WBP_Trading_Pal_Buy_C_UpdateSellList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_UpdateSellList, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WBP_Trading_Pal_Buy_C_UpdateSellList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_UpdateSellList, Temp_byte_Variable_3) == 0x000010, "Member 'WBP_Trading_Pal_Buy_C_UpdateSellList::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_UpdateSellList, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_Trading_Pal_Buy_C_UpdateSellList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_UpdateSellList, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_Trading_Pal_Buy_C_UpdateSellList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_UpdateSellList, Temp_bool_Variable_1) == 0x000024, "Member 'WBP_Trading_Pal_Buy_C_UpdateSellList::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_UpdateSellList, CallFunc_Less_IntInt_ReturnValue) == 0x000025, "Member 'WBP_Trading_Pal_Buy_C_UpdateSellList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_UpdateSellList, CallFunc_GetTradeInfos_OutTradeInfo) == 0x000028, "Member 'WBP_Trading_Pal_Buy_C_UpdateSellList::CallFunc_GetTradeInfos_OutTradeInfo' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_UpdateSellList, CallFunc_Array_Length_ReturnValue_1) == 0x000038, "Member 'WBP_Trading_Pal_Buy_C_UpdateSellList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_UpdateSellList, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'WBP_Trading_Pal_Buy_C_UpdateSellList::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_UpdateSellList, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B0, "Member 'WBP_Trading_Pal_Buy_C_UpdateSellList::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_UpdateSellList, CallFunc_GetBoothPalByIndividualId_ReturnValue) == 0x0000B8, "Member 'WBP_Trading_Pal_Buy_C_UpdateSellList::CallFunc_GetBoothPalByIndividualId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_UpdateSellList, K2Node_Select_Default) == 0x0000C0, "Member 'WBP_Trading_Pal_Buy_C_UpdateSellList::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_UpdateSellList, CallFunc_IsValid_ReturnValue) == 0x0000C1, "Member 'WBP_Trading_Pal_Buy_C_UpdateSellList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_UpdateSellList, CallFunc_SelectInt_ReturnValue) == 0x0000C4, "Member 'WBP_Trading_Pal_Buy_C_UpdateSellList::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_UpdateSellList, CallFunc_Array_IsEmpty_ReturnValue) == 0x0000C8, "Member 'WBP_Trading_Pal_Buy_C_UpdateSellList::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_UpdateSellList, K2Node_Select_Default_1) == 0x0000C9, "Member 'WBP_Trading_Pal_Buy_C_UpdateSellList::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_Trading_Pal_Buy.WBP_Trading_Pal_Buy_C.BP_GetDesiredFocusTarget
// 0x0010 (0x0010 - 0x0000)
struct WBP_Trading_Pal_Buy_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Trading_Pal_Buy_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_Trading_Pal_Buy_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_Trading_Pal_Buy_C_BP_GetDesiredFocusTarget) == 0x000010, "Wrong size on WBP_Trading_Pal_Buy_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_Trading_Pal_Buy_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Trading_Pal_Buy_C_BP_GetDesiredFocusTarget, CallFunc_IsVisible_ReturnValue) == 0x000008, "Member 'WBP_Trading_Pal_Buy_C_BP_GetDesiredFocusTarget::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

}

